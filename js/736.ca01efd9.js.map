{"version":3,"file":"js/736.ca01efd9.js","mappings":"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","sources":["webpack://new-web/./node_modules/@videojs/xhr/lib/http-handler.js","webpack://new-web/./node_modules/@videojs/xhr/lib/index.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/conventions.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/dom-parser.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/dom.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/entities.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/index.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/sax.js","webpack://new-web/./node_modules/global/document.js","webpack://new-web/./node_modules/global/window.js","webpack://new-web/./node_modules/is-function/index.js","webpack://new-web/./node_modules/keycode/index.js","webpack://new-web/./node_modules/mux.js/lib/tools/parse-sidx.js","webpack://new-web/./node_modules/mux.js/lib/utils/clock.js","webpack://new-web/./node_modules/mux.js/lib/utils/numbers.js","webpack://new-web/./node_modules/safe-json-parse/tuple.js","webpack://new-web/./node_modules/url-toolkit/src/url-toolkit.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://new-web/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://new-web/./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","webpack://new-web/./node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://new-web/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/codecs.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/media-types.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/byte-helpers.js","webpack://new-web/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://new-web/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/media-groups.js","webpack://new-web/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://new-web/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/mp4-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/id3-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/opus-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/ebml-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/nal-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/containers.js","webpack://new-web/./node_modules/video.js/dist/video.es.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://new-web/./node_modules/core-js/internals/regexp-flags.js","webpack://new-web/./node_modules/core-js/internals/validate-arguments-length.js","webpack://new-web/./node_modules/core-js/modules/es.regexp.flags.js","webpack://new-web/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://new-web/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://new-web/./node_modules/core-js/modules/web.url-search-params.size.js","webpack://new-web/./node_modules/@babel/runtime/helpers/extends.js"],"sourcesContent":["\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 6.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const daterangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.daterange = this.manifest.daterange || [];\n              this.manifest.daterange.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.daterange.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const daterange = this.manifest.daterange[index];\n\n              if (daterange.endDate && daterange.startDate && new Date(daterange.endDate) < new Date(daterange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (daterange.duration && daterange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (daterange.plannedDuration && daterange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!daterange.endOnNext;\n\n              if (endOnNextYes && !daterange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (daterange.duration || daterange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (daterange.duration && daterange.endDate) {\n                const startDate = daterange.startDate;\n                const newDateInSeconds = startDate.setSeconds(startDate.getSeconds() + daterange.duration);\n                this.manifest.daterange[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (daterange && !this.manifest.dateTimeString) {\n                this.trigger('warn', {\n                  message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n                });\n              }\n\n              if (!daterangeTags[daterange.id]) {\n                daterangeTags[daterange.id] = daterange;\n              } else {\n                for (const attribute in daterangeTags[daterange.id]) {\n                  if (daterangeTags[daterange.id][attribute] !== daterange[attribute]) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes and same attribute values'\n                    });\n                    break;\n                  }\n                }\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name mpd-parser @version 1.2.2 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.2.2\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  // Break out playlists into groups based on their baseUrl\n  const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n    if (!acc[cur.attributes.baseUrl]) {\n      acc[cur.attributes.baseUrl] = [];\n    }\n\n    acc[cur.attributes.baseUrl].push(cur);\n    return acc;\n  }, {});\n  let allPlaylists = [];\n  Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n    const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    allPlaylists = allPlaylists.concat(mergedPlaylists);\n  });\n  return allPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  const vttPlaylist = {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.serviceLocation) {\n    vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  return vttPlaylist;\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  contentSteering,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (contentSteering) {\n    manifest.contentSteering = contentSteering;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {Object[]} references\n *        List of objects containing the reference URL as well as its attributes\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {Object[]}\n *         List of objects with resolved urls and attributes\n */\n\nconst buildBaseUrls = (references, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return references;\n  }\n\n  return flatten(references.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      const initialBaseUrl = getContent(baseUrlElement);\n      const resolvedBaseUrl = resolveUrl(reference.baseUrl, initialBaseUrl);\n      const finalBaseUrl = merge(parseAttributes(baseUrlElement), {\n        baseUrl: resolvedBaseUrl\n      }); // If the URL is resolved, we want to get the serviceLocation from the reference\n      // assuming there is no serviceLocation on the initialBaseUrl\n\n      if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n        finalBaseUrl.serviceLocation = reference.serviceLocation;\n      }\n\n      return finalBaseUrl;\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {Object[]} adaptationSetBaseUrls\n *        List of objects containing resolved base URLs and attributes\n *        inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, baseUrl)\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {Object[]} periodBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n  * @param {Object[]} mpdBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Tranforms an array of content steering nodes into an object\n * containing CDN content steering information from the MPD manifest.\n *\n * For more information on the DASH spec for Content Steering parsing, see:\n * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {Node[]} contentSteeringNodes\n *        Content steering nodes\n * @param {Function} eventHandler\n *        The event handler passed into the parser options to handle warnings\n * @return {Object}\n *        Object containing content steering data\n */\n\nconst generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n  // If there are more than one ContentSteering tags, throw an error\n  if (contentSteeringNodes.length > 1) {\n    eventHandler({\n      type: 'warn',\n      message: 'The MPD manifest should contain no more than one ContentSteering tag'\n    });\n  } // Return a null value if there are no ContentSteering tags\n\n\n  if (!contentSteeringNodes.length) {\n    return null;\n  }\n\n  const infoFromContentSteeringTag = merge({\n    serverURL: getContent(contentSteeringNodes[0])\n  }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n  // to `false` if it doesn't exist\n\n  infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n  return infoFromContentSteeringTag;\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0,\n    // TODO: For now, we are expecting an eventHandler callback function\n    // to be passed into the mpd parser as an option.\n    // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n    // This will support new features including a standardized event handler.\n    // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n    // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n    eventHandler = function () {}\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([{\n    baseUrl: manifestUri\n  }], findChildren(mpd, 'BaseURL'));\n  const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n    // TODO: There are occurences where this `representationInfo` array contains undesired\n    // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n    // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n    // parent BaseURL and a child BaseURL, and the value does not resolve,\n    // we end up returning the child BaseURL multiple times.\n    // We need to determine a way to remove these duplicates in a safe way.\n    // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throws on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    contentSteering: parsedManifestInfo.contentSteeringInfo,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.6.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.6.1\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} name\n *         The name of the console method to use.\n *\n * @param  {Object} log\n *         The arguments to be passed to the matching console method.\n *\n * @param {string} [styles]\n *        styles for name\n */\nconst LogByTypeFactory = (name, log, styles) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  let resultName = name;\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n  if (styles) {\n    resultName = `%c${name}`;\n    args.unshift(styles);\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(resultName + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name, delimiter = ':', styles = '') {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log, styles);\n\n  /**\n   * Create a new subLogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} subName\n   *        The name to add call the new logger\n   * @param {string} [subDelimiter]\n   *        Optional delimiter\n   * @param {string} [subStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createLogger = (subName, subDelimiter, subStyles) => {\n    const resultDelimiter = subDelimiter !== undefined ? subDelimiter : delimiter;\n    const resultStyles = subStyles !== undefined ? subStyles : styles;\n    const resultName = `${name} ${resultDelimiter} ${subName}`;\n    return createLogger$1(resultName, resultDelimiter, resultStyles);\n  };\n\n  /**\n   * Create a new logger.\n   *\n   * @param {string} newName\n   *        The name for the new logger\n   * @param {string} [newDelimiter]\n   *        Optional delimiter\n   * @param {string} [newStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createNewLogger = (newName, newDelimiter, newStyles) => {\n    return createLogger$1(newName, newDelimiter, newStyles);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Returns an array of values for a given object\n *\n * @param  {Object} source - target object\n * @return {Array<unknown>} - object values\n */\nfunction values(source = {}) {\n  const result = [];\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  values: values,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {HTMLElement} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ['autoplay', 'controls', 'playsinline', 'loop', 'muted', 'default', 'defaultMuted'];\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      /** @type {boolean|string} */\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (knownBooleans.includes(attrName)) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {MouseEvent} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\n/**\n * Copy document style sheets to another window.\n *\n * @param    {Window} win\n *           The window element you want to copy the document style sheets to.\n *\n */\nfunction copyStyleSheetsToWindow(win) {\n  [...document.styleSheets].forEach(styleSheet => {\n    try {\n      const cssRules = [...styleSheet.cssRules].map(rule => rule.cssText).join('');\n      const style = document.createElement('style');\n      style.textContent = cssRules;\n      win.document.head.appendChild(style);\n    } catch (e) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = styleSheet.type;\n      // For older Safari this has to be the string; on other browsers setting the MediaList works\n      link.media = styleSheet.media.mediaText;\n      link.href = styleSheet.href;\n      win.document.head.appendChild(link);\n    }\n  });\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle,\n  copyStyleSheetsToWindow: copyStyleSheetsToWindow\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string[]} types\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @protected\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} target\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {}\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {}\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * @param {Object} [hash]\n   *        Optionally extra argument to pass through to an event listener\n   */\n  trigger(event, hash) {}\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return { import('./player').default }\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Adds an SVG icon element to another element or component.\n   *\n   * @param {string} iconName\n   *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on. Defaults to the current Component's element.\n   *\n   * @return {Element}\n   *        The newly created icon element.\n   */\n  setIcon(iconName, el = this.el()) {\n    // TODO: In v9 of video.js, we will want to remove font icons entirely.\n    // This means this check, as well as the others throughout the code, and\n    // the unecessary CSS for font icons, will need to be removed.\n    // See https://github.com/videojs/video.js/pull/8260 as to which components\n    // need updating.\n    if (!this.player_.options_.experimentalSvgIcons) {\n      return;\n    }\n    const xmlnsURL = 'http://www.w3.org/2000/svg';\n\n    // The below creates an element in the format of:\n    // <span><svg><use>....</use></svg></span>\n    const iconContainer = createEl('span', {\n      className: 'vjs-icon-placeholder vjs-svg-icon'\n    }, {\n      'aria-hidden': 'true'\n    });\n    const svgEl = document.createElementNS(xmlnsURL, 'svg');\n    svgEl.setAttributeNS(null, 'viewBox', '0 0 512 512');\n    const useEl = document.createElementNS(xmlnsURL, 'use');\n    svgEl.appendChild(useEl);\n    useEl.setAttributeNS(null, 'href', `#vjs-icon-${iconName}`);\n    iconContainer.appendChild(svgEl);\n\n    // Replace a pre-existing icon if one exists.\n    if (this.iconIsSet_) {\n      el.replaceChild(iconContainer, el.querySelector('.vjs-icon-placeholder'));\n    } else {\n      el.appendChild(iconContainer);\n    }\n    this.iconIsSet_ = true;\n    return iconContainer;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The width when getting, zero if there is no width\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The height when getting, zero if there is no height\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @protected\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param { import('./time').TimeRange } buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param { import('../tech/tech').default } tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  { import('./utils/dom').ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return { import('./utils/dom').ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { import('./track').default[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param { import('./track').default } track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param { import('./track').default } rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return { import('./track').default }\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @protected\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param { import('./audio-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./audio-track').default[] } [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param { import('./audio-track').default } track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param { import('./video-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param { import('./video-track').default } track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param { import('./text-track').default } track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n\n    // Testing if the cue is a VTTCue in a way that survives minification\n    if (!('getCueAsHTML' in cue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n * @protected\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\n\n/**\n * @protected\n */\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param { import('../player').default } player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param { import('../tech/tech').default } tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param { import('../player').default } player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\nvar icons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <defs>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play\\\">\\n      <path d=\\\"M16 10v28l22-14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-pause\\\">\\n      <path d=\\\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-audio\\\">\\n      <path d=\\\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-captions\\\">\\n      <path d=\\\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-subtitles\\\">\\n      <path d=\\\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-enter\\\">\\n      <path d=\\\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-exit\\\">\\n      <path d=\\\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play-circle\\\">\\n      <path d=\\\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-mute\\\">\\n      <path d=\\\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-low\\\">\\n      <path d=\\\"M14 18v12h8l10 10V8L22 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-medium\\\">\\n      <path d=\\\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-high\\\">\\n      <path d=\\\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-spinner\\\">\\n      <path d=\\\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 24 24\\\" id=\\\"vjs-icon-hd\\\">\\n      <path d=\\\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-chapters\\\">\\n      <path d=\\\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 40 40\\\" id=\\\"vjs-icon-downloading\\\">\\n      <path d=\\\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download\\\">\\n      <path d=\\\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-done\\\">\\n      <path d=\\\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-off\\\">\\n      <path d=\\\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-share\\\">\\n      <path d=\\\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cog\\\">\\n      <path d=\\\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-square\\\">\\n      <path d=\\\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle\\\">\\n      <circle cx=\\\"24\\\" cy=\\\"24\\\" r=\\\"20\\\"></circle>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-outline\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-inner-circle\\\">\\n      <path d=\\\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cancel\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-replay\\\">\\n      <path d=\\\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-repeat\\\">\\n      <path d=\\\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-5\\\">\\n      <path d=\\\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-10\\\">\\n      <path d=\\\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-30\\\">\\n      <path d=\\\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-5\\\">\\n      <path d=\\\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-10\\\">\\n      <path d=\\\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-30\\\">\\n      <path d=\\\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 512 512\\\" id=\\\"vjs-icon-audio-description\\\">\\n      <g fill-rule=\\\"evenodd\\\"><path d=\\\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\\\"></path><path d=\\\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\\\"></path></g>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-next-item\\\">\\n      <path d=\\\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-previous-item\\\">\\n      <path d=\\\"M12 12h4v24h-4zm7 12l17 12V12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-shuffle\\\">\\n      <path d=\\\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cast\\\">\\n      <path d=\\\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-picture-in-picture-enter\\\">\\n      <path d=\\\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 22 18\\\" id=\\\"vjs-icon-picture-in-picture-exit\\\">\\n      <path d=\\\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\\\"></path>\\n      <path fill=\\\"none\\\" d=\\\"M-1-3h24v24H-1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-facebook\\\">\\n      <path d=\\\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-linkedin\\\">\\n      <path d=\\\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-twitter\\\">\\n      <path d=\\\"M1684 408q-67 98-162 167 1 14 1 42 0 130-38 259.5T1369.5 1125 1185 1335.5t-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5T285 1033q33 5 61 5 43 0 85-11-112-23-185.5-111.5T172 710v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5T884 653q-8-38-8-74 0-134 94.5-228.5T1199 256q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-tumblr\\\">\\n      <path d=\\\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-pinterest\\\">\\n      <path d=\\\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\\\"></path>\\n    </symbol>\\n  </defs>\\n</svg>\";\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * Converts the CSS top/right/bottom/left property numeric value to string in pixels.\n *\n * @param {number} position\n *        The CSS top/right/bottom/left property value.\n *\n * @return {string}\n *          The CSS property value that was created, like '10px'.\n *\n * @private\n */\nfunction getCSSPositionValue(position) {\n  return position ? `${position}px` : '';\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayTextHandler = e => this.updateDisplay(e);\n    const updateDisplayHandler = e => {\n      this.updateDisplayOverlay();\n      this.updateDisplay(e);\n    };\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayTextHandler);\n    player.on('loadedmetadata', e => {\n      this.updateDisplayOverlay();\n      this.preselectTrack(e);\n    });\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Updates the displayed TextTrack to be sure it overlays the video when a either\n   * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.\n   */\n  updateDisplayOverlay() {\n    // inset-inline and inset-block are not supprted on old chrome, but these are\n    // only likely to be used on TV devices\n    if (!this.player_.videoHeight() || !window$1.CSS.supports('inset-inline: 10px')) {\n      return;\n    }\n    const playerWidth = this.player_.currentWidth();\n    const playerHeight = this.player_.currentHeight();\n    const playerAspectRatio = playerWidth / playerHeight;\n    const videoAspectRatio = this.player_.videoWidth() / this.player_.videoHeight();\n    let insetInlineMatch = 0;\n    let insetBlockMatch = 0;\n    if (Math.abs(playerAspectRatio - videoAspectRatio) > 0.1) {\n      if (playerAspectRatio > videoAspectRatio) {\n        insetInlineMatch = Math.round((playerWidth - playerHeight * videoAspectRatio) / 2);\n      } else {\n        insetBlockMatch = Math.round((playerHeight - playerWidth / videoAspectRatio) / 2);\n      }\n    }\n    tryUpdateStyle(this.el_, 'insetInline', getCSSPositionValue(insetInlineMatch));\n    tryUpdateStyle(this.el_, 'insetBlock', getCSSPositionValue(insetBlockMatch));\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.setIcon('play');\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent|MouseEvent|TouchEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && 'clientX' in event && 'clientY' in event) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `BigPlayButton` receives a\n   * `keydown` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n\n  /**\n   * Handle `mousedown` events on the `BigPlayButton`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  { import('./player').default } player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('cancel');\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.setIcon('play');\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.setIcon('pause');\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.setIcon('play');\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.setIcon('replay');\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.setIcon('circle', el);\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param { import('../player').default } player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('circle');\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event) || isNaN(this.player_.duration())) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('picture-in-picture-enter');\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => this.handlePictureInPictureAudioModeChange());\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Displays or hides the button depending on the audio mode detection.\n   * Exits picture-in-picture if it is enabled when switching to audio mode.\n   */\n  handlePictureInPictureAudioModeChange() {\n    // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n    const isSourceAudio = this.player_.currentType().substring(0, 5) === 'audio';\n    const isAudioMode = isSourceAudio || this.player_.audioPosterMode() || this.player_.audioOnlyMode();\n    if (!isAudioMode) {\n      this.show();\n      return;\n    }\n    if (this.player_.isInPictureInPicture()) {\n      this.player_.exitPictureInPicture();\n    }\n    this.hide();\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.setIcon('picture-in-picture-exit');\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.setIcon('picture-in-picture-enter');\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.\n   */\n  show() {\n    // Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.\n    if (typeof document.exitPictureInPicture !== 'function') {\n      return;\n    }\n    super.show();\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('fullscreen-enter');\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n      this.setIcon('fullscreen-exit');\n    } else {\n      this.controlText('Fullscreen');\n      this.setIcon('fullscreen-enter');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param { import('../../component').default } self\n *        The component that should be hidden if volume is unsupported\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    this.setIcon('circle', el);\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param { import('../../component').default } self\n *        A reference to the mute toggle button\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n    this.setIcon('volume-high');\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      this.setIcon('volume-mute');\n      level = 0;\n    } else if (vol < 0.33) {\n      this.setIcon('volume-low');\n      level = 1;\n    } else if (vol < 0.67) {\n      this.setIcon('volume-medium');\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`forward-${this.skipTime}`);\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    if (isNaN(this.player_.duration())) {\n      return;\n    }\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`replay-${this.skipTime}`);\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {KeyboardEvent} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Overwrites the `setIcon` method from `Component`.\n   * In this case, we want the icon to be appended to the menuButton.\n   *\n   * @param {string} name\n   *         The icon name to be added.\n   */\n  setIcon(name) {\n    super.setIcon(name, this.menuButton_.el_);\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    const menuItemEl = createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    });\n\n    // If using SVG icons, the element with vjs-icon-placeholder will be added separately.\n    if (this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(menuItemEl);\n    } else {\n      el.replaceChild(menuItemEl, el.querySelector('.vjs-icon-placeholder'));\n    }\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning off a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('chapters');\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return { import('../../menu/menu').default }\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  { import('./text-track-menu-item').default[] }\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('audio-description');\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('subtitles');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('captions');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      if (this.player_.options_.experimentalSvgIcons) {\n        this.setIcon('captions', el);\n      } else {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    this.setIcon('subtitles');\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n      this.setIcon('captions');\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (['main-desc', 'description'].indexOf(this.options_.track.kind) >= 0) {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n    this.setIcon('audio');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => this.open(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Drop shadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', '<span class=\"vjs-text-color\">', this.createElSelect_('color', legendId), '</span>', '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text Background'), '</legend>', '<span class=\"vjs-bg-color\">', this.createElSelect_('backgroundColor', legendId), '</span>', '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Caption Area Background'), '</legend>', '<span class=\"vjs-window-color\">', this.createElSelect_('windowColor', legendId), '</span>', '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param { import('./html5').default } tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recommended)\n * 2. By using it directly via `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Function} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    // also here.. probably better\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    /** @type string */\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    /** @type {boolean} */\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    if (options.experimentalSvgIcons) {\n      // Add SVG Sprite to the DOM\n      const parser = new window$1.DOMParser();\n      const parsedSVG = parser.parseFromString(icons, 'image/svg+xml');\n      const errorNode = parsedSVG.querySelector('parsererror');\n      if (errorNode) {\n        log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');\n        this.options_.experimentalSvgIcons = null;\n      } else {\n        const sprite = parsedSVG.documentElement;\n        sprite.style.display = 'none';\n        this.el_.appendChild(sprite);\n        this.addClass('vjs-svg-icons-enabled');\n      }\n    }\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s width to.\n   *\n   * @return {number|undefined}\n   *         - The current width of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s height to.\n   *\n   * @return {number|undefined}\n   *         - The current height of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number|string} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet_('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    if (error) {\n      this.error(error);\n    }\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} [arg]\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Sets or returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean|undefined}\n   *         - The value of scrubbing when getting\n   *         - Nothing when setting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number|undefined}\n   *         - the current time in seconds when getting\n   *         - Nothing when setting\n   */\n  currentTime(seconds) {\n    if (seconds === undefined) {\n      // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit after all.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    if (seconds < 0) {\n      seconds = 0;\n    }\n    if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n      this.cache_.initTime = seconds;\n      this.off('canplay', this.boundApplyInitTime_);\n      this.one('canplay', this.boundApplyInitTime_);\n      return;\n    }\n    this.techCall_('setCurrentTime', seconds);\n    this.cache_.initTime = 0;\n    if (isFinite(seconds)) {\n      this.cache_.currentTime = Number(seconds);\n    }\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|undefined}\n   *         - The duration of the video in seconds when getting\n   *         - Nothing when setting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, percentAsDecimal));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - nothing if setting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - Nothing when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         - The current value of lastVolume as a percent when getting\n   *         - Nothing when setting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|undefined}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - Nothing when setting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Get or set disable Picture-in-Picture mode.\n   *\n   * @param {boolean} [value]\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean|undefined}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   *         - nothing if setting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        width: this.videoWidth(),\n        height: this.videoHeight()\n      }).then(pipWindow => {\n        copyStyleSheetsToWindow(pipWindow);\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.appendChild(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger('enterpictureinpicture');\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('pagehide', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.parentNode.replaceChild(pipVideo, pipContainer);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} [isRetry]\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    // Workaround to use the load method with the VHS.\n    // Does not cover the case when the load method is called directly from the mediaElement.\n    if (this.tech_ && this.tech_.vhs) {\n      this.src(this.currentSource());\n      return;\n    }\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {'none'|'auto'|'metadata'} [value]\n   *        Preload mode to pass to tech\n   *\n   * @return {string|undefined}\n   *         - The preload attribute value when getting\n   *         - Nothing when setting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|'play'|'muted'|'any'} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string|undefined}\n   *         - The current value of autoplay when getting\n   *         - Nothing when setting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|undefined}\n   *         - the current value of playsinline\n   *         - Nothing when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean|undefined}\n   *         - The current value of loop when getting\n   *         - Nothing when setting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|undefined}\n   *         - The current value of poster when getting\n   *         - Nothing when setting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of controls when getting\n   *         - Nothing when setting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of native controls when getting\n   *         - Nothing when setting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|undefined}\n   *         - The current MediaError when getting (or null)\n   *         - Nothing when setting\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = null;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean|undefined}\n   *         - The current value of userActive when getting\n   *         - Nothing when setting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n\n    /** @this Player */\n    const activityCheck = function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    };\n    this.setInterval(activityCheck, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The current playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The default playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} [bool]\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean|undefined}\n   *         - The current value of isAudio when getting\n   *         - Nothing when setting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return { import('./tracks/html-track-element').default }\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * Set or get the player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|undefined}\n   *         - The current language code when getting\n   *         - Nothing when setting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} [value]\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean|undefined}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   *         Nothing if setting\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    const crossOrigin = this.crossOrigin();\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (crossOrigin) {\n      this.crossOrigin(crossOrigin);\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   * @return {boolean|undefined}\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * @typedef  {Object} PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  // If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body\n  // always returns false. Instead, use the Shadow DOM root.\n  const inShadowDom = 'getRootNode' in el ? el.getRootNode() instanceof window$1.ShadowRoot : false;\n  const rootNode = inShadowDom ? el.getRootNode() : el.ownerDocument.body;\n  if (!el.ownerDocument.defaultView || !rootNode.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {typeof Component} comp\n *        The component class\n *\n * @return {typeof Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  return Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n*\n * @param {typeof Plugin|Function} plugin\n *         The plugin sub-class or function\n *\n * @return {typeof Plugin|Function}\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 4.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  /**\n   * Creates a QualityLevelList.\n   */\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    list[Symbol.iterator] = () => list.levels_.values();\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"4.0.0\";\n\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @return {QualityLevelList} a list of QualityLevels\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @return {QualityLevelList} a list of QualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.obj.merge({}, options));\n}; // Register the plugin with video.js.\n\nvideojs.registerPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.7.0 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n/**\n * Converts any buffered time range to a descriptive string\n *\n * @param {TimeRanges} buffered - time ranges\n * @return {string} - descriptive string\n */\n\nfunction prettyBuffered(buffered) {\n  let result = '';\n  for (let i = 0; i < buffered.length; i++) {\n    const start = buffered.start(i);\n    const end = buffered.end(i);\n    const duration = end - start;\n    if (result.length) {\n      result += '\\n';\n    }\n    result += `[${duration}](${start} -> ${end})`;\n  }\n  return result || 'empty';\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  let seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  } // Clamp seekable end since it can not be less than the seekable start\n\n  if (seekableEnd < seekableStart) {\n    seekableEnd = seekableStart;\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\nclass DateRangesStorage {\n  constructor() {\n    this.offset_ = null;\n    this.pendingDateRanges_ = new Map();\n    this.processedDateRanges_ = new Map();\n  }\n  setOffset(segments = []) {\n    // already set\n    if (this.offset_ !== null) {\n      return;\n    } // no segment to process\n\n    if (!segments.length) {\n      return;\n    }\n    const [firstSegment] = segments; // no program date time\n\n    if (firstSegment.programDateTime === undefined) {\n      return;\n    } // Set offset as ProgramDateTime for the very first segment of the very first playlist load:\n\n    this.offset_ = firstSegment.programDateTime / 1000;\n  }\n  setPendingDateRanges(dateRanges = []) {\n    if (!dateRanges.length) {\n      return;\n    }\n    const [dateRange] = dateRanges;\n    const startTime = dateRange.startDate.getTime();\n    this.trimProcessedDateRanges_(startTime);\n    this.pendingDateRanges_ = dateRanges.reduce((map, pendingDateRange) => {\n      map.set(pendingDateRange.id, pendingDateRange);\n      return map;\n    }, new Map());\n  }\n  processDateRange(dateRange) {\n    this.pendingDateRanges_.delete(dateRange.id);\n    this.processedDateRanges_.set(dateRange.id, dateRange);\n  }\n  getDateRangesToProcess() {\n    if (this.offset_ === null) {\n      return [];\n    }\n    const dateRangeClasses = {};\n    const dateRangesToProcess = [];\n    this.pendingDateRanges_.forEach((dateRange, id) => {\n      if (this.processedDateRanges_.has(id)) {\n        return;\n      }\n      dateRange.startTime = dateRange.startDate.getTime() / 1000 - this.offset_;\n      dateRange.processDateRange = () => this.processDateRange(dateRange);\n      dateRangesToProcess.push(dateRange);\n      if (!dateRange.class) {\n        return;\n      }\n      if (dateRangeClasses[dateRange.class]) {\n        const length = dateRangeClasses[dateRange.class].push(dateRange);\n        dateRange.classListIndex = length - 1;\n      } else {\n        dateRangeClasses[dateRange.class] = [dateRange];\n        dateRange.classListIndex = 0;\n      }\n    });\n    for (const dateRange of dateRangesToProcess) {\n      const classList = dateRangeClasses[dateRange.class] || [];\n      if (dateRange.endDate) {\n        dateRange.endTime = dateRange.endDate.getTime() / 1000 - this.offset_;\n      } else if (dateRange.endOnNext && classList[dateRange.classListIndex + 1]) {\n        dateRange.endTime = classList[dateRange.classListIndex + 1].startTime;\n      } else if (dateRange.duration) {\n        dateRange.endTime = dateRange.startTime + dateRange.duration;\n      } else if (dateRange.plannedDuration) {\n        dateRange.endTime = dateRange.startTime + dateRange.plannedDuration;\n      } else {\n        dateRange.endTime = dateRange.startTime;\n      }\n    }\n    return dateRangesToProcess;\n  }\n  trimProcessedDateRanges_(startTime) {\n    const copy = new Map(this.processedDateRanges_);\n    copy.forEach((dateRange, id) => {\n      if (dateRange.startDate.getTime() < startTime) {\n        this.processedDateRanges_.delete(id);\n      }\n    });\n  }\n}\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addDateRangesToTextTrack_ = options.addDateRangesToTextTrack;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls;\n    this.dateRangesStorage_ = new DateRangesStorage(); // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n    this.on('loadedplaylist', this.handleLoadedPlaylist_.bind(this));\n  }\n  handleLoadedPlaylist_() {\n    const mediaPlaylist = this.media();\n    if (!mediaPlaylist) {\n      return;\n    }\n    this.dateRangesStorage_.setOffset(mediaPlaylist.segments);\n    this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);\n    const availableDateRanges = this.dateRangesStorage_.getDateRangesToProcess();\n    if (!availableDateRanges.length || !this.addDateRangesToTextTrack_) {\n      return;\n    }\n    this.addDateRangesToTextTrack_(availableDateRanges);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.dateRangesStorage_ = new DateRangesStorage();\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\n/**\n * Iterates over the request hooks Set and calls them in order\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} options the request options to pass to the xhr wrapper\n * @return the callback hook function return value, the modified or new options Object.\n */\n\nconst callAllRequestHooks = (requestSet, options) => {\n  if (!requestSet || !requestSet.size) {\n    return;\n  }\n  let newOptions = options;\n  requestSet.forEach(requestCallback => {\n    newOptions = requestCallback(newOptions);\n  });\n  return newOptions;\n};\n/**\n * Iterates over the response hooks Set and calls them in order.\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} request the xhr request object\n * @param {Object} error the xhr error object\n * @param {Object} response the xhr response object\n */\n\nconst callAllResponseHooks = (responseSet, request, error, response) => {\n  if (!responseSet || !responseSet.size) {\n    return;\n  }\n  responseSet.forEach(responseCallback => {\n    responseCallback(request, error, response);\n  });\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    // TODO: Remove beforeRequest in the next major release.\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest; // onRequest and onResponse hooks as a Set, at either the player or global level.\n    // TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.\n\n    const _requestCallbackSet = XhrFunction._requestCallbackSet || videojs.Vhs.xhr._requestCallbackSet || new Set();\n    const _responseCallbackSet = XhrFunction._responseCallbackSet || videojs.Vhs.xhr._responseCallbackSet;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');\n      _requestCallbackSet.add(beforeRequest);\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr; // call all registered onRequest hooks, assign new options.\n\n    const beforeRequestOptions = callAllRequestHooks(_requestCallbackSet, options); // Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.\n\n    _requestCallbackSet.delete(beforeRequest); // xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send\n\n    const request = xhrMethod(beforeRequestOptions || options, function (error, response) {\n      // call all registered onResponse hooks\n      callAllResponseHooks(_responseCallbackSet, request, error, response);\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < new Date(segment.dateTimeObject)) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = new Date(playlist.segments[i + 1].dateTimeObject);\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > new Date(lastSegmentStart)) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addMetadataToTextTrack = options.addMetadataToTextTrack;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      // We handle live content steering in the playlist controller\n      if (!this.media().attributes.serviceLocation) {\n        this.refreshMedia_(this.media().id);\n      }\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    this.addEventStreamToMetadataTrack_(newMain);\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n  /**\n   * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.\n   *\n   * @param {manifest} newMain the newly parsed manifest\n   */\n\n  addEventStreamToMetadataTrack_(newMain) {\n    // Only add new event stream metadata if we have a new manifest.\n    if (newMain && this.mainPlaylistLoader_.main.eventStream) {\n      // convert EventStream to ID3-like data.\n      const metadataArray = this.mainPlaylistLoader_.main.eventStream.map(eventStreamNode => {\n        return {\n          cueTime: eventStreamNode.start,\n          frames: [{\n            data: eventStreamNode.messageData\n          }]\n        };\n      });\n      this.addMetadataToTextTrack('EventStream', metadataArray, this.mainPlaylistLoader_.main.duration);\n    }\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$3 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$3,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Converts an array of bytes to a unicode hex string.\n\n    function toHexString(byteArray) {\n      return byteArray.map(byte => {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n      }).join('');\n    }\n    if (isMultiByte) {\n      charCodeArray = [currentByte, nextByte];\n      i++;\n    } else {\n      charCodeArray = [currentByte];\n    } // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      // We assume any multi-byte char without a decoder is unicode.\n      if (isMultiByte) {\n        const unicode = toHexString(charCodeArray); // Takes a unicode hex string and creates a single character.\n\n        char = String.fromCharCode(parseInt(unicode, 16));\n      } else {\n        char = get708CharFromCode(extended | currentByte);\n      }\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n  // We keep track of positioning information as we go by storing the\n  // number of indentations and the tab offset in this buffer.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push({\n        text: '',\n        indent: 0,\n        offset: 0\n      });\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        const offset = char1 & 0x03; // For an offest value 1-3, set the offset for that caption\n        // in the non-displayed array.\n\n        this.nonDisplayed_[this.row_].offset = offset;\n        this.column_ += offset; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          const indentations = (data & 0xe) >> 1;\n          this.column_ = indentations * 4; // add to the number of indentations for positioning\n\n          this.nonDisplayed_[this.row_].indent += indentations;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    const logWarning = index => {\n      this.trigger('log', {\n        level: 'warn',\n        message: 'Skipping a malformed 608 caption at index ' + index + '.'\n      });\n    };\n    const content = [];\n    this.displayed_.forEach((row, i) => {\n      if (row && row.text && row.text.length) {\n        try {\n          // remove spaces from the start and end of the string\n          row.text = row.text.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          logWarning(i);\n        } // See the below link for more details on the following fields:\n        // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n\n        if (row.text.length) {\n          content.push({\n            // The text to be displayed in the caption from this specific row, with whitespace removed.\n            text: row.text,\n            // Value between 1 and 15 representing the PAC row used to calculate line height.\n            line: i + 1,\n            // A number representing the indent position by percentage (CEA-608 PAC indent code).\n            // The value will be a number between 10 and 80. Offset is used to add an aditional\n            // value to the position if necessary.\n            position: 10 + Math.min(70, row.indent * 10) + row.offset * 2.5\n          });\n        }\n      } else if (row === undefined || row === null) {\n        logWarning(i);\n      }\n    });\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_].text; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = {\n      text: '',\n      indent: 0,\n      offset: 0\n    };\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.content || output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$2 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {Object[]} parsedCaptions[].content - A list of individual caption segments\n    * @return {String} parsedCaptions[].content.text - The visible content of the caption segment\n    * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment\n    * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n  var window$1 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n    getEmsgID3: getEmsgID3\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probes an mp4 segment for EMSG boxes containing ID3 data.\n     * https://aomediacodec.github.io/id3-emsg/\n     *\n     * @param {Uint8Array} data segment data\n     * @param {number} offset segment start time\n     * @return {Object[]} an array of ID3 frames\n     */\n\n    probeEmsgID3({\n      data,\n      offset\n    }) {\n      const id3Frames = probe$2.getEmsgID3(data, offset);\n      this.self.postMessage({\n        action: 'probeEmsgID3',\n        id3Frames,\n        emsgData: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = (captions, id3Frames) => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (id3Frames && id3Frames.length) {\n        id3Fn(segment, id3Frames);\n      }\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        }\n        workerCallback({\n          action: 'probeEmsgID3',\n          data: bytesAsUint8Array,\n          transmuxer: segment.transmuxer,\n          offset: startTime,\n          callback: ({\n            emsgData,\n            id3Frames\n          }) => {\n            // transfer bytes back to us\n            bytes = emsgData.buffer;\n            segment.bytes = bytesAsUint8Array = emsgData; // Run through the CaptionParser in case there are captions.\n            // Initialize CaptionParser if it hasn't been yet\n\n            if (!tracks.video || !emsgData.byteLength || !segment.transmuxer) {\n              finishLoading(undefined, id3Frames);\n              return;\n            }\n            workerCallback({\n              action: 'pushMp4Captions',\n              endAction: 'mp4Captions',\n              transmuxer: segment.transmuxer,\n              data: bytesAsUint8Array,\n              timescales: segment.map.timescales,\n              trackIds: [tracks.video.id],\n              callback: message => {\n                // transfer bytes back to us\n                bytes = message.data.buffer;\n                segment.bytes = bytesAsUint8Array = message.data;\n                message.logs.forEach(function (log) {\n                  onTransmuxerLog(merge(log, {\n                    stream: 'mp4CaptionParser'\n                  }));\n                });\n                finishLoading(message.captions, id3Frames);\n              }\n            });\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream; // in CEA 608 captions, video.js/mux.js sends a content array\n    // with positioning data\n\n    if (caption.content) {\n      caption.content.forEach(value => {\n        const cue = new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, value.text);\n        cue.line = value.line;\n        cue.align = 'left';\n        cue.position = value.position;\n        cue.positionAlign = 'line-left';\n        inbandTextTracks[track].addCue(cue);\n      });\n    } else {\n      // otherwise, a text value with combined captions is sent\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    }\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    } // If we have no frames, we can't create a cue.\n\n    if (!metadata.frames || !metadata.frames.length) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const finiteDuration = isFinite(videoDuration) ? videoDuration : 0;\n    const nextTime = Number(sortedStartTimes[idx + 1]) || finiteDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n}; // object for mapping daterange attributes\n\nconst dateRangeAttr = {\n  id: 'ID',\n  class: 'CLASS',\n  startDate: 'START-DATE',\n  duration: 'DURATION',\n  endDate: 'END-DATE',\n  endOnNext: 'END-ON-NEXT',\n  plannedDuration: 'PLANNED-DURATION',\n  scte35Out: 'SCTE35-OUT',\n  scte35In: 'SCTE35-IN'\n};\nconst dateRangeKeysToOmit = new Set(['id', 'class', 'startDate', 'duration', 'endDate', 'endOnNext', 'startTime', 'endTime', 'processDateRange']);\n/**\n * Add DateRange metadata text track to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} dateRanges parsed media playlist\n * @private\n */\n\nconst addDateRangeMetadata = ({\n  inbandTextTracks,\n  dateRanges\n}) => {\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  dateRanges.forEach(dateRange => {\n    // we generate multiple cues for each date range with different attributes\n    for (const key of Object.keys(dateRange)) {\n      if (dateRangeKeysToOmit.has(key)) {\n        continue;\n      }\n      const cue = new Cue(dateRange.startTime, dateRange.endTime, '');\n      cue.id = dateRange.id;\n      cue.type = 'com.apple.quicktime.HLS';\n      cue.value = {\n        key: dateRangeAttr[key],\n        data: dateRange[key]\n      };\n      if (key === 'scte35Out' || key === 'scte35In') {\n        cue.value.data = new Uint8Array(cue.value.data.match(/[\\da-f]{2}/gi)).buffer;\n      }\n      metadataTrack.addCue(cue);\n    }\n    dateRange.processDateRange();\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  if (!videojs.browser.IS_ANY_SAFARI) {\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  }\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  const uniqueCues = {};\n  for (let i = cues.length - 1; i >= 0; i--) {\n    const cue = cues[i];\n    const cueKey = `${cue.startTime}-${cue.endTime}-${cue.text}`;\n    if (uniqueCues[cueKey]) {\n      track.removeCue(cue);\n    } else {\n      uniqueCues[cueKey] = cue;\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\nconst getBufferedEndOrFallback = (buffered, fallback) => buffered.length ? buffered.end(buffered.length - 1) : fallback;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} calculateTimestampOffsetForEachSegment\n *        Feature flag to always calculate timestampOffset\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  calculateTimestampOffsetForEachSegment,\n  overrideCheck\n}) => {\n  if (calculateTimestampOffsetForEachSegment) {\n    return getBufferedEndOrFallback(buffered, startOfSegment);\n  } // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return getBufferedEndOrFallback(buffered, startOfSegment);\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.calculateTimestampOffsetForEachSegment_ = settings.calculateTimestampOffsetForEachSegment;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings;\n    this.addMetadataToTextTrack = settings.addMetadataToTextTrack; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false; // For comparing with currentTime when overwriting segments on fastQualityChange_ changes. Use -1 as the inactive flag.\n\n    this.replaceSegmentsUntil_ = -1;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_\n        // to false, resulting in fetching segments at currentTime and causing repeated\n        // same-segment requests on playlist change. This erroneously drives up the playback watcher\n        // stalled segment count, as re-requesting segments at the currentTime or browser cached segments\n        // will not change the buffer.\n        // Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201\n        const isLLHLS = !newPlaylist.endList && typeof newPlaylist.partTargetDuration === 'number';\n        if (isLLHLS) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Resets the segment loader ended and init properties.\n   */\n\n  resetLoaderProperties() {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.resetLoaderProperties();\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,\n    // it applies to each segment in each media playlist.\n    // https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1\n\n    const hasIndependentSegments = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments; // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !hasIndependentSegments && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      calculateTimestampOffsetForEachSegment: this.calculateTimestampOffsetForEachSegment_,\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    this.addMetadataToTextTrack(dispatchType, id3Frames, this.duration_());\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    if (this.currentTime_() >= this.replaceSegmentsUntil_) {\n      this.replaceSegmentsUntil_ = -1;\n      this.fetchAtBuffer_ = true;\n    }\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      programDateTime: segment.programDateTime,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n  /**\n   * Public setter for defining the private replaceSegmentsUntil_ property, which\n   * determines when we can return fetchAtBuffer to true if overwriting the buffer.\n   *\n   * @param {number} bufferedEnd the end of the buffered range to replace segments\n   * until currentTime reaches this time.\n   */\n\n  set replaceSegmentsUntil(bufferedEnd) {\n    this.logger_(`Replacing currently buffered segments until ${bufferedEnd}`);\n    this.replaceSegmentsUntil_ = bufferedEnd;\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n    sourceBuffer.changeType(mime);\n    sourceUpdater.codecs[type] = codec;\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  const buffered = sourceUpdater[`${type}Buffered`]();\n  const bufferedAsString = prettyBuffered(buffered);\n  sourceUpdater.logger_(`${type} source buffer update end. Buffered: \\n`, bufferedAsString); // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this.\n    return !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const timestampmap = segmentInfo.timestampmap;\n    const diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings; // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (!vhs.options_.useForcedSubtitles && mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * A utility class for setting properties and maintaining the state of the content steering manifest.\n *\n * Content Steering manifest format:\n * VERSION: number (required) currently only version 1 is supported.\n * TTL: number in seconds (optional) until the next content steering manifest reload.\n * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.\n * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.\n */\n\nclass SteeringManifest {\n  constructor() {\n    this.priority_ = [];\n  }\n  set version(number) {\n    // Only version 1 is currently supported for both DASH and HLS.\n    if (number === 1) {\n      this.version_ = number;\n    }\n  }\n  set ttl(seconds) {\n    // TTL = time-to-live, default = 300 seconds.\n    this.ttl_ = seconds || 300;\n  }\n  set reloadUri(uri) {\n    if (uri) {\n      // reload URI can be relative to the previous reloadUri.\n      this.reloadUri_ = resolveUrl(this.reloadUri_, uri);\n    }\n  }\n  set priority(array) {\n    // priority must be non-empty and unique values.\n    if (array && array.length) {\n      this.priority_ = array;\n    }\n  }\n  get version() {\n    return this.version_;\n  }\n  get ttl() {\n    return this.ttl_;\n  }\n  get reloadUri() {\n    return this.reloadUri_;\n  }\n  get priority() {\n    return this.priority_;\n  }\n}\n/**\n * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.\n * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and\n * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.\n * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {function} xhr for making a network request from the browser.\n * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.\n */\n\nclass ContentSteeringController extends videojs.EventTarget {\n  constructor(xhr, bandwidth) {\n    super();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = null;\n    this.availablePathways_ = new Set();\n    this.excludedPathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.excludedSteeringManifestURLs = new Set();\n    this.logger_ = logger('Content Steering');\n    this.xhr_ = xhr;\n    this.getBandwidth_ = bandwidth;\n  }\n  /**\n   * Assigns the content steering tag properties to the steering controller\n   *\n   * @param {string} baseUrl the baseURL from the manifest for resolving the steering manifest url\n   * @param {Object} steeringTag the content steering tag from the main manifest\n   */\n\n  assignTagProperties(baseUrl, steeringTag) {\n    this.manifestType_ = steeringTag.serverUri ? 'HLS' : 'DASH'; // serverUri is HLS serverURL is DASH\n\n    const steeringUri = steeringTag.serverUri || steeringTag.serverURL;\n    if (!steeringUri) {\n      this.logger_(`steering manifest URL is ${steeringUri}, cannot request steering manifest.`);\n      this.trigger('error');\n      return;\n    } // Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.\n\n    if (steeringUri.startsWith('data:')) {\n      this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',') + 1));\n      return;\n    } // With DASH queryBeforeStart, we want to use the steeringUri as soon as possible for the request.\n\n    this.steeringManifest.reloadUri = this.queryBeforeStart ? steeringUri : resolveUrl(baseUrl, steeringUri); // pathwayId is HLS defaultServiceLocation is DASH\n\n    this.defaultPathway = steeringTag.pathwayId || steeringTag.defaultServiceLocation; // currently only DASH supports the following properties on <ContentSteering> tags.\n\n    this.queryBeforeStart = steeringTag.queryBeforeStart || false;\n    this.proxyServerUrl_ = steeringTag.proxyServerURL || null; // trigger a steering event if we have a pathway from the content steering tag.\n    // this tells VHS which segment pathway to start with.\n    // If queryBeforeStart is true we need to wait for the steering manifest response.\n\n    if (this.defaultPathway && !this.queryBeforeStart) {\n      this.trigger('content-steering');\n    }\n    if (this.queryBeforeStart) {\n      this.requestSteeringManifest(this.steeringManifest.reloadUri);\n    }\n  }\n  /**\n   * Requests the content steering manifest and parse the response. This should only be called after\n   * assignTagProperties was called with a content steering tag.\n   *\n   * @param {string} initialUri The optional uri to make the request with.\n   *    If set, the request should be made with exactly what is passed in this variable.\n   *    This scenario is specific to DASH when the queryBeforeStart parameter is true.\n   *    This scenario should only happen once on initalization.\n   */\n\n  requestSteeringManifest(initialUri) {\n    const reloadUri = this.steeringManifest.reloadUri;\n    if (!initialUri && !reloadUri) {\n      return;\n    } // We currently don't support passing MPD query parameters directly to the content steering URL as this requires\n    // ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.\n    // This request URI accounts for manifest URIs that have been excluded.\n\n    const uri = initialUri || this.getRequestURI(reloadUri); // If there are no valid manifest URIs, we should stop content steering.\n\n    if (!uri) {\n      this.logger_('No valid content steering manifest URIs. Stopping content steering.');\n      this.trigger('error');\n      this.dispose();\n      return;\n    }\n    this.request_ = this.xhr_({\n      uri\n    }, (error, errorInfo) => {\n      if (error) {\n        // If the client receives HTTP 410 Gone in response to a manifest request,\n        // it MUST NOT issue another request for that URI for the remainder of the\n        // playback session. It MAY continue to use the most-recently obtained set\n        // of Pathways.\n        if (errorInfo.status === 410) {\n          this.logger_(`manifest request 410 ${error}.`);\n          this.logger_(`There will be no more content steering requests to ${uri} this session.`);\n          this.excludedSteeringManifestURLs.add(uri);\n          return;\n        } // If the client receives HTTP 429 Too Many Requests with a Retry-After\n        // header in response to a manifest request, it SHOULD wait until the time\n        // specified by the Retry-After header to reissue the request.\n\n        if (errorInfo.status === 429) {\n          const retrySeconds = errorInfo.responseHeaders['retry-after'];\n          this.logger_(`manifest request 429 ${error}.`);\n          this.logger_(`content steering will retry in ${retrySeconds} seconds.`);\n          this.startTTLTimeout_(parseInt(retrySeconds, 10));\n          return;\n        } // If the Steering Manifest cannot be loaded and parsed correctly, the\n        // client SHOULD continue to use the previous values and attempt to reload\n        // it after waiting for the previously-specified TTL (or 5 minutes if\n        // none).\n\n        this.logger_(`manifest failed to load ${error}.`);\n        this.startTTLTimeout_();\n        return;\n      }\n      const steeringManifestJson = JSON.parse(this.request_.responseText);\n      this.startTTLTimeout_();\n      this.assignSteeringProperties_(steeringManifestJson);\n    });\n  }\n  /**\n   * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.\n   *\n   * @param {string} steeringUrl the steering manifest url\n   * @return the steering manifest url to a proxy server with all parameters set\n   */\n\n  setProxyServerUrl_(steeringUrl) {\n    const steeringUrlObject = new window$1.URL(steeringUrl);\n    const proxyServerUrlObject = new window$1.URL(this.proxyServerUrl_);\n    proxyServerUrlObject.searchParams.set('url', encodeURI(steeringUrlObject.toString()));\n    return this.setSteeringParams_(proxyServerUrlObject.toString());\n  }\n  /**\n   * Decodes and parses the data uri encoded steering manifest\n   *\n   * @param {string} dataUri the data uri to be decoded and parsed.\n   */\n\n  decodeDataUriManifest_(dataUri) {\n    const steeringManifestJson = JSON.parse(window$1.atob(dataUri));\n    this.assignSteeringProperties_(steeringManifestJson);\n  }\n  /**\n   * Set the HLS or DASH content steering manifest request query parameters. For example:\n   * _HLS_pathway=\"<CURRENT-PATHWAY-ID>\" and _HLS_throughput=<THROUGHPUT>\n   * _DASH_pathway and _DASH_throughput\n   *\n   * @param {string} uri to add content steering server parameters to.\n   * @return a new uri as a string with the added steering query parameters.\n   */\n\n  setSteeringParams_(url) {\n    const urlObject = new window$1.URL(url);\n    const path = this.getPathway();\n    const networkThroughput = this.getBandwidth_();\n    if (path) {\n      const pathwayKey = `_${this.manifestType_}_pathway`;\n      urlObject.searchParams.set(pathwayKey, path);\n    }\n    if (networkThroughput) {\n      const throughputKey = `_${this.manifestType_}_throughput`;\n      urlObject.searchParams.set(throughputKey, networkThroughput);\n    }\n    return urlObject.toString();\n  }\n  /**\n   * Assigns the current steering manifest properties and to the SteeringManifest object\n   *\n   * @param {Object} steeringJson the raw JSON steering manifest\n   */\n\n  assignSteeringProperties_(steeringJson) {\n    this.steeringManifest.version = steeringJson.VERSION;\n    if (!this.steeringManifest.version) {\n      this.logger_(`manifest version is ${steeringJson.VERSION}, which is not supported.`);\n      this.trigger('error');\n      return;\n    }\n    this.steeringManifest.ttl = steeringJson.TTL;\n    this.steeringManifest.reloadUri = steeringJson['RELOAD-URI']; // HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional\n\n    this.steeringManifest.priority = steeringJson['PATHWAY-PRIORITY'] || steeringJson['SERVICE-LOCATION-PRIORITY']; // TODO: HLS handle PATHWAY-CLONES. See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n    // 1. apply first pathway from the array.\n    // 2. if first pathway doesn't exist in manifest, try next pathway.\n    //    a. if all pathways are exhausted, ignore the steering manifest priority.\n    // 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.\n    //    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,\n    //       the excluded pathway will be ignored.\n    //       See excludePathway usage in excludePlaylist().\n    // If there are no available pathways, we need to stop content steering.\n\n    if (!this.availablePathways_.size) {\n      this.logger_('There are no available pathways for content steering. Ending content steering.');\n      this.trigger('error');\n      this.dispose();\n    }\n    const chooseNextPathway = pathwaysByPriority => {\n      for (const path of pathwaysByPriority) {\n        if (this.availablePathways_.has(path)) {\n          return path;\n        }\n      } // If no pathway matches, ignore the manifest and choose the first available.\n\n      return [...this.availablePathways_][0];\n    };\n    const nextPathway = chooseNextPathway(this.steeringManifest.priority);\n    if (this.currentPathway !== nextPathway) {\n      this.currentPathway = nextPathway;\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Returns the pathway to use for steering decisions\n   *\n   * @return {string} returns the current pathway or the default\n   */\n\n  getPathway() {\n    return this.currentPathway || this.defaultPathway;\n  }\n  /**\n   * Chooses the manifest request URI based on proxy URIs and server URLs.\n   * Also accounts for exclusion on certain manifest URIs.\n   *\n   * @param {string} reloadUri the base uri before parameters\n   *\n   * @return {string} the final URI for the request to the manifest server.\n   */\n\n  getRequestURI(reloadUri) {\n    if (!reloadUri) {\n      return null;\n    }\n    const isExcluded = uri => this.excludedSteeringManifestURLs.has(uri);\n    if (this.proxyServerUrl_) {\n      const proxyURI = this.setProxyServerUrl_(reloadUri);\n      if (!isExcluded(proxyURI)) {\n        return proxyURI;\n      }\n    }\n    const steeringURI = this.setSteeringParams_(reloadUri);\n    if (!isExcluded(steeringURI)) {\n      return steeringURI;\n    } // Return nothing if all valid manifest URIs are excluded.\n\n    return null;\n  }\n  /**\n   * Start the timeout for re-requesting the steering manifest at the TTL interval.\n   *\n   * @param {number} ttl time in seconds of the timeout. Defaults to the\n   *        ttl interval in the steering manifest\n   */\n\n  startTTLTimeout_(ttl = this.steeringManifest.ttl) {\n    // 300 (5 minutes) is the default value.\n    const ttlMS = ttl * 1000;\n    this.ttlTimeout_ = window$1.setTimeout(() => {\n      this.requestSteeringManifest();\n    }, ttlMS);\n  }\n  /**\n   * Clear the TTL timeout if necessary.\n   */\n\n  clearTTLTimeout_() {\n    window$1.clearTimeout(this.ttlTimeout_);\n    this.ttlTimeout_ = null;\n  }\n  /**\n   * aborts any current steering xhr and sets the current request object to null\n   */\n\n  abort() {\n    if (this.request_) {\n      this.request_.abort();\n    }\n    this.request_ = null;\n  }\n  /**\n   * aborts steering requests clears the ttl timeout and resets all properties.\n   */\n\n  dispose() {\n    this.off('content-steering');\n    this.off('error');\n    this.abort();\n    this.clearTTLTimeout_();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = null;\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.excludedSteeringManifestURLs = new Set();\n    this.availablePathways_ = new Set();\n    this.excludedPathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n  }\n  /**\n   * adds a pathway to the available pathways set\n   *\n   * @param {string} pathway the pathway string to add\n   */\n\n  addAvailablePathway(pathway) {\n    if (pathway) {\n      this.availablePathways_.add(pathway);\n    }\n  }\n  /**\n   * clears all pathways from the available pathways set\n   */\n\n  clearAvailablePathways() {\n    this.availablePathways_.clear();\n  }\n  excludePathway(pathway) {\n    return this.availablePathways_.delete(pathway);\n  }\n}\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 10;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      calculateTimestampOffsetForEachSegment: options.calculateTimestampOffsetForEachSegment,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings,\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    })) : new PlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this)\n    }));\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    const getBandwidth = () => {\n      return this.mainSegmentLoader_.bandwidth;\n    };\n    this.contentSteeringController_ = new ContentSteeringController(this.vhs_.xhr, getBandwidth);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist.id || playlist.uri;\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * A function that ensures we switch our playlists inside of `mediaTypes`\n   * to match the current `serviceLocation` provided by the contentSteering controller.\n   * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.\n   *\n   * This should only be called on a DASH playback scenario while using content steering.\n   * This is necessary due to differences in how media in HLS manifests are generally tied to\n   * a video playlist, where in DASH that is not always the case.\n   */\n\n  switchMediaForDASHContentSteering_() {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      const mediaType = this.mediaTypes_[type];\n      const activeGroup = mediaType ? mediaType.activeGroup() : null;\n      const pathway = this.contentSteeringController_.getPathway();\n      if (activeGroup && pathway) {\n        // activeGroup can be an array or a single group\n        const mediaPlaylists = activeGroup.length ? activeGroup[0].playlists : activeGroup.playlists;\n        const dashMediaPlaylists = mediaPlaylists.filter(p => p.attributes.serviceLocation === pathway); // Switch the current active playlist to the correct CDN\n\n        if (dashMediaPlaylists.length) {\n          this.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);\n        }\n      }\n    });\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        this.initContentSteeringController_(); // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      this.mainSegmentLoader_.load();\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This will reset the main segment loader\n   * and the next segment position to the currentTime.\n   * This is good for manual quality changes.\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // Reset main segment loader properties and next segment position information.\n    // Don't need to reset audio as it is reset when media changes.\n    // We resetLoaderProperties separately here as we want to fetch init segments if\n    // necessary and ensure we're not in an ended state when we switch playlists.\n\n    this.resetMainLoaderReplaceSegments();\n  }\n  /**\n   * Sets the replaceUntil flag on the main segment soader to the buffered end\n   * and resets the main segment loaders properties.\n   */\n\n  resetMainLoaderReplaceSegments() {\n    const buffered = this.tech_.buffered();\n    const bufferedEnd = buffered.end(buffered.length - 1); // Set the replace segments flag to the buffered end, this forces fetchAtBuffer\n    // on the main loader to remain, false after the resetLoader call, until we have\n    // replaced all content buffered ahead of the currentTime.\n\n    this.mainSegmentLoader_.replaceSegmentsUntil = bufferedEnd;\n    this.mainSegmentLoader_.resetLoaderProperties();\n    this.mainSegmentLoader_.resetLoader();\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream and/or has a start time\n\n    if (!media.endList || media.start) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the\n        // live or start point\n        return false;\n      }\n      const seekableEnd = seekable.end(0);\n      let startPoint = seekableEnd;\n      if (media.start) {\n        const offset = media.start.timeOffset;\n        if (offset < 0) {\n          startPoint = Math.max(seekableEnd + offset, seekable.start(0));\n        } else {\n          startPoint = Math.min(seekableEnd, offset);\n        }\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(startPoint);\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // If we're content steering, try other pathways.\n      if (this.main().contentSteering) {\n        const pathway = this.pathwayAttribute_(playlistToExclude); // Ignore at least 1 steering manifest refresh.\n\n        const reIncludeDelay = this.contentSteeringController_.steeringManifest.ttl * 1000;\n        this.contentSteeringController_.excludePathway(pathway);\n        this.excludeThenChangePathway_();\n        setTimeout(() => {\n          this.contentSteeringController_.addAvailablePathway(pathway);\n        }, reIncludeDelay);\n        return;\n      } // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    this.contentSteeringController_.dispose();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n  addDateRangesToTextTrack_(dateRanges) {\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, 'com.apple.streaming', this.tech_);\n    addDateRangeMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      dateRanges\n    });\n  }\n  addMetadataToTextTrack(dispatchType, metadataArray, videoDuration) {\n    const timestampOffset = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray,\n      timestampOffset,\n      videoDuration\n    });\n  }\n  pathwayAttribute_(playlist) {\n    return playlist.attributes['PATHWAY-ID'] || playlist.attributes.serviceLocation;\n  }\n  /**\n   * Initialize content steering listeners and apply the tag properties.\n   */\n\n  initContentSteeringController_() {\n    const initialMain = this.main();\n    if (!initialMain.contentSteering) {\n      return;\n    }\n    const updateSteeringValues = main => {\n      for (const playlist of main.playlists) {\n        this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));\n      }\n      this.contentSteeringController_.assignTagProperties(main.uri, main.contentSteering);\n    };\n    updateSteeringValues(initialMain);\n    this.contentSteeringController_.on('content-steering', this.excludeThenChangePathway_.bind(this)); // We need to ensure we update the content steering values when a new\n    // manifest is loaded in live DASH with content steering.\n\n    if (this.sourceType_ === 'dash') {\n      this.mainPlaylistLoader_.on('mediaupdatetimeout', () => {\n        this.mainPlaylistLoader_.refreshMedia_(this.mainPlaylistLoader_.media().id); // clear past values\n\n        this.contentSteeringController_.abort();\n        this.contentSteeringController_.clearTTLTimeout_();\n        this.contentSteeringController_.clearAvailablePathways();\n        updateSteeringValues(this.main());\n      });\n    } // Do this at startup only, after that the steering requests are managed by the Content Steering class.\n    // DASH queryBeforeStart scenarios will be handled by the Content Steering class.\n\n    if (!this.contentSteeringController_.queryBeforeStart) {\n      this.tech_.one('canplay', () => {\n        this.contentSteeringController_.requestSteeringManifest();\n      });\n    }\n  }\n  /**\n   * Simple exclude and change playlist logic for content steering.\n   */\n\n  excludeThenChangePathway_() {\n    const currentPathway = this.contentSteeringController_.getPathway();\n    if (!currentPathway) {\n      return;\n    }\n    const main = this.main();\n    const playlists = main.playlists;\n    const ids = new Set();\n    let didEnablePlaylists = false;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key];\n      const pathwayId = this.pathwayAttribute_(variant);\n      const differentPathwayId = pathwayId && currentPathway !== pathwayId;\n      const steeringExclusion = variant.excludeUntil === Infinity && variant.lastExcludeReason_ === 'content-steering';\n      if (steeringExclusion && !differentPathwayId) {\n        delete variant.excludeUntil;\n        delete variant.lastExcludeReason_;\n        didEnablePlaylists = true;\n      }\n      const noExcludeUntil = !variant.excludeUntil && variant.excludeUntil !== Infinity;\n      const shouldExclude = !ids.has(variant.id) && differentPathwayId && noExcludeUntil;\n      if (!shouldExclude) {\n        return;\n      }\n      ids.add(variant.id);\n      variant.excludeUntil = Infinity;\n      variant.lastExcludeReason_ = 'content-steering'; // TODO: kind of spammy, maybe move this.\n\n      this.logger_(`excluding ${variant.id} for ${variant.lastExcludeReason_}`);\n    });\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      Object.keys(this.mediaTypes_).forEach(key => {\n        const type = this.mediaTypes_[key];\n        if (type.activePlaylistLoader) {\n          const currentPlaylist = type.activePlaylistLoader.media_; // Check if the current media playlist matches the current CDN\n\n          if (currentPlaylist && currentPlaylist.attributes.serviceLocation !== currentPathway) {\n            didEnablePlaylists = true;\n          }\n        }\n      });\n    }\n    if (didEnablePlaylists) {\n      this.changeSegmentPathway_();\n    }\n  }\n  /**\n   * Changes the current playlists for audio, video and subtitles after a new pathway\n   * is chosen from content steering.\n   */\n\n  changeSegmentPathway_() {\n    const nextPlaylist = this.selectPlaylist();\n    this.pauseLoading(); // Switch audio and text track playlists if necessary in DASH\n\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      this.switchMediaForDASHContentSteering_();\n    }\n    this.switchMedia_(nextPlaylist, 'content-steering');\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    const isLLHLS = typeof playlist.partTargetDuration === 'number';\n    if (isLive && (isLLHLS || allowSeeksWithinUnsafeLiveWindow)) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.7.0\";\nvar version$3 = \"7.0.1\";\nvar version$2 = \"1.2.2\";\nvar version$1 = \"7.1.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but\n  // the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Adds a request hook to an xhr object\n *\n * @param {Object} xhr object to add the onRequest hook to\n * @param {function} callback hook function for an xhr request\n */\n\nconst addOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    xhr._requestCallbackSet = new Set();\n  }\n  xhr._requestCallbackSet.add(callback);\n};\n/**\n * Adds a response hook to an xhr object\n *\n * @param {Object} xhr object to add the onResponse hook to\n * @param {function} callback hook function for an xhr response\n */\n\nconst addOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    xhr._responseCallbackSet = new Set();\n  }\n  xhr._responseCallbackSet.add(callback);\n};\n/**\n * Removes a request hook on an xhr object, deletes the onRequest set if empty.\n *\n * @param {Object} xhr object to remove the onRequest hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    return;\n  }\n  xhr._requestCallbackSet.delete(callback);\n  if (!xhr._requestCallbackSet.size) {\n    delete xhr._requestCallbackSet;\n  }\n};\n/**\n * Removes a response hook on an xhr object, deletes the onResponse set if empty.\n *\n * @param {Object} xhr object to remove the onResponse hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    return;\n  }\n  xhr._responseCallbackSet.delete(callback);\n  if (!xhr._responseCallbackSet.size) {\n    delete xhr._responseCallbackSet;\n  }\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n/**\n * A global function for setting an onRequest hook\n *\n * @param {function} callback for request modifiction\n */\n\nVhs.xhr.onRequest = function (callback) {\n  addOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * A global function for setting an onResponse hook\n *\n * @param {callback} callback for response data retrieval\n */\n\nVhs.xhr.onResponse = function (callback) {\n  addOnResponseHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onRequest callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offRequest = function (callback) {\n  removeOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onResponse callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offResponse = function (callback) {\n  removeOnResponseHook(Vhs.xhr, callback);\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  setOptions_() {\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.calculateTimestampOffsetForEachSegment = this.options_.calculateTimestampOffsetForEachSegment || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useForcedSubtitles', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'calculateTimestampOffsetForEachSegment', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n      const mainPlaylist = this.playlistController_.main();\n      if (!mainPlaylist || !mainPlaylist.playlists) {\n        return;\n      }\n      const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      mainPlaylist.playlists.forEach(playlist => {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n      if (excludedHDPlaylists.length) {\n        videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n        this.playlistController_.mainSegmentLoader_.resetEverything();\n        this.playlistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_);\n    if (!didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n  /**\n   * Adds the onRequest, onResponse, offRequest and offResponse functions\n   * to the VhsHandler xhr Object.\n   */\n\n  setupXhrHooks_() {\n    /**\n     * A player function for setting an onRequest hook\n     *\n     * @param {function} callback for request modifiction\n     */\n    this.xhr.onRequest = callback => {\n      addOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * A player function for setting an onResponse hook\n     *\n     * @param {callback} callback for response data retrieval\n     */\n\n    this.xhr.onResponse = callback => {\n      addOnResponseHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onRequest callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offRequest = callback => {\n      removeOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onResponse callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offResponse = callback => {\n      removeOnResponseHook(this.xhr, callback);\n    }; // Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.\n    // This allows hooks to be set before the source is set to vhs when handleSource is called.\n\n    this.player_.trigger('xhr-hooks-ready');\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.setupXhrHooks_();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n  case \"line-left\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n  case \"line-right\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["require","window","httpResponseHandler","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","getCharset","headers","decode","e","String","fromCharCode","apply","Uint8Array","contentTypeHeader","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","module","exports","_extends","isFunction","createXHR","httpHandler","parseHeaders","result","forEach","row","index","indexOf","key","slice","Array","isArray","push","forEachArray","array","iterator","i","length","isEmpty","obj","hasOwnProperty","initParams","uri","options","params","_createXHR","Error","called","body","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","failureResponse","aborted","status","useXDR","method","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName","noop","toUpperCase","find","list","predicate","ac","prototype","call","Object","item","freeze","object","oc","assign","target","source","TypeError","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","this","locator","buildErrorHandler","errorImpl","domBuilder","DOMHandler","errorHandler","isCallback","Function","build","fn","msg","_locator","cdata","position","node","lineNumber","columnNumber","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","defaultNSMap","xmlns","test","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","xml","normalize","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","arguments","charNode","createCDATASection","createTextNode","skippedEntity","name","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","splitOnASCIIWhitespace","filter","orderedSetReducer","element","toOrderedSet","keys","arrayIncludes","copy","src","dest","p","Class","Super","pt","t","constructor","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","c","charCodeAt","_visitNode","firstChild","nextSibling","Document","ns","_nsMap","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","next","lastChild","hasValidParentNodeType","nodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","hasDoctypeChildThatIsNotChild","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","_appendSingleChild","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","addSerializedAttribute","qualifiedName","attributes","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","n","v","attrs2","_ownerElement","toString","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","end","splitText","newText","newNode","defineProperty","getTextContent","get","set","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","nameStartChar","nameChar","RegExp","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","entityReplacer","a","k","charAt","parseInt","appendText","xt","m","lineEnd","linePattern","exec","lineStart","parseStack","currentNSMap","closeMap","tagStart","match","config","pop","localNSMap","endMatch","endIgnoreCaseMach","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","Math","max","f","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","pos","lastIndexOf","matchs","lastMatch","endDTD","getLocalName","doccy","topLevel","global","minDoc","document","win","self","string","alert","confirm","prompt","keyCode","searchInput","hasKeyCode","which","charCode","names","search","foundNamedKey","codes","aliases","isEventKey","event","nameOrCode","title","alias","getUint64","parseSidx","view","DataView","buffer","byteOffset","byteLength","flags","subarray","references","referenceId","getUint32","timescale","earliestPresentationTime","firstOffset","referenceCount","getUint16","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","MAX_UINT32","pow","uint8","dv","getBigUint64","Number","MAX_SAFE_INTEGER","SafeParseTuple","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","parts","reverse","DEFAULT_LOCATION","resolveUrl","baseUrl","relativeUrl","href","nativeURL","protocolLess","removeLocation","newUrl","URL","protocol","bind","Stream","listeners","_proto","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","atob","Buffer","from","decodeB64ToUint8Array","b64Text","decodedString","LineStream","super","nextNewline","TAB","parseByterange","byterangeString","attributeSeparator","keyvalue","parseAttributes","ParseStream","customParsers","tagMappers","line","newLines","acc","mapper","mappedLine","concat","newLine","tagType","duration","parseFloat","number","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","width","height","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","expression","customType","dataParser","segment","addTagMapper","mapFn","camelCase","str","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","Parser","lineStream","parseStream","uris","currentMap","currentUri","hasParts","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","daterangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","daterange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","setSeconds","getSeconds","attribute","independentSegments","custom","identifier","missing","chunk","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecString","codecs","codecType","details","mediaType","codecsFromDefault","master","audioGroupId","AUDIO","audioGroup","audioType","CODECS","isAudioCodec","isTextCodec","getMimeForCodec","container","browserSupportsCodec","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","countBits","x","countBytes","ceil","isArrayBufferView","ArrayBuffer","isView","isTypedArray","toUint8","bytes","BigInt","BYTE_TABLE","bytesToNumber","Uint16Array","b","_temp","_ref","_ref$signed","signed","_ref$le","total","byte","exponent","abs","numberToBytes","_temp2","_ref2","_ref2$le","byteCount","byteIndex","bytesToString","decodeURIComponent","escape","stringToBytes","stringIsBytes","unescape","encodeURIComponent","concatTypedArrays","_len","buffers","_key","totalLen","tempBuffer","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","aByte","forEachMediaGroup","groups","groupKey","labelKey","mediaProperties","isObject","merge","objects","values","o","flatten","lists","y","findIndexes","union","keyFunction","errors","INVALID_NUMBER_OF_PERIOD","INVALID_NUMBER_OF_CONTENT_STEERING","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","indexRange","resolvedUri","rangeStr","ranges","startRange","endRange","byteRangeToString","parseEndNumber","endNumber","segmentRange","static","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","periodEndWC","segmentCount","availableStart","floor","availableEnd","min","toSegments","startNumber","time","parseByDuration","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","reference","size","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","sort","findPlaylistWithName","getMediaGroupPlaylists","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","findIndex","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","oldMatchingSegment","positionManifestOnTimeline","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","bandwidth","serviceLocation","SUBTITLES","formatVttPlaylist","m3u8Attributes","vttPlaylist","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","firstLabel","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","aspectRatio","easyReader","formatVideoPlaylist","frameRate","videoOnly","audioOnly","vttOnly","addMediaSequenceValues","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","contentSteering","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","Boolean","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","subs","cc","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","identifierReplacement","format","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","segmentsInfo","toPlaylists","representations","findChildren","getContent","textContent","parseDivisionValue","prev","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","buildBaseUrls","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","psshNode","parseCaptionServiceMetadata","opt","val","toEventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","accessibility","labelVal","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","serverURL","queryBeforeStart","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","periods","priorPeriod","contentSteeringInfo","representationInfo","stringToMpdXml","manifestString","parser","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","DESCRIPTORS","ID3","getId3Size","returnSize","footerPresent","getId3Offset","normalizePaths","paths","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","desc","dependsOnEsId","ocrEsId","descriptors","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","complete","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","totalLength","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","findH264Nal","findH265Nal","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","isLikelyTypes","isLikelyFn","isLikely","detectContainerForBytes","isLikelyFmp4MediaSegment","version$6","hooks_","hooks","hook","removeHook","hookOnce","original","wrapper","FullscreenApi","prefixed","apiMap","specApi","browserApi","history","LogByTypeFactory","log","styles","level","lvl","levels","lvlRegExp","resultName","window$1","info","createLogger$1","delimiter","logByType","createLogger","subName","subDelimiter","subStyles","resultDelimiter","resultStyles","createNewLogger","newName","newDelimiter","newStyles","all","debug","fname","historyItem","clear","disable","enable","log$1","each","initial","accum","isPlain","merge$1","sources","defineLazyProperty","setter","enumerable","writable","configurable","Obj","__proto__","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","isReal","maxTouchPoints","UAD","userAgentData","platform","brands","brand","USER_AGENT","userAgent","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","throwIfWhitespace","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","getOwnPropertyNames","propName","appendContent","innerText","prependTo","hasClass","classToCheck","classList","contains","addClass","classesToAdd","add","removeClass","classesToRemove","toggleClass","classToToggle","className","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","includes","blockTextSelection","focus","unblockTextSelection","getBoundingClientRect","computedStyle","findPosition","offsetParent","left","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","transform","boxTarget","box","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","computedStyleValue","getPropertyValue","copyStyleSheetsToWindow","styleSheet","cssRules","rule","cssText","style","head","link","rel","mediaText","Dom","videojs$1","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","createStyleElement","setTextContent","DomData","WeakMap","_initialGuid","_supportsPassive","_guid","newGUID","_cleanUpEvents","elem","has","handlers","removeEventListener","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","supportsPassive","passiveEvents","guid","hash","handlersCopy","addEventListener","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","throttled","debounce","immediate","cancel","debounced","later","Fn","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","largs","targetOrType","typeOrListener","evented","eventBusKey","el_","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","isDisposed","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","currentChild","setIcon","iconName","experimentalSvgIcons","xmlnsURL","iconContainer","svgEl","useEl","iconIsSet_","querySelector","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childFound","compEl","parentOptions","handleAdd","playerOptions","workingChildren","Tech","some","wchild","isTech","buildCSSClass","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","keycode","handleKeyPress","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","idName","cancelName","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","timeRangesObj","createTimeRanges$1","defaultImplementation","guide","h","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","previouslyActiveEl_","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","TrackList","tracks_","addTrack","labelchange_","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","props","host","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","tech_","XHR","loaded_","TextTrack","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","_isScrubbing","scrubbing","setCurrentTime","_seconds","trackListChanges","addWebVttScript_","vtt","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","override","overrideNativeVideoTracks","canPlayType","_type","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","icons","MediaLoader","j","techOrder","techName","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","crossorigin","poster","setSrc","loading","alt","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","getCSSPositionValue","TextTrackDisplay","updateDisplayTextHandler","updateDisplayHandler","updateDisplayOverlay","toggleDisplay","preselectTrack","screenOrientation","orientation","changeOrientationEvent","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","videoHeight","supports","playerWidth","playerHeight","playerAspectRatio","videoAspectRatio","videoWidth","insetInlineMatch","insetBlockMatch","round","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","handlePictureInPictureAudioModeChange","isSourceAudio","currentType","isAudioMode","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","enableDocumentPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","validOptions","skipTime","getSkipForwardTime","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","getSkipBackwardTime","backward","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","menuItemEl","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","innerHTML","createElFont_","createElControls_","defaultsDescription","setValues","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","updateDom_","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","hiddenChildren","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","parsedSVG","errorNode","sprite","display","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","aspectRatio_","width_","height_","idClass","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","inAllowedEls","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","fullscreen","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","resolve","play_","isSrcReady","isSafariOrIOS","waitToPlay_","isNativeReplay","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","pipContainer","titleBar","requestWindow","pipWindow","pipVideo","hotkeys","excludeElement","isContentEditable","allowedInputTypes","excludedTags","activeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","retry","stopListeningForErrors","sourceTech","vhs","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","activityCheck","isAudio_","enableAudioOnlyUI_","playerChildren","controlBarHeight","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","audioOnlyModePromise","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","safeParseTuple","childName","previousLogLevel_","newRates","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","deprecate","warned","deprecateForMajor","oldName","usingPlugin","hasPlugin","normalizeId","videojs","getPlayer","inShadowDom","getRootNode","rootNode","defaultView","PlayerComponent","getPlayers","nId","getAllPlayers","writeable","mergeOptions","addLanguage","EventTarget","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","Symbol","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","version$5","initPlugin$1","originalPluginFn","qualityLevels","qualityLevelList","_resolveUrl","resolveManifestRedirect","req","responseURL","logger","prettyBuffered","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","createPlaylistID","groupID","parseManifest","onwarn","oninfo","customTagParsers","customTagMappers","llhls","customParser","setupMediaPlaylist","playlistErrors_","setupMediaPlaylists","resolveMediaGroupUris","mainForMedia","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","DateRangesStorage","offset_","pendingDateRanges_","processedDateRanges_","setOffset","firstSegment","programDateTime","setPendingDateRanges","dateRanges","dateRange","getTime","trimProcessedDateRanges_","pendingDateRange","processDateRange","getDateRangesToProcess","dateRangeClasses","dateRangesToProcess","classListIndex","EventTarget$1","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","updateSegment","skipped","updateSegments","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","logger_","vhs_","addDateRangesToTextTrack_","addDateRangesToTextTrack","vhsOptions","dateRangesStorage_","handleMediaupdatetimeout_","handleLoadedPlaylist_","mediaPlaylist","availableDateRanges","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","callAllRequestHooks","requestSet","newOptions","requestCallback","callAllResponseHooks","responseSet","responseCallback","xhrFactory","XhrFunction","beforeRequest","Vhs","_requestCallbackSet","_responseCallbackSet","xhrMethod","beforeRequestOptions","originalAbort","byterangeStr","byterangeEnd","byterangeStart","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","step","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","playlistId","parseMainXml","mainXml","srcUrl","removeOldMediaGroupLabels","newMain","updateMain","oldMain","noChanges","playlistUpdate","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","filterChangedSidxMappings","videoSidx","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","addMetadataToTextTrack","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","mediaRequest_","fin","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","location","addEventStreamToMetadataTrack_","mpl","mup","createMUPTimeout_","mediaID","mediaChanged","createMediaUpdateTimeout","metadataArray","eventStreamNode","cueTime","frames","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","stringToArrayBuffer","browserWorkerPolyFill","workerObj","createObjectURL","Blob","blob","BlobBuilder","getBlob","factory","objectUrl","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","getUint64$3","numbers","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","dts","pts","keyFrame","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","generateSampleTable$1","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils$1","generateSampleTable","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","arr","silence_1","coneOfSilence","ONE_SECOND_IN_TS$4","clock$2","clock$1","sumFrameByteLengths","currentObj","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","silentFrame","firstFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","audioFrameUtils$1","ONE_SECOND_IN_TS$3","collectDtsInfo","timelineStartInfo","maxSegmentPts","maxSegmentDts","clearDtsInfo","calculateTrackBaseMediaDecodeTime","scale","trackDecodeInfo$1","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","userIdentifier","parseUserData","sei","parseCaptionPackets","userData","ccData","discardEmulationPreventionBytes$1","emulationPreventionBytesPositions","captionPacketParser","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","get708CharFromCode","newCode","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","toHexString","byteArray","unicode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","indent","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","indentations","isColorPAC","isNormalChar","logWarning","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover$1","direction","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArrayIndexOf$1","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","Iso88591","Utf16","Utf16be","Utf8","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","LINK_MIME_TYPE","pictureType","pictureData","owner","privateData","parseId3Frames$1","frameSize","frameHeader","frameStart","tagSize","hasExtendedHeader","parseId3","parseId3Frames","parseSyncSafeInteger","Stream$5","StreamTypes$3","id3","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","MP2T_PACKET_LENGTH$1","SYNC_BYTE$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","parsePes","pes","ptsDtsFlags","startPrefix","packetLength","forceFlush","packetFlushable","trackId","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","Stream$2","ExpGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","deltaScale","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData$1","percentEncode","parseIso88591","parseAdtsSize","lowThree","middle","highTwo","parseType$4","parseSampleRate","parseAacTimestamp","isLikelyAacData","parseType","Stream$1","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","AUDIO_PROPERTIES$1","audioProperties","VIDEO_PROPERTIES$1","videoProperties","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","toUnsigned$3","toHexString$1","bin","toUnsigned","parseType$3","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","findBox_1","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags$1","parseSampleFlags_1","parseSampleFlags","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTrun$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","parseTfhd$2","compositionStartTime","getVideoTrackIds","getTracks","getTimescaleFromMediaHeader","getEmsgID3","window_1","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","findSeiNals","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","parseSamples","truns","allSamples","trackRun","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","parseEmbeddedCaptions","trackNals","CaptionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","captionParser","uint8ToCString$1","curChar","retString","uint8ToCString","getUint64$1","parseEmsgBox","boxData","scheme_id_uri","presentation_time","presentation_time_delta","event_duration","message_data","emsgBox","isValidEmsgBox","scaleTime","timeDelta","emsg","hasScheme","isValidV0Box","isDefined","isValidV1Box","emsg$1","parseType$1","parseTfhd","parseTrun","parseTfdt","traks","lowestTime","baseTime","trafBoxes","parsedTfhd","parsedTfdt","parsedTrun","hdlrs","tkhds","handlerType","getUint8","tkhdVersion","sampleDescriptions","codecConfig","codecConfigType","codecBox","segmentData","emsgBoxes","parsedBox","parsedId3Frames","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","probe$1","StreamTypes","probe","SYNC_BYTE","parsePsi_","table","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","audioTimescale","inspectTs_","inspect","isAacData","tsInspector","wireTransmuxerEvents","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","MessageHandlers","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeEmsgID3","id3Frames","emsgData","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","handleData_","transmuxedData","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","waitForEndedTimelineEvent","handleMessage","currentTransmux","dequeue","transmuxQueue","processAction","enqueueAction","transmux","createTransmuxer","term","segmentTransmuxer","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","handleInitSegmentResponse","encryptedBytes","parseError","handleSegmentResponse","newBytes","lastReachedChar","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","finish","probeResult","handleSegmentBytes","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","decryptionWorker","decryptionHandler","decrypted","keyBytes","encrypted","decryptSegment","requestId","decryptedBytes","waitForCompletion","didError","segmentFinish","endOfAllRequests","handleLoadEnd","loadendState","abortFn","calledAbortFn","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","keyRequestOptions","keyRequestCallback","keyXhr","differentMapKey","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","playlistController_","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","concatSegments","segmentObj","createCaptionsTrackIfNotExists","inbandTextTracks","def","captionService","addCaptionData","captionArray","Cue","positionAlign","deprecateOldCue","addMetadata","videoDuration","metadataTrack","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","finiteDuration","nextTime","dateRangeAttr","scte35Out","scte35In","dateRangeKeysToOmit","addDateRangeMetadata","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","removeDuplicateCuesFromTrack","uniqueCues","cueKey","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","QUOTA_EXCEEDED_ERR","getSyncSegmentCandidate","targetTime","timelineSegments","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","getBufferedEndOrFallback","fallback","timestampOffsetForSegment","calculateTimestampOffsetForEachSegment","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","calculateTimestampOffsetForEachSegment_","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","replaceSegmentsUntil_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","isLLHLS","resetLoader","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","resetLoaderProperties","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","nextSegment","hasIndependentSegments","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","getPendingSegmentPlaylist","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","handleAppendError_","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","replaceSegmentsUntil","bufferTypes","sourceBuffer","queuePending","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","addSourceBuffer","mime","removeSourceBuffer","changeType","pushQueue","onUpdateend","bufferedAsString","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","tmp","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","segmentLoaders","mainSegmentLoader","activeTrack","activeGroup","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","isMainPlaylist","onGroupChanging","onTrackChanged","lastTrack","pc","selectPlaylist","fastQualityChange_","excludePlaylist","defaultTrack","setupListeners","requestOptions","initialize","variantLabel","useForcedSubtitles","CLOSED-CAPTIONS","newProps","groupMatch","variants","groupKeys","groupPropertyList","activeTrack_","setupMediaGroups","audioSegmentLoader","activeAudioGroup","onAudioTrackChanged","createMediaTypes","SteeringManifest","priority_","version_","ttl","ttl_","reloadUri","reloadUri_","ContentSteeringController","currentPathway","defaultPathway","availablePathways_","excludedPathways_","steeringManifest","proxyServerUrl_","manifestType_","ttlTimeout_","request_","excludedSteeringManifestURLs","xhr_","getBandwidth_","assignTagProperties","steeringTag","serverUri","steeringUri","startsWith","decodeDataUriManifest_","pathwayId","defaultServiceLocation","proxyServerURL","requestSteeringManifest","initialUri","getRequestURI","errorInfo","retrySeconds","startTTLTimeout_","steeringManifestJson","assignSteeringProperties_","setProxyServerUrl_","steeringUrl","steeringUrlObject","proxyServerUrlObject","encodeURI","setSteeringParams_","dataUri","urlObject","getPathway","networkThroughput","pathwayKey","throughputKey","steeringJson","TTL","chooseNextPathway","pathwaysByPriority","nextPathway","proxyURI","steeringURI","ttlMS","clearTTLTimeout_","addAvailablePathway","pathway","clearAvailablePathways","excludePathway","ABORT_EARLY_EXCLUSION_SECONDS","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","bufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","getBandwidth","contentSteeringController_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","shouldSwitchToMedia_","switchMedia_","newId","switchMediaForDASHContentSteering_","mediaPlaylists","dashMediaPlaylists","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","initContentSteeringController_","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","haveJsonSource","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","playlistOutdated","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","resetMainLoaderReplaceSegments","startPoint","mainMediaInfo","absolutePlaylistEnd","pathwayAttribute_","reIncludeDelay","excludeThenChangePathway_","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","supportFunction","unsupportedCodecs","unsupportedAudio","supporter","variantAudioGroup","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","initialMain","updateSteeringValues","didEnablePlaylists","differentPathwayId","steeringExclusion","noExcludeUntil","shouldExclude","changeSegmentPathway_","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","timeAhead","nextRange","currentRange","livePoint","videoUnderflow","videoUnderflow_","skipTheGap_","allowedEnd","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$4","version$3","version$2","version$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY","handleVhsMediaChange","handleVhsLoadedMetadata","emeKeySystems","keySystemOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","addOnRequestHook","addOnResponseHook","removeOnRequestHook","removeOnResponseHook","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","onRequest","onResponse","offRequest","offResponse","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","option","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","excludedHDPlaylists","qualityLevels_","convertToProgramTime","setupXhrHooks_","VhsSourceHandler","simpleType","getOverrideNative","canUseMsePlayback","defaultOverrideNative","supportsNativeMediaSources","vttjs","WebVTT","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","consumeCueSettings","region","vals","vals0","integer","lineAlign","snapToLines","center","skipWhitespace","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","shouldAdd","annotation","rootDiv","tagStack","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","computeLinePos","textTrackList","mediaElement","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","maxPosition","initialAxis","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","intersectArea","getSimpleBoxPosition","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","overlay","paddedOverlay","shouldCompute","hasBeenReset","margin","reportOrThrowError","collectNextLine","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","parseHeader","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","alignSetting","findDirectionSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","SyntaxError","getCueAsHTML","scrollSetting","findScrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","anObject","that","hasIndices","ignoreCase","multiline","dotAll","unicodeSets","sticky","$TypeError","passed","defineBuiltInAccessor","regExpFlags","fails","RegExpPrototype","INDICES_SUPPORT","O","calls","expected","addGetter","chr","pairs","defineBuiltIn","uncurryThis","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","$delete","$value","entries","dindex","entriesLength","unsafe","getAll","$has","__esModule"],"sourceRoot":""}