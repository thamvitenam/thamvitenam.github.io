{"version":3,"file":"js/93.0819bdd5.js","mappings":"4QACEA,EAAAA,EAAAA,IAEYC,EAAA,CAFDC,MAAM,eAAgBC,SAAQC,EAAAC,YAAaC,SAAA,GAAS,iBAAa,mBAAiB,EAAQC,SAAU,K,CADjHC,SAAAC,EAAAA,EAAAA,KAEoB,IAAsB,gBAAtCC,EAAAA,EAAAA,IAAgGC,EAAAA,GAAA,MAFpGC,EAAAA,EAAAA,IAEmCC,EAAAC,QAARC,K,WAAvBf,EAAAA,EAAAA,IAAgGgB,EAAA,CAAxDC,IAAKF,EAAKG,GAAKA,GAAE,SAAaH,EAAKG,I,2BAF/EC,EAAA,G,yEAgBE,G,OAAA,CACEC,KAAM,OACNC,WAAY,CAAC,EACbC,IAAAA,GACE,MAAO,CACLR,OAAQ,GACRS,QAAS,GACTC,QAAS,EACTC,SAAU,EAEd,EACAC,MAAO,CAAC,EACRC,SAAU,CAAC,EACXC,QAAS,KACJC,EAAAA,EAAAA,IAAW,CACZC,cAAe,yBAEjBzB,WAAAA,CAAY0B,GACVC,KAAKT,QAAQU,SAAQlB,IACnBA,EAAKmB,OAAO,IAEVH,GAAUC,KAAKT,QAAQY,OAAS,IAClCH,KAAKR,QAAUQ,KAAKR,QAAU,EAC9BQ,KAAKI,WAAU,GAEnB,EACA,eAAMA,CAAUC,GACVA,GACFL,KAAKF,eAAc,GAErB,IACE,IAAI,KAACQ,EAAI,KAAEC,SAAcC,EAAAA,GAAc,CACrChB,QAASQ,KAAKR,QACdC,SAAUO,KAAKP,WAEL,KAARc,GAAeD,EAAKH,SACtBH,KAAKlB,OAASkB,KAAKlB,OAAO2B,OAAOH,GACjCA,EAAKL,SAAQlB,IACXiB,KAAKU,WAAW3B,EAAK,IAG3B,CAAE,MAAO4B,GAET,CAAE,QACAX,KAAKF,eAAc,EACrB,CACF,EACAY,UAAAA,CAAW3B,GACT6B,YAAW,KA4BTC,SAASC,eAAe,SAAW/B,EAAKG,IAAI6B,UAAY,uBAAuBhC,EAAKG,gCACpF0B,YAAW,KACTZ,KAAKT,QAAQyB,MAAKC,EAAAA,EAAAA,GAAQJ,SAASC,eAAe,YAAc/B,EAAKG,IAAK,CACxEgC,UAAU,EACVC,OAAO,EACPC,OAAO,EACPC,OAAQ,OACRC,OAAQvC,EAAKwC,WACbC,QAAS,CACP,CACEC,IAAK1C,EAAK2C,MACVC,KAAM,4BAGT,WACH,IAAG,GACF,EAAE,GACJ,EACL,GAEFC,OAAAA,GACE5B,KAAKI,WAAU,EACjB,EACAyB,aAAAA,GACM7B,KAAKT,QAAQY,QACfH,KAAKT,QAAQU,SAAQlB,IACnBA,EAAK+C,SAAS,GAGpB,I,UClHJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://new-web/./src/views/look/index.vue","webpack://new-web/./src/views/look/index.vue?1665"],"sourcesContent":["<template>\r\n  <van-swipe class=\"video-swiper\" @change=\"videoChange\" vertical lazy-render :show-indicators=\"false\" :duration=\"300\">\r\n    <van-swipe-item v-for=\"item in videos\" :key=\"item.id\" :id=\"'swipe-' + item.id\"></van-swipe-item>\r\n  </van-swipe>\r\n</template>\r\n\r\n<script>\r\n  import * as api from '@/api'\r\n  import {mapActions} from 'vuex';\r\n  import 'video.js/dist/video-js.css';\r\n  import VideoJs from 'video.js';\r\n  import Player from 'xgplayer';\r\n  import 'xgplayer/dist/index.min.css';\r\n  import HlsPlugin from 'xgplayer-hls'\r\n  import MobilePreset from 'xgplayer/es/presets/mobile'\r\n  // import {uniqueId} from 'lodash'\r\n  export default {\r\n    name: \"Look\",\r\n    components: {},\r\n    data() {\r\n      return {\r\n        videos: [],\r\n        players: [],\r\n        pageNum: 1,\r\n        pageSize: 6\r\n      }\r\n    },\r\n    watch: {},\r\n    computed: {},\r\n    methods: {\r\n      ...mapActions({\r\n        toggleLoading: 'common/toggleLoading',\r\n      }),\r\n      videoChange(curIdx) {\r\n        this.players.forEach(item => {\r\n          item.pause()\r\n        })\r\n        if (curIdx == this.players.length - 3) {\r\n          this.pageNum = this.pageNum + 1;\r\n          this.getVideos(false);\r\n        }\r\n      },\r\n      async getVideos(loading) {\r\n        if (loading) {\r\n          this.toggleLoading(true)\r\n        }\r\n        try {\r\n          let {rows, code} = await api.getVideos({\r\n            pageNum: this.pageNum,\r\n            pageSize: this.pageSize,\r\n          })\r\n          if (code == 200 && rows.length) {\r\n            this.videos = this.videos.concat(rows);\r\n            rows.forEach(item => {\r\n              this.initPlayer(item)\r\n            })\r\n          }\r\n        } catch (e) {\r\n\r\n        } finally {\r\n          this.toggleLoading(false)\r\n        }\r\n      },\r\n      initPlayer(item) {\r\n        setTimeout(() => {\r\n        //   const config = {\r\n        //   \"id\": 'swipe-' + item.id,\r\n        //   fluid: false,\r\n        //   width:400,\r\n        //   height:600,\r\n        //   volume: 0.9,\r\n        //   autoplay: false,\r\n        //   videoInit: true,\r\n        //   loop:true,\r\n        //   playbackRate: [0.5, 0.75, 1, 1.5, 2],\r\n        //   defaultPlaybackRate: 1,\r\n        //   \"url\": item.video,\r\n        //   \"playsinline\": true,\r\n        //   \"poster\": item.videoCover,\r\n        //   \"plugins\": [HlsPlugin],\r\n        //   \"isLive\": false,\r\n        //   \"playbackRate\": [\r\n        //             null\r\n        //   ],\r\n        //   \"rotate\": {\r\n        //             \"clockwise\": false,\r\n        //             \"innerRotate\": false\r\n        //   },\r\n        //   \"pip\": true\r\n        // }\r\n        // let player = new Player(config)\r\n        \r\n          document.getElementById('swipe-' + item.id).innerHTML = `<video id=\"video-js-${item.id}\" class=\"video-js\"></video>`\r\n          setTimeout(() => {\r\n            this.players.push(VideoJs(document.getElementById('video-js-' + item.id), {\r\n              controls: true,\r\n              muted: true,\r\n              fluid: true,\r\n              reload: \"auto\",\r\n              poster: item.videoCover,\r\n              sources: [\r\n                {\r\n                  src: item.video,\r\n                  type: 'application/x-mpegURL',\r\n                },\r\n              ],\r\n            }, function onPlayerReady() {\r\n            }))\r\n          }, 0)\r\n        }, 0)\r\n      },\r\n    },\r\n    mounted() {\r\n      this.getVideos(true);\r\n    },\r\n    beforeUnmount() {\r\n      if (this.players.length) {\r\n        this.players.forEach(item => {\r\n          item.dispose()\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .video-swiper{\r\n    height: calc(100vh - 58px);\r\n  }\r\n  :deep(.van-swipe-item) {\r\n    .video-js{\r\n      width: 100%!important;\r\n      height: 100%!important;\r\n      background: none;\r\n    }\r\n  }\r\n\r\n</style>\r\n","import { render } from \"./index.vue?vue&type=template&id=d7b7407c&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=d7b7407c&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d7b7407c\"]])\n\nexport default __exports__"],"names":["_createBlock","_component_van_swipe","class","onChange","$options","videoChange","vertical","duration","default","_withCtx","_createElementBlock","_Fragment","_renderList","$data","videos","item","_component_van_swipe_item","key","id","_","name","components","data","players","pageNum","pageSize","watch","computed","methods","mapActions","toggleLoading","curIdx","this","forEach","pause","length","getVideos","loading","rows","code","api","concat","initPlayer","e","setTimeout","document","getElementById","innerHTML","push","VideoJs","controls","muted","fluid","reload","poster","videoCover","sources","src","video","type","mounted","beforeUnmount","dispose","__exports__","render"],"sourceRoot":""}