{"version":3,"file":"js/215.5b4a0bbc.js","mappings":"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","sources":["webpack://new-web/./node_modules/@videojs/xhr/lib/http-handler.js","webpack://new-web/./node_modules/@videojs/xhr/lib/index.js","webpack://new-web/./node_modules/@videojs/xhr/lib/interceptors.js","webpack://new-web/./node_modules/@videojs/xhr/lib/retry.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/conventions.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/dom-parser.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/dom.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/entities.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/index.js","webpack://new-web/./node_modules/@xmldom/xmldom/lib/sax.js","webpack://new-web/./node_modules/global/document.js","webpack://new-web/./node_modules/global/window.js","webpack://new-web/./node_modules/is-function/index.js","webpack://new-web/./node_modules/url-toolkit/src/url-toolkit.js","webpack://new-web/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/stream.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://new-web/./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/codecs.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/media-types.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/byte-helpers.js","webpack://new-web/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/resolve-url.js","webpack://new-web/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/media-groups.js","webpack://new-web/./node_modules/mpd-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","webpack://new-web/./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/mp4-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/id3-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/opus-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/ebml-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/nal-helpers.js","webpack://new-web/./node_modules/@videojs/vhs-utils/es/containers.js","webpack://new-web/./node_modules/video.js/dist/video.es.js","webpack://new-web/./node_modules/video.js/node_modules/mux.js/lib/tools/parse-sidx.js","webpack://new-web/./node_modules/video.js/node_modules/mux.js/lib/utils/clock.js","webpack://new-web/./node_modules/video.js/node_modules/mux.js/lib/utils/numbers.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/browser-index.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/vtt.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/vttcue.js","webpack://new-web/./node_modules/videojs-vtt.js/lib/vttregion.js","webpack://new-web/./node_modules/core-js/internals/validate-arguments-length.js","webpack://new-web/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://new-web/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://new-web/./node_modules/core-js/modules/web.url-search-params.size.js","webpack://new-web/./node_modules/@babel/runtime/helpers/extends.js"],"sourcesContent":["\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\nvar InterceptorsStorage = require('./interceptors.js');\n\nvar RetryManager = require(\"./retry.js\");\n\ncreateXHR.httpHandler = require('./http-handler.js');\ncreateXHR.requestInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.responseInterceptorsStorage = new InterceptorsStorage();\ncreateXHR.retryManager = new RetryManager();\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  } // call all registered request interceptors for a given request type:\n\n\n  if (options.requestType && createXHR.requestInterceptorsStorage.getIsEnabled()) {\n    var requestInterceptorPayload = {\n      uri: options.uri || options.url,\n      headers: options.headers || {},\n      body: options.body,\n      metadata: options.metadata || {},\n      retry: options.retry,\n      timeout: options.timeout\n    };\n    var updatedPayload = createXHR.requestInterceptorsStorage.execute(options.requestType, requestInterceptorPayload);\n    options.uri = updatedPayload.uri;\n    options.headers = updatedPayload.headers;\n    options.body = updatedPayload.body;\n    options.metadata = updatedPayload.metadata;\n    options.retry = updatedPayload.retry;\n    options.timeout = updatedPayload.timeout;\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    // do not call load 2 times when response interceptors are enabled\n    // why do we even need this 2nd load?\n    if (xhr.readyState === 4 && !createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0; // we would like to retry on error:\n\n    if (!aborted && createXHR.retryManager.getIsEnabled() && options.retry && options.retry.shouldRetry()) {\n      options.retryTimeout = setTimeout(function () {\n        options.retry.moveToNextAttempt(); // we want to re-use the same options and the same xhr object:\n\n        options.xhr = xhr;\n\n        _createXHR(options);\n      }, options.retry.getCurrentFuzzedDelay());\n      return;\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: failureResponse.headers || {},\n        body: failureResponse.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      failureResponse.body = _updatedPayload.body;\n      failureResponse.headers = _updatedPayload.headers;\n    }\n\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n    clearTimeout(options.retryTimeout);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    } // call all registered response interceptors for a given request type:\n\n\n    if (options.requestType && createXHR.responseInterceptorsStorage.getIsEnabled()) {\n      var responseInterceptorPayload = {\n        headers: response.headers || {},\n        body: response.body,\n        responseUrl: xhr.responseURL,\n        responseType: xhr.responseType\n      };\n\n      var _updatedPayload2 = createXHR.responseInterceptorsStorage.execute(options.requestType, responseInterceptorPayload);\n\n      response.body = _updatedPayload2.body;\n      response.headers = _updatedPayload2.headers;\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n    clearTimeout(options.retryTimeout);\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","\"use strict\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar InterceptorsStorage = /*#__PURE__*/function () {\n  function InterceptorsStorage() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  }\n\n  var _proto = InterceptorsStorage.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.typeToInterceptorsMap_ = new Map();\n    this.enabled_ = false;\n  };\n\n  _proto.addInterceptor = function addInterceptor(type, interceptor) {\n    if (!this.typeToInterceptorsMap_.has(type)) {\n      this.typeToInterceptorsMap_.set(type, new Set());\n    }\n\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet.has(interceptor)) {\n      // already have this interceptor\n      return false;\n    }\n\n    interceptorsSet.add(interceptor);\n    return true;\n  };\n\n  _proto.removeInterceptor = function removeInterceptor(type, interceptor) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (interceptorsSet && interceptorsSet.has(interceptor)) {\n      interceptorsSet.delete(interceptor);\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.clearInterceptorsByType = function clearInterceptorsByType(type) {\n    var interceptorsSet = this.typeToInterceptorsMap_.get(type);\n\n    if (!interceptorsSet) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_.delete(type);\n    this.typeToInterceptorsMap_.set(type, new Set());\n    return true;\n  };\n\n  _proto.clear = function clear() {\n    if (!this.typeToInterceptorsMap_.size) {\n      return false;\n    }\n\n    this.typeToInterceptorsMap_ = new Map();\n    return true;\n  };\n\n  _proto.getForType = function getForType(type) {\n    return this.typeToInterceptorsMap_.get(type) || new Set();\n  };\n\n  _proto.execute = function execute(type, payload) {\n    var interceptors = this.getForType(type);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(interceptors), _step; !(_step = _iterator()).done;) {\n      var interceptor = _step.value;\n\n      try {\n        payload = interceptor(payload);\n      } catch (e) {//ignore\n      }\n    }\n\n    return payload;\n  };\n\n  return InterceptorsStorage;\n}();\n\nmodule.exports = InterceptorsStorage;","\"use strict\";\n\nvar RetryManager = /*#__PURE__*/function () {\n  function RetryManager() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  }\n\n  var _proto = RetryManager.prototype;\n\n  _proto.getIsEnabled = function getIsEnabled() {\n    return this.enabled_;\n  };\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n  };\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n  };\n\n  _proto.reset = function reset() {\n    this.maxAttempts_ = 1;\n    this.delayFactor_ = 0.1;\n    this.fuzzFactor_ = 0.1;\n    this.initialDelay_ = 1000;\n    this.enabled_ = false;\n  };\n\n  _proto.getMaxAttempts = function getMaxAttempts() {\n    return this.maxAttempts_;\n  };\n\n  _proto.setMaxAttempts = function setMaxAttempts(maxAttempts) {\n    this.maxAttempts_ = maxAttempts;\n  };\n\n  _proto.getDelayFactor = function getDelayFactor() {\n    return this.delayFactor_;\n  };\n\n  _proto.setDelayFactor = function setDelayFactor(delayFactor) {\n    this.delayFactor_ = delayFactor;\n  };\n\n  _proto.getFuzzFactor = function getFuzzFactor() {\n    return this.fuzzFactor_;\n  };\n\n  _proto.setFuzzFactor = function setFuzzFactor(fuzzFactor) {\n    this.fuzzFactor_ = fuzzFactor;\n  };\n\n  _proto.getInitialDelay = function getInitialDelay() {\n    return this.initialDelay_;\n  };\n\n  _proto.setInitialDelay = function setInitialDelay(initialDelay) {\n    this.initialDelay_ = initialDelay;\n  };\n\n  _proto.createRetry = function createRetry(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        maxAttempts = _ref.maxAttempts,\n        delayFactor = _ref.delayFactor,\n        fuzzFactor = _ref.fuzzFactor,\n        initialDelay = _ref.initialDelay;\n\n    return new Retry({\n      maxAttempts: maxAttempts || this.maxAttempts_,\n      delayFactor: delayFactor || this.delayFactor_,\n      fuzzFactor: fuzzFactor || this.fuzzFactor_,\n      initialDelay: initialDelay || this.initialDelay_\n    });\n  };\n\n  return RetryManager;\n}();\n\nvar Retry = /*#__PURE__*/function () {\n  function Retry(options) {\n    this.maxAttempts_ = options.maxAttempts;\n    this.delayFactor_ = options.delayFactor;\n    this.fuzzFactor_ = options.fuzzFactor;\n    this.currentDelay_ = options.initialDelay;\n    this.currentAttempt_ = 1;\n  }\n\n  var _proto2 = Retry.prototype;\n\n  _proto2.moveToNextAttempt = function moveToNextAttempt() {\n    this.currentAttempt_++;\n    var delayDelta = this.currentDelay_ * this.delayFactor_;\n    this.currentDelay_ = this.currentDelay_ + delayDelta;\n  };\n\n  _proto2.shouldRetry = function shouldRetry() {\n    return this.currentAttempt_ < this.maxAttempts_;\n  };\n\n  _proto2.getCurrentDelay = function getCurrentDelay() {\n    return this.currentDelay_;\n  };\n\n  _proto2.getCurrentMinPossibleDelay = function getCurrentMinPossibleDelay() {\n    return (1 - this.fuzzFactor_) * this.currentDelay_;\n  };\n\n  _proto2.getCurrentMaxPossibleDelay = function getCurrentMaxPossibleDelay() {\n    return (1 + this.fuzzFactor_) * this.currentDelay_;\n  }\n  /**\n   * For example fuzzFactor is 0.1\n   * This means ±10% deviation\n   * So if we have delay as 1000\n   * This function can generate any value from 900 to 1100\n   */\n  ;\n\n  _proto2.getCurrentFuzzedDelay = function getCurrentFuzzedDelay() {\n    var lowValue = this.getCurrentMinPossibleDelay();\n    var highValue = this.getCurrentMaxPossibleDelay();\n    return lowValue + Math.random() * (highValue - lowValue);\n  };\n\n  return Retry;\n}();\n\nmodule.exports = RetryManager;","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","import window from 'global/window';\nvar DEFAULT_LOCATION = 'https://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  }\n\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n  // and if we're location-less, remove the location\n  // otherwise, return the url unmodified\n\n  if (removeLocation) {\n    return newUrl.href.slice(DEFAULT_LOCATION.length);\n  } else if (protocolLess) {\n    return newUrl.href.slice(newUrl.protocol.length);\n  }\n\n  return newUrl.href;\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 7.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * Converts a string into a resolution object\n *\n * @param {string} resolution a string such as 3840x2160\n *\n * @return {Object} An object representing the resolution\n *\n */\n\n\nconst parseResolution = resolution => {\n  const split = resolution.split('x');\n  const result = {};\n\n  if (split[0]) {\n    result.width = parseInt(split[0], 10);\n  }\n\n  if (split[1]) {\n    result.height = parseInt(split[1], 10);\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            event.attributes.RESOLUTION = parseResolution(event.attributes.RESOLUTION);\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-I-FRAMES-ONLY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'i-frames-only'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'content-steering'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-I-FRAME-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'i-frame-playlist'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.URI) {\n          event.uri = event.attributes.URI;\n        }\n\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n\n        if (event.attributes.RESOLUTION) {\n          event.attributes.RESOLUTION = parseResolution(event.attributes.RESOLUTION);\n        }\n\n        if (event.attributes['AVERAGE-BANDWIDTH']) {\n          event.attributes['AVERAGE-BANDWIDTH'] = parseInt(event.attributes['AVERAGE-BANDWIDTH'], 10);\n        }\n\n        if (event.attributes['FRAME-RATE']) {\n          event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DEFINE:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'define'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @param {Object} [opts] Options for the constructor, needed for substitutions\n * @param {string} [opts.uri] URL to check for query params\n * @param {Object} [opts.mainDefinitions] Definitions on main playlist that can be imported\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor(opts = {}) {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    this.mainDefinitions = opts.mainDefinitions || {};\n    this.params = new URL(opts.uri, 'https://a.com').searchParams;\n    this.lastProgramDateTime = null;\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      dateRanges: [],\n      iFramePlaylists: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const dateRangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition; // Replace variables in uris and attributes as defined in #EXT-X-DEFINE tags\n\n      if (self.manifest.definitions) {\n        for (const def in self.manifest.definitions) {\n          if (entry.uri) {\n            entry.uri = entry.uri.replace(`{$${def}}`, self.manifest.definitions[def]);\n          }\n\n          if (entry.attributes) {\n            for (const attr in entry.attributes) {\n              if (typeof entry.attributes[attr] === 'string') {\n                entry.attributes[attr] = entry.attributes[attr].replace(`{$${def}}`, self.manifest.definitions[def]);\n              }\n            }\n          }\n        }\n      }\n\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.title) {\n                currentUri.title = entry.title;\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n              const {\n                lastProgramDateTime\n              } = this;\n              this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n              // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n              if (lastProgramDateTime === null) {\n                // Extrapolate Program Date Time backward\n                // Since it is first program date time occurrence we're assuming that\n                // all this.manifest.segments have no program date time info\n                this.manifest.segments.reduceRight((programDateTime, segment) => {\n                  segment.programDateTime = programDateTime - segment.duration * 1000;\n                  return segment.programDateTime;\n                }, this.lastProgramDateTime);\n              }\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.dateRanges.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const dateRange = this.manifest.dateRanges[index];\n\n              if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (dateRange.duration && dateRange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!dateRange.endOnNext;\n\n              if (endOnNextYes && !dateRange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (dateRange.duration && dateRange.endDate) {\n                const startDate = dateRange.startDate;\n                const newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (!dateRangeTags[dateRange.id]) {\n                dateRangeTags[dateRange.id] = dateRange;\n              } else {\n                for (const attribute in dateRangeTags[dateRange.id]) {\n                  if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                    });\n                    break;\n                  }\n                } // if tags with the same ID do not have conflicting attributes, merge them\n\n\n                const dateRangeWithSameId = this.manifest.dateRanges.findIndex(dateRangeToFind => dateRangeToFind.id === dateRange.id);\n                this.manifest.dateRanges[dateRangeWithSameId] = _extends(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                dateRangeTags[dateRange.id] = _extends(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                this.manifest.dateRanges.pop();\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            },\n\n            'i-frames-only'() {\n              this.manifest.iFramesOnly = true;\n              this.requiredCompatibilityversion(this.manifest.version, 4);\n            },\n\n            'content-steering'() {\n              this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n            },\n\n            /** @this {Parser} */\n            define() {\n              this.manifest.definitions = this.manifest.definitions || {};\n\n              const addDef = (n, v) => {\n                if (n in this.manifest.definitions) {\n                  // An EXT-X-DEFINE tag MUST NOT specify the same Variable Name as any other\n                  // EXT-X-DEFINE tag in the same Playlist.  Parsers that encounter duplicate\n                  // Variable Name declarations MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: Duplicate name ${n}`\n                  });\n                  return;\n                }\n\n                this.manifest.definitions[n] = v;\n              };\n\n              if ('QUERYPARAM' in entry.attributes) {\n                if ('NAME' in entry.attributes || 'IMPORT' in entry.attributes) {\n                  // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a\n                  // QUERYPARAM attribute, but only one of the three.  Otherwise, the\n                  // client MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: 'EXT-X-DEFINE: Invalid attributes'\n                  });\n                  return;\n                }\n\n                const val = this.params.get(entry.attributes.QUERYPARAM);\n\n                if (!val) {\n                  // If the QUERYPARAM attribute value does not match any query parameter in\n                  // the URI or the matching parameter has no associated value, the parser\n                  // MUST fail to parse the Playlist.  If more than one parameter matches,\n                  // any of the associated values MAY be used.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No query param ${entry.attributes.QUERYPARAM}`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.QUERYPARAM, decodeURIComponent(val));\n                return;\n              }\n\n              if ('NAME' in entry.attributes) {\n                if ('IMPORT' in entry.attributes) {\n                  // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a\n                  // QUERYPARAM attribute, but only one of the three.  Otherwise, the\n                  // client MUST fail to parse the Playlist.\n                  this.trigger('error', {\n                    message: 'EXT-X-DEFINE: Invalid attributes'\n                  });\n                  return;\n                }\n\n                if (!('VALUE' in entry.attributes) || typeof entry.attributes.VALUE !== 'string') {\n                  // This attribute is REQUIRED if the EXT-X-DEFINE tag has a NAME attribute.\n                  // The quoted-string MAY be empty.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No value for ${entry.attributes.NAME}`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.NAME, entry.attributes.VALUE);\n                return;\n              }\n\n              if ('IMPORT' in entry.attributes) {\n                if (!this.mainDefinitions[entry.attributes.IMPORT]) {\n                  // Covers two conditions, as mainDefinitions will always be empty on main\n                  //\n                  // EXT-X-DEFINE tags containing the IMPORT attribute MUST NOT occur in\n                  // Multivariant Playlists; they are only allowed in Media Playlists.\n                  //\n                  // If the IMPORT attribute value does not match any Variable Name in the\n                  // Multivariant Playlist, or if the Media Playlist loaded from a\n                  // Multivariant Playlist, the parser MUST fail the Playlist.\n                  this.trigger('error', {\n                    message: `EXT-X-DEFINE: No value ${entry.attributes.IMPORT} to import, or IMPORT used on main playlist`\n                  });\n                  return;\n                }\n\n                addDef(entry.attributes.IMPORT, this.mainDefinitions[entry.attributes.IMPORT]);\n                return;\n              } // An EXT-X-DEFINE tag MUST contain either a NAME, an IMPORT, or a QUERYPARAM\n              // attribute, but only one of the three.  Otherwise, the client MUST fail to\n              // parse the Playlist.\n\n\n              this.trigger('error', {\n                message: 'EXT-X-DEFINE: No attribute'\n              });\n            },\n\n            'i-frame-playlist'() {\n              this.manifest.iFramePlaylists.push({\n                attributes: entry.attributes,\n                uri: entry.uri,\n                timeline: currentTimeline\n              });\n              this.warnOnMissingAttributes_('#EXT-X-I-FRAME-STREAM-INF', entry.attributes, ['BANDWIDTH', 'URI']);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n          if (this.lastProgramDateTime !== null) {\n            currentUri.programDateTime = this.lastProgramDateTime;\n            this.lastProgramDateTime += currentUri.duration * 1000;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  requiredCompatibilityversion(currentVersion, targetVersion) {\n    if (currentVersion < targetVersion || !currentVersion) {\n      this.trigger('warn', {\n        message: `manifest must be at least version ${targetVersion}`\n      });\n    }\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n\n    if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n      this.trigger('warn', {\n        message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n      });\n    }\n\n    this.lastProgramDateTime = null;\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\n/**\n * Tests whether the codec is supported by MediaSource. Optionally also tests ManagedMediaSource.\n *\n * @param {string} codecString\n *        Codec to test\n * @param {boolean} [withMMS]\n *        Whether to check if ManagedMediaSource supports it\n * @return {boolean}\n *          Codec is supported\n */\n\nexport var browserSupportsCodec = function browserSupportsCodec(codecString, withMMS) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  if (withMMS === void 0) {\n    withMMS = false;\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || withMMS && window.ManagedMediaSource && window.ManagedMediaSource.isTypeSupported && window.ManagedMediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name mpd-parser @version 1.3.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.3.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  // Break out playlists into groups based on their baseUrl\n  const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n    if (!acc[cur.attributes.baseUrl]) {\n      acc[cur.attributes.baseUrl] = [];\n    }\n\n    acc[cur.attributes.baseUrl].push(cur);\n    return acc;\n  }, {});\n  let allPlaylists = [];\n  Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n    const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    allPlaylists = allPlaylists.concat(mergedPlaylists);\n  });\n  return allPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  const vttPlaylist = {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.serviceLocation) {\n    vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  return vttPlaylist;\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n    const language = playlist.attributes.lang || 'und';\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  contentSteering,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (contentSteering) {\n    manifest.contentSteering = contentSteering;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',\n  // ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme\n  'urn:mpeg:dash:mp4protection:2011': 'mp4protection'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {Object[]} references\n *        List of objects containing the reference URL as well as its attributes\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {Object[]}\n *         List of objects with resolved urls and attributes\n */\n\nconst buildBaseUrls = (references, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return references;\n  }\n\n  return flatten(references.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      const initialBaseUrl = getContent(baseUrlElement);\n      const resolvedBaseUrl = resolveUrl(reference.baseUrl, initialBaseUrl);\n      const finalBaseUrl = merge(parseAttributes(baseUrlElement), {\n        baseUrl: resolvedBaseUrl\n      }); // If the URL is resolved, we want to get the serviceLocation from the reference\n      // assuming there is no serviceLocation on the initialBaseUrl\n\n      if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n        finalBaseUrl.serviceLocation = reference.serviceLocation;\n      }\n\n      return finalBaseUrl;\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {Object[]} adaptationSetBaseUrls\n *        List of objects containing resolved base URLs and attributes\n *        inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, baseUrl)\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {Object[]} periodBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n  * @param {Object[]} mpdBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Tranforms an array of content steering nodes into an object\n * containing CDN content steering information from the MPD manifest.\n *\n * For more information on the DASH spec for Content Steering parsing, see:\n * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {Node[]} contentSteeringNodes\n *        Content steering nodes\n * @param {Function} eventHandler\n *        The event handler passed into the parser options to handle warnings\n * @return {Object}\n *        Object containing content steering data\n */\n\nconst generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n  // If there are more than one ContentSteering tags, throw an error\n  if (contentSteeringNodes.length > 1) {\n    eventHandler({\n      type: 'warn',\n      message: 'The MPD manifest should contain no more than one ContentSteering tag'\n    });\n  } // Return a null value if there are no ContentSteering tags\n\n\n  if (!contentSteeringNodes.length) {\n    return null;\n  }\n\n  const infoFromContentSteeringTag = merge({\n    serverURL: getContent(contentSteeringNodes[0])\n  }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n  // to `false` if it doesn't exist\n\n  infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n  return infoFromContentSteeringTag;\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0,\n    // TODO: For now, we are expecting an eventHandler callback function\n    // to be passed into the mpd parser as an option.\n    // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n    // This will support new features including a standardized event handler.\n    // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n    // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n    eventHandler = function () {}\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([{\n    baseUrl: manifestUri\n  }], findChildren(mpd, 'BaseURL'));\n  const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n    // TODO: There are occurences where this `representationInfo` array contains undesired\n    // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n    // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n    // parent BaseURL and a child BaseURL, and the value does not resolve,\n    // we end up returning the child BaseURL multiple times.\n    // We need to determine a way to remove these duplicates in a safe way.\n    // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throws on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    contentSteering: parsedManifestInfo.contentSteeringInfo,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.21.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document$1 from 'global/document';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.21.0\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document$1) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} name\n *         The name of the console method to use.\n *\n * @param  {Object} log\n *         The arguments to be passed to the matching console method.\n *\n * @param {string} [styles]\n *        styles for name\n */\nconst LogByTypeFactory = (name, log, styles) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  let resultName = name;\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n  if (styles) {\n    resultName = `%c${name}`;\n    args.unshift(styles);\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(resultName + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name, delimiter = ':', styles = '') {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  function log(...args) {\n    logByType('log', level, args);\n  }\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log, styles);\n\n  /**\n   * Create a new subLogger which chains the old name to the new name.\n   *\n   * For example, doing `mylogger = videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} subName\n   *        The name to add call the new logger\n   * @param {string} [subDelimiter]\n   *        Optional delimiter\n   * @param {string} [subStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createLogger = (subName, subDelimiter, subStyles) => {\n    const resultDelimiter = subDelimiter !== undefined ? subDelimiter : delimiter;\n    const resultStyles = subStyles !== undefined ? subStyles : styles;\n    const resultName = `${name} ${resultDelimiter} ${subName}`;\n    return createLogger$1(resultName, resultDelimiter, resultStyles);\n  };\n\n  /**\n   * Create a new logger.\n   *\n   * @param {string} newName\n   *        The name for the new logger\n   * @param {string} [newDelimiter]\n   *        Optional delimiter\n   * @param {string} [newStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createNewLogger = (newName, newDelimiter, newStyles) => {\n    return createLogger$1(newName, newDelimiter, newStyles);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Returns an array of values for a given object\n *\n * @param  {Object} source - target object\n * @return {Array<unknown>} - object values\n */\nfunction values(source = {}) {\n  const result = [];\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  values: values,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * Whether or not this is a Chromecast receiver application.\n *\n * @static\n * @type {Boolean}\n */\nconst IS_CHROMECAST_RECEIVER = Boolean(window$1.cast && window$1.cast.framework && window$1.cast.framework.CastReceiverContext);\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this is a Tizen device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_TIZEN = false;\n\n/**\n * Whether or not this is a WebOS device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WEBOS = false;\n\n/**\n * Whether or not this is a Smart TV (Tizen or WebOS) device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SMART_TV = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD && UAD.platform && UAD.brands) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_TIZEN = /Tizen/i.test(USER_AGENT);\n  IS_WEBOS = /Web0S/i.test(USER_AGENT);\n  IS_SMART_TV = IS_TIZEN || IS_WEBOS;\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE && !IS_SMART_TV;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  IS_CHROMECAST_RECEIVER: IS_CHROMECAST_RECEIVER,\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  get IS_TIZEN () { return IS_TIZEN; },\n  get IS_WEBOS () { return IS_WEBOS; },\n  get IS_SMART_TV () { return IS_SMART_TV; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document$1 === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document$1[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document$1.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document$1;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document$1.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {HTMLElement} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`, but not removed. If `false`, the `classToToggle` will be removed from\n *           the `element`, but not added. If `undefined`, the callback will be ignored.\n *\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ['autoplay', 'controls', 'playsinline', 'loop', 'muted', 'default', 'defaultMuted'];\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      /** @type {boolean|string} */\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (knownBooleans.includes(attrName)) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document$1.body.focus();\n  document$1.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document$1.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document$1[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      if (item.assignedSlot && item.assignedSlot.parentElement && window$1.WebKitCSSMatrix) {\n        const transformValue = window$1.getComputedStyle(item.assignedSlot.parentElement).transform;\n        const matrix = new window$1.WebKitCSSMatrix(transformValue);\n        translated.x += matrix.m41;\n        translated.y += matrix.m42;\n      }\n      item = item.parentNode || item.host;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document$1.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {MouseEvent} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  // MacOS Sonoma trackpad when \"tap to click enabled\"\n  if (event.type === 'mousedown' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\n/**\n * Copy document style sheets to another window.\n *\n * @param    {Window} win\n *           The window element you want to copy the document style sheets to.\n *\n */\nfunction copyStyleSheetsToWindow(win) {\n  [...document$1.styleSheets].forEach(styleSheet => {\n    try {\n      const cssRules = [...styleSheet.cssRules].map(rule => rule.cssText).join('');\n      const style = document$1.createElement('style');\n      style.textContent = cssRules;\n      win.document.head.appendChild(style);\n    } catch (e) {\n      const link = document$1.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = styleSheet.type;\n      // For older Safari this has to be the string; on other browsers setting the MediaList works\n      link.media = styleSheet.media.mediaText;\n      link.href = styleSheet.href;\n      win.document.head.appendChild(link);\n    }\n  });\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle,\n  copyStyleSheetsToWindow: copyStyleSheetsToWindow\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document$1.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document$1.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document$1.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document$1.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document$1.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string[]} types\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n\n    // TODO: Probably best to create an allowlist of event props\n    const deprecatedProps = ['layerX', 'layerY', 'keyLocation', 'path', 'webkitMovementX', 'webkitMovementY', 'mozPressure', 'mozInputSource'];\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (!deprecatedProps.includes(key)) {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document$1;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document$1.documentElement;\n      const body = document$1.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce$1 = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce$1\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @protected\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} target\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    // This was `[target, type, listener] = args;` but this block needs more than\n    // one statement to produce minified output compatible with Chrome 53.\n    // See https://github.com/videojs/video.js/pull/8810\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A callback to be called if and when the component is ready.\n * `this` will be the Component instance.\n *\n * @callback ReadyCallback\n * @returns  {void}\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} [fn]\n   *        The function to remove. If not specified, all listeners managed by Video.js will be removed.\n   */\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * @param {Object} [hash]\n   *        Optionally extra argument to pass through to an event listener\n   */\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Adds an SVG icon element to another element or component.\n   *\n   * @param {string} iconName\n   *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on. Defaults to the current Component's element.\n   *\n   * @return {Element}\n   *        The newly created icon element.\n   */\n  setIcon(iconName, el = this.el()) {\n    // TODO: In v9 of video.js, we will want to remove font icons entirely.\n    // This means this check, as well as the others throughout the code, and\n    // the unecessary CSS for font icons, will need to be removed.\n    // See https://github.com/videojs/video.js/pull/8260 as to which components\n    // need updating.\n    if (!this.player_.options_.experimentalSvgIcons) {\n      return;\n    }\n    const xmlnsURL = 'http://www.w3.org/2000/svg';\n\n    // The below creates an element in the format of:\n    // <span><svg><use>....</use></svg></span>\n    const iconContainer = createEl('span', {\n      className: 'vjs-icon-placeholder vjs-svg-icon'\n    }, {\n      'aria-hidden': 'true'\n    });\n    const svgEl = document$1.createElementNS(xmlnsURL, 'svg');\n    svgEl.setAttributeNS(null, 'viewBox', '0 0 512 512');\n    const useEl = document$1.createElementNS(xmlnsURL, 'use');\n    svgEl.appendChild(useEl);\n    useEl.setAttributeNS(null, 'href', `#vjs-icon-${iconName}`);\n    iconContainer.appendChild(svgEl);\n\n    // Replace a pre-existing icon if one exists.\n    if (this.iconIsSet_) {\n      el.replaceChild(iconContainer, el.querySelector('.vjs-icon-placeholder'));\n    } else {\n      el.appendChild(iconContainer);\n    }\n    this.iconIsSet_ = true;\n    return iconContainer;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove. Passed to DOMTokenList's toggle()\n   *\n   * @param  {boolean|Dom.PredicateCallback} [predicate]\n   *         A boolean or function that returns a boolean. Passed to DOMTokenList's toggle().\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The width when getting, zero if there is no width\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The height when getting, zero if there is no height\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Retrieves the position and size information of the component's element.\n   *\n   * @return {Object} An object with `boundingClientRect` and `center` properties.\n   *         - `boundingClientRect`: An object with properties `x`, `y`, `width`,\n   *           `height`, `top`, `right`, `bottom`, and `left`, representing\n   *           the bounding rectangle of the element.\n   *         - `center`: An object with properties `x` and `y`, representing\n   *           the center point of the element. `width` and `height` are set to 0.\n   */\n  getPositions() {\n    const rect = this.el_.getBoundingClientRect();\n\n    // Creating objects that mirror DOMRectReadOnly for boundingClientRect and center\n    const boundingClientRect = {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left\n    };\n\n    // Calculating the center position\n    const center = {\n      x: rect.left + rect.width / 2,\n      y: rect.top + rect.height / 2,\n      width: 0,\n      height: 0,\n      top: rect.top + rect.height / 2,\n      right: rect.left + rect.width / 2,\n      bottom: rect.top + rect.height / 2,\n      left: rect.left + rect.width / 2\n    };\n    return {\n      boundingClientRect,\n      center\n    };\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping, exclude also when spatialNavigation is enabled.\n      if (event.key !== 'Tab' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @protected\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      this.cancelNamedAnimationFrame(name);\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n    * Decide whether an element is actually disabled or not.\n    *\n    * @function isActuallyDisabled\n    * @param element {Node}\n    * @return {boolean}\n    *\n    * @see {@link https://html.spec.whatwg.org/multipage/semantics-other.html#concept-element-disabled}\n    */\n  getIsDisabled() {\n    return Boolean(this.el_.disabled);\n  }\n\n  /**\n    * Decide whether the element is expressly inert or not.\n    *\n    * @see {@link https://html.spec.whatwg.org/multipage/interaction.html#expressly-inert}\n    * @function isExpresslyInert\n    * @param element {Node}\n    * @return {boolean}\n    */\n  getIsExpresslyInert() {\n    return this.el_.inert && !this.el_.ownerDocument.documentElement.inert;\n  }\n\n  /**\n   * Determine whether or not this component can be considered as focusable component.\n   *\n   * @param {HTMLElement} el - The HTML element representing the component.\n   * @return {boolean}\n   *         If the component can be focused, will be `true`. Otherwise, `false`.\n   */\n  getIsFocusable(el) {\n    const element = el || this.el_;\n    return element.tabIndex >= 0 && !(this.getIsDisabled() || this.getIsExpresslyInert());\n  }\n\n  /**\n   * Determine whether or not this component is currently visible/enabled/etc...\n   *\n   * @param {HTMLElement} el - The HTML element representing the component.\n   * @return {boolean}\n   *         If the component can is currently visible & enabled, will be `true`. Otherwise, `false`.\n   */\n  getIsAvailableToBeFocused(el) {\n    /**\n     * Decide the style property of this element is specified whether it's visible or not.\n     *\n     * @function isVisibleStyleProperty\n     * @param element {CSSStyleDeclaration}\n     * @return {boolean}\n     */\n    function isVisibleStyleProperty(element) {\n      const elementStyle = window$1.getComputedStyle(element, null);\n      const thisVisibility = elementStyle.getPropertyValue('visibility');\n      const thisDisplay = elementStyle.getPropertyValue('display');\n      const invisibleStyle = ['hidden', 'collapse'];\n      return thisDisplay !== 'none' && !invisibleStyle.includes(thisVisibility);\n    }\n\n    /**\n     * Decide whether the element is being rendered or not.\n     * 1. If an element has the style as \"visibility: hidden | collapse\" or \"display: none\", it is not being rendered.\n     * 2. If an element has the style as \"opacity: 0\", it is not being rendered.(that is, invisible).\n     * 3. If width and height of an element are explicitly set to 0, it is not being rendered.\n     * 4. If a parent element is hidden, an element itself is not being rendered.\n     * (CSS visibility property and display property are inherited.)\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/rendering.html#being-rendered}\n     * @function isBeingRendered\n     * @param element {Node}\n     * @return {boolean}\n     */\n    function isBeingRendered(element) {\n      if (!isVisibleStyleProperty(element.parentElement)) {\n        return false;\n      }\n      if (!isVisibleStyleProperty(element) || element.style.opacity === '0' || window$1.getComputedStyle(element).height === '0px' || window$1.getComputedStyle(element).width === '0px') {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Determine if the element is visible for the user or not.\n     * 1. If an element sum of its offsetWidth, offsetHeight, height and width is less than 1 is not visible.\n     * 2. If elementCenter.x is less than is not visible.\n     * 3. If elementCenter.x is more than the document's width is not visible.\n     * 4. If elementCenter.y is less than 0 is not visible.\n     * 5. If elementCenter.y is the document's height is not visible.\n     *\n     * @function isVisible\n     * @param element {Node}\n     * @return {boolean}\n     */\n    function isVisible(element) {\n      if (element.offsetWidth + element.offsetHeight + element.getBoundingClientRect().height + element.getBoundingClientRect().width === 0) {\n        return false;\n      }\n\n      // Define elementCenter object with props of x and y\n      // x: Left position relative to the viewport plus element's width (no margin) divided between 2.\n      // y: Top position relative to the viewport plus element's height (no margin) divided between 2.\n      const elementCenter = {\n        x: element.getBoundingClientRect().left + element.offsetWidth / 2,\n        y: element.getBoundingClientRect().top + element.offsetHeight / 2\n      };\n      if (elementCenter.x < 0) {\n        return false;\n      }\n      if (elementCenter.x > (document$1.documentElement.clientWidth || window$1.innerWidth)) {\n        return false;\n      }\n      if (elementCenter.y < 0) {\n        return false;\n      }\n      if (elementCenter.y > (document$1.documentElement.clientHeight || window$1.innerHeight)) {\n        return false;\n      }\n      let pointContainer = document$1.elementFromPoint(elementCenter.x, elementCenter.y);\n      while (pointContainer) {\n        if (pointContainer === element) {\n          return true;\n        }\n        if (pointContainer.parentNode) {\n          pointContainer = pointContainer.parentNode;\n        } else {\n          return false;\n        }\n      }\n    }\n\n    // If no DOM element was passed as argument use this component's element.\n    if (!el) {\n      el = this.el();\n    }\n\n    // If element is visible, is being rendered & either does not have a parent element or its tabIndex is not negative.\n    if (isVisible(el) && isBeingRendered(el) && (!el.parentElement || el.tabIndex >= 0)) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {typeof Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/** @import { TimeRange } from './time' */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * An object containing an error type, as well as other information regarding the error.\n *\n * @typedef {{errorType: string, [key: string]: any}} ErrorMetadata\n */\n\n/**\n * An optional object to give more detail about the error. This can be used to give\n * a higher level of specificity to an error versus the more generic MediaError codes.\n * `metadata` expects an `errorType` string that should align with the values from videojs.Error.\n *\n * @type {ErrorMetadata}\n */\nMediaError.prototype.metadata = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError#MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for any custom error.\n *\n * @member MediaError.MEDIA_ERR_CUSTOM\n * @constant {number}\n * @default 0\n */\nMediaError.prototype.MEDIA_ERR_CUSTOM = 0;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError#MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for media error aborted.\n *\n * @member MediaError.MEDIA_ERR_ABORTED\n * @constant {number}\n * @default 1\n */\nMediaError.prototype.MEDIA_ERR_ABORTED = 1;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError#MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any network error.\n *\n * @member MediaError.MEDIA_ERR_NETWORK\n * @constant {number}\n * @default 2\n */\nMediaError.prototype.MEDIA_ERR_NETWORK = 2;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError#MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any decoding error.\n *\n * @member MediaError.MEDIA_ERR_DECODE\n * @constant {number}\n * @default 3\n */\nMediaError.prototype.MEDIA_ERR_DECODE = 3;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError#MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is not supported.\n *\n * @member MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED\n * @constant {number}\n * @default 4\n */\nMediaError.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError#MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * W3C error code for any time that a source is encrypted.\n *\n * @member MediaError.MEDIA_ERR_ENCRYPTED\n * @constant {number}\n * @default 5\n */\nMediaError.prototype.MEDIA_ERR_ENCRYPTED = 5;\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from './utils/dom' */\n\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog',\n      'aria-live': 'polite'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (this.opened_) {\n      if (this.options_.fillAlways) {\n        this.fill();\n      }\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is opened.\n      *\n      * @event ModalDialog#beforemodalopen\n      * @type {Event}\n      */\n    this.trigger('beforemodalopen');\n    this.opened_ = true;\n\n    // Fill content if the modal has never opened before and\n    // never been filled.\n    if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n      this.fill();\n    }\n\n    // If the player was playing, pause it and take note of its previously\n    // playing state.\n    this.wasPlaying_ = !player.paused();\n    if (this.options_.pauseOnOpen && this.wasPlaying_) {\n      player.pause();\n    }\n    this.on('keydown', this.handleKeyDown_);\n\n    // Hide controls and note if they were enabled.\n    this.hadControls_ = player.controls();\n    player.controls(false);\n    this.show();\n    this.conditionalFocus_();\n    this.el().setAttribute('aria-hidden', 'false');\n\n    /**\n      * Fired just after a `ModalDialog` is opened.\n      *\n      * @event ModalDialog#modalopen\n      * @type {Event}\n      */\n    this.trigger('modalopen');\n    this.hasBeenOpened_ = true;\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      *\n      * @property {boolean} [bubbles=true]\n      */\n    this.trigger({\n      type: 'modalclose',\n      bubbles: true\n    });\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n\n    /**\n     * Fired after `ModalDialog` is re-filled with content & close button is appended.\n     *\n     * @event ModalDialog#aftermodalfill\n     * @type {Event}\n     */\n    this.trigger('aftermodalfill');\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document$1.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    /**\n     * Fired a custom keyDown event that bubbles.\n     *\n     * @event ModalDialog#modalKeydown\n     * @type {Event}\n     */\n    this.trigger({\n      type: 'modalKeydown',\n      originalEvent: event,\n      target: this,\n      bubbles: true\n    });\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (event.key === 'Escape' && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (event.key !== 'Tab') {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document$1.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/** @import Track from './track' */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { Track[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @protected\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/** @import AudioTrack from './audio-track' */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/** @import VideoTrack from './video-track' */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/** @import TextTrack from './text-track' */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {string} url\n *           The url to parse\n *\n * @return   {URL}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  return new URL(url, document$1.baseURI);\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n */\nconst getAbsoluteURL = function (url) {\n  return new URL(url, document$1.baseURI).href;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {URL} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  return parseUrl(url).origin !== winLoc.origin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n\n    // Testing if the cue is a VTTCue in a way that survives minification\n    if (!('getCueAsHTML' in cue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n *\n * @protected\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/** @import Tech from '../tech/tech' */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\n\n/**\n * @protected\n */\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/** @import { TimeRange } from '../utils/time' */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document$1.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document$1.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\n\n/** @import Player from '../player' */\n/** @import Tech from '../tech/tech' */\n\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  if (middlewareInstances.hasOwnProperty(player.id())) {\n    delete middlewareInstances[player.id()];\n  }\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/** @import Player from '../player' */\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\nvar icons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <defs>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play\\\">\\n      <path d=\\\"M16 10v28l22-14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-pause\\\">\\n      <path d=\\\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-audio\\\">\\n      <path d=\\\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-captions\\\">\\n      <path d=\\\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-subtitles\\\">\\n      <path d=\\\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-enter\\\">\\n      <path d=\\\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-exit\\\">\\n      <path d=\\\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play-circle\\\">\\n      <path d=\\\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-mute\\\">\\n      <path d=\\\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-low\\\">\\n      <path d=\\\"M14 18v12h8l10 10V8L22 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-medium\\\">\\n      <path d=\\\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-high\\\">\\n      <path d=\\\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-spinner\\\">\\n      <path d=\\\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 24 24\\\" id=\\\"vjs-icon-hd\\\">\\n      <path d=\\\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-chapters\\\">\\n      <path d=\\\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 40 40\\\" id=\\\"vjs-icon-downloading\\\">\\n      <path d=\\\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download\\\">\\n      <path d=\\\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-done\\\">\\n      <path d=\\\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-off\\\">\\n      <path d=\\\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-share\\\">\\n      <path d=\\\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cog\\\">\\n      <path d=\\\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-square\\\">\\n      <path d=\\\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle\\\">\\n      <circle cx=\\\"24\\\" cy=\\\"24\\\" r=\\\"20\\\"></circle>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-outline\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-inner-circle\\\">\\n      <path d=\\\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cancel\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-replay\\\">\\n      <path d=\\\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-repeat\\\">\\n      <path d=\\\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-5\\\">\\n      <path d=\\\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-10\\\">\\n      <path d=\\\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-30\\\">\\n      <path d=\\\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-5\\\">\\n      <path d=\\\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-10\\\">\\n      <path d=\\\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-30\\\">\\n      <path d=\\\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 512 512\\\" id=\\\"vjs-icon-audio-description\\\">\\n      <g fill-rule=\\\"evenodd\\\"><path d=\\\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\\\"></path><path d=\\\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\\\"></path></g>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-next-item\\\">\\n      <path d=\\\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-previous-item\\\">\\n      <path d=\\\"M12 12h4v24h-4zm7 12l17 12V12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-shuffle\\\">\\n      <path d=\\\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cast\\\">\\n      <path d=\\\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-picture-in-picture-enter\\\">\\n      <path d=\\\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 22 18\\\" id=\\\"vjs-icon-picture-in-picture-exit\\\">\\n      <path d=\\\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\\\"></path>\\n      <path fill=\\\"none\\\" d=\\\"M-1-3h24v24H-1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-facebook\\\">\\n      <path d=\\\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-linkedin\\\">\\n      <path d=\\\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1200 1227\\\" id=\\\"vjs-icon-twitter\\\">\\n      <path d=\\\"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z\\\"/>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-tumblr\\\">\\n      <path d=\\\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-pinterest\\\">\\n      <path d=\\\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\\\"></path>\\n    </symbol>\\n  </defs>\\n</svg>\";\n\n// /**\n\n// Determine the keycode for the 'back' key based on the platform\nconst backKeyCode = IS_TIZEN ? 10009 : IS_WEBOS ? 461 : 8;\nconst SpatialNavKeyCodes = {\n  codes: {\n    play: 415,\n    pause: 19,\n    ff: 417,\n    rw: 412,\n    back: backKeyCode\n  },\n  names: {\n    415: 'play',\n    19: 'pause',\n    417: 'ff',\n    412: 'rw',\n    [backKeyCode]: 'back'\n  },\n  isEventKey(event, keyName) {\n    keyName = keyName.toLowerCase();\n    if (this.names[event.keyCode] && this.names[event.keyCode] === keyName) {\n      return true;\n    }\n    return false;\n  },\n  getEventName(event) {\n    if (this.names[event.keyCode]) {\n      return this.names[event.keyCode];\n    } else if (this.codes[event.code]) {\n      const code = this.codes[event.code];\n      return this.names[code];\n    }\n    return null;\n  }\n};\n\n/**\n * @file spatial-navigation.js\n */\n\n/** @import Component from './component' */\n/** @import Player from './player' */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS$1 = 5;\n\n/**\n * Spatial Navigation in Video.js enhances user experience and accessibility on smartTV devices,\n * enabling seamless navigation through interactive elements within the player using remote control arrow keys.\n * This functionality allows users to effortlessly navigate through focusable components.\n *\n * @extends EventTarget\n */\nclass SpatialNavigation extends EventTarget$2 {\n  /**\n   * Constructs a SpatialNavigation instance with initial settings.\n   * Sets up the player instance, and prepares the spatial navigation system.\n   *\n   * @class\n   * @param {Player} player - The Video.js player instance to which the spatial navigation is attached.\n   */\n  constructor(player) {\n    super();\n    this.player_ = player;\n    this.focusableComponents = [];\n    this.isListening_ = false;\n    this.isPaused_ = false;\n    this.onKeyDown_ = this.onKeyDown_.bind(this);\n    this.lastFocusedComponent_ = null;\n  }\n\n  /**\n   * Starts the spatial navigation by adding a keydown event listener to the video container.\n   * This method ensures that the event listener is added only once.\n   */\n  start() {\n    // If the listener is already active, exit early.\n    if (this.isListening_) {\n      return;\n    }\n\n    // Add the event listener since the listener is not yet active.\n    this.player_.on('keydown', this.onKeyDown_);\n    this.player_.on('modalKeydown', this.onKeyDown_);\n    // Listen for source change events\n    this.player_.on('loadedmetadata', () => {\n      this.focus(this.updateFocusableComponents()[0]);\n    });\n    this.player_.on('modalclose', () => {\n      this.refocusComponent();\n    });\n    this.player_.on('focusin', this.handlePlayerFocus_.bind(this));\n    this.player_.on('focusout', this.handlePlayerBlur_.bind(this));\n    this.isListening_ = true;\n    if (this.player_.errorDisplay) {\n      this.player_.errorDisplay.on('aftermodalfill', () => {\n        this.updateFocusableComponents();\n        if (this.focusableComponents.length) {\n          // The modal has focusable components:\n\n          if (this.focusableComponents.length > 1) {\n            // The modal has close button + some additional buttons.\n            // Focusing first additional button:\n\n            this.focusableComponents[1].focus();\n          } else {\n            // The modal has only close button,\n            // Focusing it:\n\n            this.focusableComponents[0].focus();\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Stops the spatial navigation by removing the keydown event listener from the video container.\n   * Also sets the `isListening_` flag to false.\n   */\n  stop() {\n    this.player_.off('keydown', this.onKeyDown_);\n    this.isListening_ = false;\n  }\n\n  /**\n   * Responds to keydown events for spatial navigation and media control.\n   *\n   * Determines if spatial navigation or media control is active and handles key inputs accordingly.\n   *\n   * @param {KeyboardEvent} event - The keydown event to be handled.\n   */\n  onKeyDown_(event) {\n    // Determine if the event is a custom modalKeydown event\n    const actualEvent = event.originalEvent ? event.originalEvent : event;\n    if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(actualEvent.key)) {\n      // Handle directional navigation\n      if (this.isPaused_) {\n        return;\n      }\n      actualEvent.preventDefault();\n\n      // \"ArrowLeft\" => \"left\" etc\n      const direction = actualEvent.key.substring(5).toLowerCase();\n      this.move(direction);\n    } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'play') || SpatialNavKeyCodes.isEventKey(actualEvent, 'pause') || SpatialNavKeyCodes.isEventKey(actualEvent, 'ff') || SpatialNavKeyCodes.isEventKey(actualEvent, 'rw')) {\n      // Handle media actions\n      actualEvent.preventDefault();\n      const action = SpatialNavKeyCodes.getEventName(actualEvent);\n      this.performMediaAction_(action);\n    } else if (SpatialNavKeyCodes.isEventKey(actualEvent, 'Back') && event.target && typeof event.target.closeable === 'function' && event.target.closeable()) {\n      actualEvent.preventDefault();\n      event.target.close();\n    }\n  }\n\n  /**\n   * Performs media control actions based on the given key input.\n   *\n   * Controls the playback and seeking functionalities of the media player.\n   *\n   * @param {string} key - The key representing the media action to be performed.\n   *   Accepted keys: 'play', 'pause', 'ff' (fast-forward), 'rw' (rewind).\n   */\n  performMediaAction_(key) {\n    if (this.player_) {\n      switch (key) {\n        case 'play':\n          if (this.player_.paused()) {\n            this.player_.play();\n          }\n          break;\n        case 'pause':\n          if (!this.player_.paused()) {\n            this.player_.pause();\n          }\n          break;\n        case 'ff':\n          this.userSeek_(this.player_.currentTime() + STEP_SECONDS$1);\n          break;\n        case 'rw':\n          this.userSeek_(this.player_.currentTime() - STEP_SECONDS$1);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Pauses the spatial navigation functionality.\n   * This method sets a flag that can be used to temporarily disable the navigation logic.\n   */\n  pause() {\n    this.isPaused_ = true;\n  }\n\n  /**\n   * Resumes the spatial navigation functionality if it has been paused.\n   * This method resets the pause flag, re-enabling the navigation logic.\n   */\n  resume() {\n    this.isPaused_ = false;\n  }\n\n  /**\n   * Handles Player Blur.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * Calls for handling of the Player Blur if:\n   * *The next focused element is not a child of current focused element &\n   * The next focused element is not a child of the Player.\n   * *There is no next focused element\n   */\n  handlePlayerBlur_(event) {\n    const nextFocusedElement = event.relatedTarget;\n    let isChildrenOfPlayer = null;\n    const currentComponent = this.getCurrentComponent(event.target);\n    if (nextFocusedElement) {\n      isChildrenOfPlayer = Boolean(nextFocusedElement.closest('.video-js'));\n\n      // If nextFocusedElement is the 'TextTrackSettings' component\n      if (nextFocusedElement.classList.contains('vjs-text-track-settings') && !this.isPaused_) {\n        this.searchForTrackSelect_();\n      }\n    }\n    if (!event.currentTarget.contains(event.relatedTarget) && !isChildrenOfPlayer || !nextFocusedElement) {\n      if (currentComponent && currentComponent.name() === 'CloseButton') {\n        this.refocusComponent();\n      } else {\n        this.pause();\n        if (currentComponent && currentComponent.el()) {\n          // Store last focused component\n          this.lastFocusedComponent_ = currentComponent;\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles the Player focus event.\n   *\n   * Calls for handling of the Player Focus if current element is focusable.\n   */\n  handlePlayerFocus_() {\n    if (this.getCurrentComponent() && this.getCurrentComponent().getIsFocusable()) {\n      this.resume();\n    }\n  }\n\n  /**\n   * Gets a set of focusable components.\n   *\n   * @return {Array}\n   *         Returns an array of focusable components.\n   */\n  updateFocusableComponents() {\n    const player = this.player_;\n    const focusableComponents = [];\n\n    /**\n     * Searches for children candidates.\n     *\n     * Pushes Components to array of 'focusableComponents'.\n     * Calls itself if there is children elements inside iterated component.\n     *\n     * @param {Array} componentsArray - The array of components to search for focusable children.\n     */\n    function searchForChildrenCandidates(componentsArray) {\n      for (const i of componentsArray) {\n        if (i.hasOwnProperty('el_') && i.getIsFocusable() && i.getIsAvailableToBeFocused(i.el())) {\n          focusableComponents.push(i);\n        }\n        if (i.hasOwnProperty('children_') && i.children_.length > 0) {\n          searchForChildrenCandidates(i.children_);\n        }\n      }\n    }\n\n    // Iterate inside all children components of the player.\n    player.children_.forEach(value => {\n      if (value.hasOwnProperty('el_')) {\n        // If component has required functions 'getIsFocusable' & 'getIsAvailableToBeFocused', is focusable & available to be focused.\n        if (value.getIsFocusable && value.getIsAvailableToBeFocused && value.getIsFocusable() && value.getIsAvailableToBeFocused(value.el())) {\n          focusableComponents.push(value);\n          return;\n          // If component has posible children components as candidates.\n        } else if (value.hasOwnProperty('children_') && value.children_.length > 0) {\n          searchForChildrenCandidates(value.children_);\n          // If component has posible item components as candidates.\n        } else if (value.hasOwnProperty('items') && value.items.length > 0) {\n          searchForChildrenCandidates(value.items);\n          // If there is a suitable child element within the component's DOM element.\n        } else if (this.findSuitableDOMChild(value)) {\n          focusableComponents.push(value);\n        }\n      }\n\n      // TODO - Refactor the following logic after refactor of videojs-errors elements to be components is done.\n      if (value.name_ === 'ErrorDisplay' && value.opened_) {\n        const buttonContainer = value.el_.querySelector('.vjs-errors-ok-button-container');\n        if (buttonContainer) {\n          const modalButtons = buttonContainer.querySelectorAll('button');\n          modalButtons.forEach((element, index) => {\n            // Add elements as objects to be handled by the spatial navigation\n            focusableComponents.push({\n              name: () => {\n                return 'ModalButton' + (index + 1);\n              },\n              el: () => element,\n              getPositions: () => {\n                const rect = element.getBoundingClientRect();\n\n                // Creating objects that mirror DOMRectReadOnly for boundingClientRect and center\n                const boundingClientRect = {\n                  x: rect.x,\n                  y: rect.y,\n                  width: rect.width,\n                  height: rect.height,\n                  top: rect.top,\n                  right: rect.right,\n                  bottom: rect.bottom,\n                  left: rect.left\n                };\n\n                // Calculating the center position\n                const center = {\n                  x: rect.left + rect.width / 2,\n                  y: rect.top + rect.height / 2,\n                  width: 0,\n                  height: 0,\n                  top: rect.top + rect.height / 2,\n                  right: rect.left + rect.width / 2,\n                  bottom: rect.top + rect.height / 2,\n                  left: rect.left + rect.width / 2\n                };\n                return {\n                  boundingClientRect,\n                  center\n                };\n              },\n              // Asume that the following are always focusable\n              getIsAvailableToBeFocused: () => true,\n              getIsFocusable: el => true,\n              focus: () => element.focus()\n            });\n          });\n        }\n      }\n    });\n    this.focusableComponents = focusableComponents;\n    return this.focusableComponents;\n  }\n\n  /**\n   * Finds a suitable child element within the provided component's DOM element.\n   *\n   * @param {Object} component - The component containing the DOM element to search within.\n   * @return {HTMLElement|null} Returns the suitable child element if found, or null if not found.\n   */\n  findSuitableDOMChild(component) {\n    /**\n     * Recursively searches for a suitable child node that can be focused within a given component.\n     * It first checks if the provided node itself can be focused according to the component's\n     * `getIsFocusable` and `getIsAvailableToBeFocused` methods. If not, it recursively searches\n     * through the node's children to find a suitable child node that meets the focusability criteria.\n     *\n     * @param {HTMLElement} node - The DOM node to start the search from.\n     * @return {HTMLElement|null} The first child node that is focusable and available to be focused,\n     * or `null` if no suitable child is found.\n     */\n    function searchForSuitableChild(node) {\n      if (component.getIsFocusable(node) && component.getIsAvailableToBeFocused(node)) {\n        return node;\n      }\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        const suitableChild = searchForSuitableChild(child);\n        if (suitableChild) {\n          return suitableChild;\n        }\n      }\n      return null;\n    }\n    if (component.el()) {\n      return searchForSuitableChild(component.el());\n    }\n    return null;\n  }\n\n  /**\n   * Gets the currently focused component from the list of focusable components.\n   * If a target element is provided, it uses that element to find the corresponding\n   * component. If no target is provided, it defaults to using the document's currently\n   * active element.\n   *\n   * @param {HTMLElement} [target] - The DOM element to check against the focusable components.\n   *                                 If not provided, `document.activeElement` is used.\n   * @return {Component|null} - Returns the focused component if found among the focusable components,\n   *                            otherwise returns null if no matching component is found.\n   */\n  getCurrentComponent(target) {\n    this.updateFocusableComponents();\n    // eslint-disable-next-line\n    const curComp = target || document.activeElement;\n    if (this.focusableComponents.length) {\n      for (const i of this.focusableComponents) {\n        // If component Node is equal to the current active element.\n        if (i.el() === curComp) {\n          return i;\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds a component to the array of focusable components.\n   *\n   * @param {Component} component\n   *        The `Component` to be added.\n   */\n  add(component) {\n    const focusableComponents = [...this.focusableComponents];\n    if (component.hasOwnProperty('el_') && component.getIsFocusable() && component.getIsAvailableToBeFocused(component.el())) {\n      focusableComponents.push(component);\n    }\n    this.focusableComponents = focusableComponents;\n    // Trigger the notification manually\n    this.trigger({\n      type: 'focusableComponentsChanged',\n      focusableComponents: this.focusableComponents\n    });\n  }\n\n  /**\n   * Removes component from the array of focusable components.\n   *\n   * @param {Component} component - The component to be removed from the focusable components array.\n   */\n  remove(component) {\n    for (let i = 0; i < this.focusableComponents.length; i++) {\n      if (this.focusableComponents[i].name() === component.name()) {\n        this.focusableComponents.splice(i, 1);\n        // Trigger the notification manually\n        this.trigger({\n          type: 'focusableComponentsChanged',\n          focusableComponents: this.focusableComponents\n        });\n        return;\n      }\n    }\n  }\n\n  /**\n   * Clears array of focusable components.\n   */\n  clear() {\n    // Check if the array is already empty to avoid unnecessary event triggering\n    if (this.focusableComponents.length > 0) {\n      // Clear the array\n      this.focusableComponents = [];\n\n      // Trigger the notification manually\n      this.trigger({\n        type: 'focusableComponentsChanged',\n        focusableComponents: this.focusableComponents\n      });\n    }\n  }\n\n  /**\n   * Navigates to the next focusable component based on the specified direction.\n   *\n   * @param {string} direction 'up', 'down', 'left', 'right'\n   */\n  move(direction) {\n    const currentFocusedComponent = this.getCurrentComponent();\n    if (!currentFocusedComponent) {\n      return;\n    }\n    const currentPositions = currentFocusedComponent.getPositions();\n    const candidates = this.focusableComponents.filter(component => component !== currentFocusedComponent && this.isInDirection_(currentPositions.boundingClientRect, component.getPositions().boundingClientRect, direction));\n    const bestCandidate = this.findBestCandidate_(currentPositions.center, candidates, direction);\n    if (bestCandidate) {\n      this.focus(bestCandidate);\n    } else {\n      this.trigger({\n        type: 'endOfFocusableComponents',\n        direction,\n        focusedComponent: currentFocusedComponent\n      });\n    }\n  }\n\n  /**\n   * Finds the best candidate on the current center position,\n   * the list of candidates, and the specified navigation direction.\n   *\n   * @param {Object} currentCenter The center position of the current focused component element.\n   * @param {Array} candidates An array of candidate components to receive focus.\n   * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n   * @return {Object|null} The component that is the best candidate for receiving focus.\n   */\n  findBestCandidate_(currentCenter, candidates, direction) {\n    let minDistance = Infinity;\n    let bestCandidate = null;\n    for (const candidate of candidates) {\n      const candidateCenter = candidate.getPositions().center;\n      const distance = this.calculateDistance_(currentCenter, candidateCenter, direction);\n      if (distance < minDistance) {\n        minDistance = distance;\n        bestCandidate = candidate;\n      }\n    }\n    return bestCandidate;\n  }\n\n  /**\n   * Determines if a target rectangle is in the specified navigation direction\n   * relative to a source rectangle.\n   *\n   * @param {Object} srcRect The bounding rectangle of the source element.\n   * @param {Object} targetRect The bounding rectangle of the target element.\n   * @param {string} direction The navigation direction ('up', 'down', 'left', 'right').\n   * @return {boolean} True if the target is in the specified direction relative to the source.\n   */\n  isInDirection_(srcRect, targetRect, direction) {\n    switch (direction) {\n      case 'right':\n        return targetRect.left >= srcRect.right;\n      case 'left':\n        return targetRect.right <= srcRect.left;\n      case 'down':\n        return targetRect.top >= srcRect.bottom;\n      case 'up':\n        return targetRect.bottom <= srcRect.top;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Focus the last focused component saved before blur on player.\n   */\n  refocusComponent() {\n    if (this.lastFocusedComponent_) {\n      // If user is not active, set it to active.\n      if (!this.player_.userActive()) {\n        this.player_.userActive(true);\n      }\n      this.updateFocusableComponents();\n\n      // Search inside array of 'focusableComponents' for a match of name of\n      // the last focused component.\n      for (let i = 0; i < this.focusableComponents.length; i++) {\n        if (this.focusableComponents[i].name() === this.lastFocusedComponent_.name()) {\n          this.focus(this.focusableComponents[i]);\n          return;\n        }\n      }\n    } else {\n      this.focus(this.updateFocusableComponents()[0]);\n    }\n  }\n\n  /**\n   * Focuses on a given component.\n   * If the component is available to be focused, it focuses on the component.\n   * If not, it attempts to find a suitable DOM child within the component and focuses on it.\n   *\n   * @param {Component} component - The component to be focused.\n   */\n  focus(component) {\n    if (typeof component !== 'object') {\n      return;\n    }\n    if (component.getIsAvailableToBeFocused(component.el())) {\n      component.focus();\n    } else if (this.findSuitableDOMChild(component)) {\n      this.findSuitableDOMChild(component).focus();\n    }\n  }\n\n  /**\n   * Calculates the distance between two points, adjusting the calculation based on\n   * the specified navigation direction.\n   *\n   * @param {Object} center1 The center point of the first element.\n   * @param {Object} center2 The center point of the second element.\n   * @param {string} direction The direction of navigation ('up', 'down', 'left', 'right').\n   * @return {number} The calculated distance between the two centers.\n   */\n  calculateDistance_(center1, center2, direction) {\n    const dx = Math.abs(center1.x - center2.x);\n    const dy = Math.abs(center1.y - center2.y);\n    let distance;\n    switch (direction) {\n      case 'right':\n      case 'left':\n        // Higher weight for vertical distance in horizontal navigation.\n        distance = dx + dy * 100;\n        break;\n      case 'up':\n        // Strongly prioritize vertical proximity for UP navigation.\n        // Adjust the weight to ensure that elements directly above are favored.\n        distance = dy * 2 + dx * 0.5;\n        break;\n      case 'down':\n        // More balanced weight for vertical and horizontal distances.\n        // Adjust the weights here to find the best balance.\n        distance = dy * 5 + dx;\n        break;\n      default:\n        distance = dx + dy;\n    }\n    return distance;\n  }\n\n  /**\n   * This gets called by 'handlePlayerBlur_' if 'spatialNavigation' is enabled.\n   * Searches for the first 'TextTrackSelect' inside of modal to focus.\n   *\n   * @private\n   */\n  searchForTrackSelect_() {\n    const spatialNavigation = this;\n    for (const component of spatialNavigation.updateFocusableComponents()) {\n      if (component.constructor.name === 'TextTrackSelect') {\n        spatialNavigation.focus(component);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file loader.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\n/** @import Player from '../player' */\n\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * Converts the CSS top/right/bottom/left property numeric value to string in pixels.\n *\n * @param {number} position\n *        The CSS top/right/bottom/left property value.\n *\n * @return {string}\n *          The CSS property value that was created, like '10px'.\n *\n * @private\n */\nfunction getCSSPositionValue(position) {\n  return position ? `${position}px` : '';\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayTextHandler = e => this.updateDisplay(e);\n    const updateDisplayHandler = e => {\n      this.updateDisplayOverlay();\n      this.updateDisplay(e);\n    };\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayTextHandler);\n    player.on('loadedmetadata', e => {\n      this.updateDisplayOverlay();\n      this.preselectTrack(e);\n    });\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n    if (!window$1.CSS.supports('inset', '10px')) {\n      const textTrackDisplay = this.el_;\n      const vjsTextTrackCues = textTrackDisplay.querySelectorAll('.vjs-text-track-cue');\n      const controlBarHeight = this.player_.controlBar.el_.getBoundingClientRect().height;\n      const playerHeight = this.player_.el_.getBoundingClientRect().height;\n\n      // Clear inline style before getting actual height of textTrackDisplay\n      textTrackDisplay.style = '';\n\n      // textrack style updates, this styles are required to be inline\n      tryUpdateStyle(textTrackDisplay, 'position', 'relative');\n      tryUpdateStyle(textTrackDisplay, 'height', playerHeight - controlBarHeight + 'px');\n      tryUpdateStyle(textTrackDisplay, 'top', 'unset');\n      if (IS_SMART_TV) {\n        tryUpdateStyle(textTrackDisplay, 'bottom', playerHeight + 'px');\n      } else {\n        tryUpdateStyle(textTrackDisplay, 'bottom', '0px');\n      }\n\n      // vjsTextTrackCue style updates\n      if (vjsTextTrackCues.length > 0) {\n        vjsTextTrackCues.forEach(vjsTextTrackCue => {\n          // verify if inset styles are inline\n          if (vjsTextTrackCue.style.inset) {\n            const insetStyles = vjsTextTrackCue.style.inset.split(' ');\n\n            // expected value is always 3\n            if (insetStyles.length === 3) {\n              Object.assign(vjsTextTrackCue.style, {\n                top: insetStyles[0],\n                right: insetStyles[1],\n                bottom: insetStyles[2],\n                left: 'unset'\n              });\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Updates the displayed TextTrack to be sure it overlays the video when a either\n   * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.\n   */\n  updateDisplayOverlay() {\n    // inset-inline and inset-block are not supprted on old chrome, but these are\n    // only likely to be used on TV devices\n    if (!this.player_.videoHeight() || !window$1.CSS.supports('inset-inline: 10px')) {\n      return;\n    }\n    const playerWidth = this.player_.currentWidth();\n    const playerHeight = this.player_.currentHeight();\n    const playerAspectRatio = playerWidth / playerHeight;\n    const videoAspectRatio = this.player_.videoWidth() / this.player_.videoHeight();\n    let insetInlineMatch = 0;\n    let insetBlockMatch = 0;\n    if (Math.abs(playerAspectRatio - videoAspectRatio) > 0.1) {\n      if (playerAspectRatio > videoAspectRatio) {\n        insetInlineMatch = Math.round((playerWidth - playerHeight * videoAspectRatio) / 2);\n      } else {\n        insetBlockMatch = Math.round((playerHeight - playerWidth / videoAspectRatio) / 2);\n      }\n    }\n    tryUpdateStyle(this.el_, 'insetInline', getCSSPositionValue(insetInlineMatch));\n    tryUpdateStyle(this.el_, 'insetBlock', getCSSPositionValue(insetBlockMatch));\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.setIcon('play');\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent|MouseEvent|TouchEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && 'clientX' in event && 'clientY' in event) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `BigPlayButton` receives a\n   * `keydown` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n\n  /**\n   * Handle `mousedown` events on the `BigPlayButton`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/** @import Player from './player' */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('cancel');\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.setIcon('play');\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.setIcon('pause');\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.setIcon('play');\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.setIcon('replay');\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended', 'seeking'], e => this.update(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the displayed time according to the `updateContent` function which is defined in the child class.\n   *\n   * @param {Event} [event]\n   *          The `timeupdate`, `ended` or `seeking` (if enableSmoothSeeking is true) event that caused this function to be called.\n   */\n  update(event) {\n    if (!this.player_.options_.enableSmoothSeeking && event.type === 'seeking') {\n      return;\n    }\n    this.updateContent(event);\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document$1.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n/** @import Player from './player' */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document$1.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.setIcon('circle', el);\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const spatialNavOptions = this.options_.playerOptions.spatialNavigation;\n    const spatialNavEnabled = spatialNavOptions && spatialNavOptions.enabled;\n    const horizontalSeek = spatialNavOptions && spatialNavOptions.horizontalSeek;\n    if (spatialNavEnabled) {\n      if (horizontalSeek && event.key === 'ArrowLeft' || !horizontalSeek && event.key === 'ArrowDown') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      } else if (horizontalSeek && event.key === 'ArrowRight' || !horizontalSeek && event.key === 'ArrowUp') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        super.handleKeyDown(event);\n      }\n\n      // Left and Down Arrows\n    } else if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowRight') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/** @import Player from '../../player' */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document$1.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    let spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    let spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // spaceRightOfPoint is always NaN for mouse time display\n    // because the seekbarRect does not have a right property. This causes\n    // the mouse tool tip to be truncated when it's close to the right edge of the player.\n    // In such cases, we ignore the `playerRect.right - seekBarRect.right` value when calculating.\n    // For the sake of consistency, we ignore seekBarRect.left - playerRect.left for the left edge.\n    if (!spaceRightOfPoint) {\n      spaceRightOfPoint = seekBarRect.width - seekBarPointPx;\n      spaceLeftOfPoint = seekBarPointPx;\n    }\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('circle');\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options = merge$1(SeekBar.prototype.options_, options);\n\n    // Avoid mutating the prototype's `children` array by creating a copy\n    options.children = [...options.children];\n    const shouldDisableSeekWhileScrubbingOnMobile = player.options_.disableSeekWhileScrubbingOnMobile && (IS_IOS || IS_ANDROID);\n\n    // Add the TimeTooltip as a child if we are on desktop, or on mobile with `disableSeekWhileScrubbingOnMobile: true`\n    if (!IS_IOS && !IS_ANDROID || shouldDisableSeekWhileScrubbingOnMobile) {\n      options.children.splice(1, 0, 'mouseTimeDisplay');\n    }\n    super(player, options);\n    this.shouldDisableSeekWhileScrubbingOnMobile_ = shouldDisableSeekWhileScrubbingOnMobile;\n    this.pendingSeekTime_ = null;\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['durationchange', 'timeupdate'], this.update);\n    this.on(this.player_, ['ended'], this.update_);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document$1 && 'visibilityState' in document$1) {\n      this.on(document$1, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document$1.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document$1.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    // If we have a pending seek time, we are scrubbing on mobile and should set the slider percent\n    // to reflect the current scrub location.\n    if (this.pendingSeekTime_) {\n      return this.pendingSeekTime_ / this.player_.duration();\n    }\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n\n    // Don't pause if we are on mobile and `disableSeekWhileScrubbingOnMobile: true`.\n    // In that case, playback should continue while the player scrubs to a new location.\n    if (!this.shouldDisableSeekWhileScrubbingOnMobile_) {\n      this.player_.pause();\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event) || isNaN(this.player_.duration())) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // if on mobile and `disableSeekWhileScrubbingOnMobile: true`, keep track of the desired seek point but we won't initiate the seek until 'touchend'\n    if (this.shouldDisableSeekWhileScrubbingOnMobile_) {\n      this.pendingSeekTime_ = newTime;\n    } else {\n      this.userSeek_(newTime);\n    }\n    if (this.player_.options_.enableSmoothSeeking) {\n      this.update();\n    }\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    // If we have a pending seek time, then we have finished scrubbing on mobile and should initiate a seek.\n    if (this.pendingSeekTime_) {\n      this.userSeek_(this.pendingSeekTime_);\n      this.pendingSeekTime_ = null;\n    }\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (event.key === 'Home') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (event.key === 'End') {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(event.key)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = parseInt(event.key, 10) * 0.1;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (event.key === 'PageDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (event.key === 'PageUp') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['durationchange', 'timeupdate'], this.update);\n    this.off(this.player_, ['ended'], this.update_);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document$1 && 'visibilityState' in document$1) {\n      this.off(document$1, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, ['mousemove', 'touchmove'], this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, ['mousemove', 'touchmove'], this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('picture-in-picture-enter');\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => this.handlePictureInPictureAudioModeChange());\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Displays or hides the button depending on the audio mode detection.\n   * Exits picture-in-picture if it is enabled when switching to audio mode.\n   */\n  handlePictureInPictureAudioModeChange() {\n    // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n    const isSourceAudio = this.player_.currentType().substring(0, 5) === 'audio';\n    const isAudioMode = isSourceAudio || this.player_.audioPosterMode() || this.player_.audioOnlyMode();\n    if (!isAudioMode) {\n      this.show();\n      return;\n    }\n    if (this.player_.isInPictureInPicture()) {\n      this.player_.exitPictureInPicture();\n    }\n    this.hide();\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document$1.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.setIcon('picture-in-picture-exit');\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.setIcon('picture-in-picture-enter');\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.\n   */\n  show() {\n    // Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.\n    if (typeof document$1.exitPictureInPicture !== 'function') {\n      return;\n    }\n    super.show();\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('fullscreen-enter');\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document$1[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n      this.setIcon('fullscreen-exit');\n    } else {\n      this.controlText('Fullscreen');\n      this.setIcon('fullscreen-enter');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/** @import Component from '../../component' */\n/** @import Player from '../../player' */\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    this.setIcon('circle', el);\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/** @import Component from '../../component' */\n/** @import Player from '../../player' */\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n    this.setIcon('volume-high');\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      this.setIcon('volume-mute');\n      level = 0;\n    } else if (vol < 0.33) {\n      this.setIcon('volume-low');\n      level = 1;\n    } else if (vol < 0.67) {\n      this.setIcon('volume-medium');\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (event.key === 'Escape') {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document$1, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document$1, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (event.key === 'Escape') {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`forward-${this.skipTime}`);\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    if (isNaN(this.player_.duration())) {\n      return;\n    }\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nSkipForward.prototype.controlText_ = 'Skip Forward';\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`replay-${this.skipTime}`);\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime.toLocaleString(player.language())]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document$1.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {KeyboardEvent} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (event.key === 'ArrowLeft' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.key === 'ArrowRight' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document$1, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Overwrites the `setIcon` method from `Component`.\n   * In this case, we want the icon to be appended to the menuButton.\n   *\n   * @param {string} name\n   *         The icon name to be added.\n   */\n  setIcon(name) {\n    super.setIcon(name, this.menuButton_.el_);\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document$1, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!event.key === 'Tab') {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (event.key === 'Up' || event.key === 'Down' && !(this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled)) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!event.key === 'Tab') {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/** @import Player from './player' */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/** @import Player from '../player' */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    const menuItemEl = createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    });\n\n    // If using SVG icons, the element with vjs-icon-placeholder will be added separately.\n    if (this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(menuItemEl);\n    } else {\n      el.replaceChild(menuItemEl, el.querySelector('.vjs-icon-placeholder'));\n    }\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!['Tab', 'Escape', 'ArrowUp', 'ArrowLeft', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document$1.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * A special menu item for turning off a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/** @import Player from '../../player' */\n/** @import Menu from '../../menu/menu' */\n/** @import TextTrack from '../../tracks/text-track' */\n/** @import TextTrackMenuItem from '../text-track-controls/text-track-menu-item' */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('chapters');\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('audio-description');\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('subtitles');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('captions');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      if (this.player_.options_.experimentalSvgIcons) {\n        this.setIcon('captions', el);\n      } else {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    this.setIcon('subtitles');\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n      this.setIcon('captions');\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (['main-desc', 'descriptions'].indexOf(this.options_.track.kind) >= 0) {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n    this.setIcon('audio');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/** @import Player from '../../player' */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/** @import Player from './player' */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => {\n      this.open(e);\n    });\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * Creates DOM element of 'select' & its options.\n *\n * @extends Component\n */\nclass TextTrackSelect extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.legendId]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *\n   * @param {string} [options.id]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *\n   * @param {Array} [options.SelectOptions]\n   *        Array that contains the value & textContent of for each of the\n   *        options elements.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.el_.setAttribute('aria-labelledby', this.selectLabelledbyIds);\n  }\n\n  /**\n   * Create the `TextTrackSelect`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    this.selectLabelledbyIds = [this.options_.legendId, this.options_.labelId].join(' ').trim();\n\n    // Create select & inner options\n    const selectoptions = createEl('select', {\n      id: this.options_.id\n    }, {}, this.options_.SelectOptions.map(optionText => {\n      // Constructs an id for the <option>.\n      // For the colour settings that have two <selects> with a <label> each, generates an id based off the label value\n      // For font size/family and edge style with one <select> and no <label>, generates an id with a guid\n      const optionId = (this.options_.labelId ? this.options_.labelId : `vjs-track-option-${newGUID()}`) + '-' + optionText[1].replace(/\\W+/g, '');\n      const option = createEl('option', {\n        id: optionId,\n        value: this.localize(optionText[0]),\n        textContent: this.localize(optionText[1])\n      });\n      option.setAttribute('aria-labelledby', `${this.selectLabelledbyIds} ${optionId}`);\n      return option;\n    }));\n    return selectoptions;\n  }\n}\nComponent$1.registerComponent('TextTrackSelect', TextTrackSelect);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from '../utils/dom' */\n\n/**\n * Creates fieldset section of 'TextTrackSettings'.\n * Manganes two versions of fieldsets, one for type of 'colors'\n * & the other for 'font', Component adds diferent DOM elements\n * to that fieldset  depending on the type.\n *\n * @extends Component\n */\nclass TextTrackFieldset extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.legendId]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *        It passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.id]\n   *        A text with part of an string to create atribute of aria-labelledby.\n   *        It passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.legendText]\n   *        A text to use as the text content of the legend element.\n   *\n   * @param {Array} [options.selects]\n   *        Array that contains the selects that are use to create 'selects'\n   *        components.\n   *\n   * @param {Array} [options.SelectOptions]\n   *        Array that contains the value & textContent of for each of the\n   *        options elements, it passes to 'TextTrackSelect'.\n   *\n   * @param {string} [options.type]\n   *        Conditions if some DOM elements will be added to the fieldset\n   *        component.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the selects configurations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        These properties are use to configure the 'TextTrackSelect' Component.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Add Components & DOM Elements\n    const legendElement = createEl('legend', {\n      textContent: this.localize(this.options_.legendText),\n      id: this.options_.legendId\n    });\n    this.el().appendChild(legendElement);\n    const selects = this.options_.selects;\n\n    // Iterate array of selects to create 'selects' components\n    for (const i of selects) {\n      const selectConfig = this.options_.selectConfigs[i];\n      const selectClassName = selectConfig.className;\n      const id = selectConfig.id.replace('%s', this.options_.id_);\n      let span = null;\n      const guid = `vjs_select_${newGUID()}`;\n\n      // Conditionally create span to add on the component\n      if (this.options_.type === 'colors') {\n        span = createEl('span', {\n          className: selectClassName\n        });\n        const label = createEl('label', {\n          id,\n          className: 'vjs-label',\n          textContent: this.localize(selectConfig.label)\n        });\n        label.setAttribute('for', guid);\n        span.appendChild(label);\n      }\n      const textTrackSelect = new TextTrackSelect(player, {\n        SelectOptions: selectConfig.options,\n        legendId: this.options_.legendId,\n        id: guid,\n        labelId: id\n      });\n      this.addChild(textTrackSelect);\n\n      // Conditionally append to 'select' component to conditionally created span\n      if (this.options_.type === 'colors') {\n        span.appendChild(textTrackSelect.el());\n        this.el().appendChild(span);\n      }\n    }\n  }\n\n  /**\n   * Create the `TextTrackFieldset`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('fieldset', {\n      // Prefixing classes of elements within a player with \"vjs-\"\n      // is a convention used in Video.js.\n      className: this.options_.className\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackFieldset', TextTrackFieldset);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * The component 'TextTrackSettingsColors' displays a set of 'fieldsets'\n * using the component 'TextTrackFieldset'.\n *\n * @extends Component\n */\nclass TextTrackSettingsColors extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {Array} [options.fieldSets]\n   *        Array that contains the configurations for the selects.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the select confugations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        it passes to 'TextTrackFieldset'.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    const id_ = this.options_.textTrackComponentid;\n\n    // createElFgColor_\n    const ElFgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-text-legend-${id_}`,\n      legendText: this.localize('Text'),\n      className: 'vjs-fg vjs-track-setting',\n      selects: this.options_.fieldSets[0],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElFgColorFieldset);\n\n    // createElBgColor_\n    const ElBgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-background-${id_}`,\n      legendText: this.localize('Text Background'),\n      className: 'vjs-bg vjs-track-setting',\n      selects: this.options_.fieldSets[1],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElBgColorFieldset);\n\n    // createElWinColor_\n    const ElWinColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-window-${id_}`,\n      legendText: this.localize('Caption Area Background'),\n      className: 'vjs-window vjs-track-setting',\n      selects: this.options_.fieldSets[2],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'colors'\n    });\n    this.addChild(ElWinColorFieldset);\n  }\n\n  /**\n   * Create the `TextTrackSettingsColors`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-colors'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackSettingsColors', TextTrackSettingsColors);\n\n/** @import Player from './player' */\n/** @import { ContentDescriptor } from  '../utils/dom' */\n\n/**\n * The component 'TextTrackSettingsFont' displays a set of 'fieldsets'\n * using the component 'TextTrackFieldset'.\n *\n * @extends Component\n */\nclass TextTrackSettingsFont extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {Array} [options.fieldSets]\n   *        Array that contains the configurations for the selects.\n   *\n   * @param {Object} [options.selectConfigs]\n   *        Object with the following properties that are the select confugations:\n   *        backgroundColor, backgroundOpacity, color, edgeStyle, fontFamily,\n   *        fontPercent, textOpacity, windowColor, windowOpacity.\n   *        it passes to 'TextTrackFieldset'.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    const id_ = this.options_.textTrackComponentid;\n    const ElFgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-font-size-${id_}`,\n      legendText: 'Font Size',\n      className: 'vjs-font-percent vjs-track-setting',\n      selects: this.options_.fieldSets[0],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElFgColorFieldset);\n    const ElBgColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-edge-style-${id_}`,\n      legendText: this.localize('Text Edge Style'),\n      className: 'vjs-edge-style vjs-track-setting',\n      selects: this.options_.fieldSets[1],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElBgColorFieldset);\n    const ElWinColorFieldset = new TextTrackFieldset(player, {\n      id_,\n      legendId: `captions-font-family-${id_}`,\n      legendText: this.localize('Font Family'),\n      className: 'vjs-font-family vjs-track-setting',\n      selects: this.options_.fieldSets[2],\n      selectConfigs: this.options_.selectConfigs,\n      type: 'font'\n    });\n    this.addChild(ElWinColorFieldset);\n  }\n\n  /**\n   * Create the `TextTrackSettingsFont`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-font'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TextTrackSettingsFont', TextTrackSettingsFont);\n\n/**\n * Buttons of reset & done that modal 'TextTrackSettings'\n * uses as part of its content.\n *\n * 'Reset': Resets all settings on 'TextTrackSettings'.\n * 'Done': Closes 'TextTrackSettings' modal.\n *\n * @extends Component\n */\nclass TrackSettingsControls extends Component$1 {\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Create DOM elements\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    const resetButton = new Button(player, {\n      controlText: defaultsDescription,\n      className: 'vjs-default-button'\n    });\n    resetButton.el().classList.remove('vjs-control', 'vjs-button');\n    resetButton.el().textContent = this.localize('Reset');\n    this.addChild(resetButton);\n    const doneButton = new Button(player, {\n      controlText: defaultsDescription,\n      className: 'vjs-done-button'\n    });\n\n    // Remove unrequired style classes\n    doneButton.el().classList.remove('vjs-control', 'vjs-button');\n    doneButton.el().textContent = this.localize('Done');\n    this.addChild(doneButton);\n  }\n\n  /**\n   * Create the `TrackSettingsControls`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    const el = createEl('div', {\n      className: 'vjs-track-settings-controls'\n    });\n    return el;\n  }\n}\nComponent$1.registerComponent('TrackSettingsControls', TrackSettingsControls);\n\n/**\n * @file text-track-settings.js\n */\n\n/** @import Player from '../player' */\n\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n    className: 'vjs-bg-color'\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS],\n    className: 'vjs-bg-opacity vjs-opacity'\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN],\n    className: 'vjs-text-color'\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Drop shadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: '',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: '',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI],\n    className: 'vjs-text-opacity vjs-opacity'\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color',\n    className: 'vjs-window-color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE],\n    className: 'vjs-window-opacity vjs-opacity'\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.renderModalComponents(player);\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.bindFunctionsToSelectsAndButtons();\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  renderModalComponents(player) {\n    const textTrackSettingsColors = new TextTrackSettingsColors(player, {\n      textTrackComponentid: this.id_,\n      selectConfigs,\n      fieldSets: [['color', 'textOpacity'], ['backgroundColor', 'backgroundOpacity'], ['windowColor', 'windowOpacity']]\n    });\n    this.addChild(textTrackSettingsColors);\n    const textTrackSettingsFont = new TextTrackSettingsFont(player, {\n      textTrackComponentid: this.id_,\n      selectConfigs,\n      fieldSets: [['fontPercent'], ['edgeStyle'], ['fontFamily']]\n    });\n    this.addChild(textTrackSettingsFont);\n    const trackSettingsControls = new TrackSettingsControls(player);\n    this.addChild(trackSettingsControls);\n  }\n  bindFunctionsToSelectsAndButtons() {\n    this.on(this.$('.vjs-done-button'), ['click', 'tap'], () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), ['click', 'tap'], () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n    this.renderModalComponents(this.player_);\n    this.bindFunctionsToSelectsAndButtons();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce$1(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\n/** @import Player from './player' */\n\nconst defaults$1 = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults$1, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/** @import Player from './player' */\n\n/**\n * @typedef {object} TransientButtonOptions\n * @property {string} [controlText] Control text, usually visible for these buttons\n * @property {number} [initialDisplay=4000] Time in ms that button should initially remain visible\n * @property {Array<'top'|'neartop'|'bottom'|'left'|'right'>} [position] Array of position strings to add basic styles for positioning\n * @property {string} [className] Class(es) to add\n * @property {boolean} [takeFocus=false] Whether element sohuld take focus when shown\n * @property {Function} [clickHandler] Function called on button activation\n */\n\n/** @type {TransientButtonOptions} */\nconst defaults = {\n  initialDisplay: 4000,\n  position: [],\n  takeFocus: false\n};\n\n/**\n * A floating transient button.\n * It's recommended to insert these buttons _before_ the control bar with the this argument to `addChild`\n * for a logical tab order.\n *\n * @example\n * ```\n * player.addChild(\n *   'TransientButton',\n *   options,\n *   player.children().indexOf(player.getChild(\"ControlBar\"))\n * )\n * ```\n *\n * @extends Button\n */\nclass TransientButton extends Button {\n  /**\n   * TransientButton constructor\n   *\n   * @param {Player} player The button's player\n   * @param {TransientButtonOptions} options Options for the transient button\n   */\n  constructor(player, options) {\n    options = merge$1(defaults, options);\n    super(player, options);\n    this.controlText(options.controlText);\n    this.hide();\n\n    // When shown, the float button will be visible even if the user is inactive.\n    // Clear this if there is any interaction.\n    this.on(this.player_, ['useractive', 'userinactive'], e => {\n      this.removeClass('force-display');\n    });\n  }\n\n  /**\n   * Return CSS class including position classes\n   *\n   * @return {string} CSS class list\n   */\n  buildCSSClass() {\n    return `vjs-transient-button focus-visible ${this.options_.position.map(c => `vjs-${c}`).join(' ')}`;\n  }\n\n  /**\n   * Create the button element\n   *\n   * @return {HTMLButtonElement} The button element\n   */\n  createEl() {\n    /** @type HTMLButtonElement */\n    const el = createEl('button', {}, {\n      type: 'button',\n      class: this.buildCSSClass()\n    }, createEl('span'));\n    this.controlTextEl_ = el.querySelector('span');\n    return el;\n  }\n\n  /**\n   * Show the button. The button will remain visible for the `initialDisplay` time, default 4s,\n   * and when there is user activity.\n   */\n  show() {\n    super.show();\n    this.addClass('force-display');\n    if (this.options_.takeFocus) {\n      this.el().focus({\n        preventScroll: true\n      });\n    }\n    this.forceDisplayTimeout = this.player_.setTimeout(() => {\n      this.removeClass('force-display');\n    }, this.options_.initialDisplay);\n  }\n\n  /**\n   * Hide the display, even if during the `initialDisplay` time.\n   */\n  hide() {\n    this.removeClass('force-display');\n    super.hide();\n  }\n\n  /**\n   * Dispose the component\n   */\n  dispose() {\n    this.player_.clearTimeout(this.forceDisplayTimeout);\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TransientButton', TransientButton);\n\n/** @import Html5 from './html5' */\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document$1.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document$1.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document$1.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Add a <source> element to the <video> element.\n   *\n   * @param {string} srcUrl\n   *        The URL of the video source.\n   *\n   * @param {string} [mimeType]\n   *        The MIME type of the video source. Optional but recommended.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully added, false otherwise.\n   */\n  addSourceElement(srcUrl, mimeType) {\n    if (!srcUrl) {\n      log$1.error('Invalid source URL.');\n      return false;\n    }\n    const sourceAttributes = {\n      src: srcUrl\n    };\n    if (mimeType) {\n      sourceAttributes.type = mimeType;\n    }\n    const sourceElement = createEl('source', {}, sourceAttributes);\n    this.el_.appendChild(sourceElement);\n    return true;\n  }\n\n  /**\n   * Remove a <source> element from the <video> element by its URL.\n   *\n   * @param {string} srcUrl\n   *        The URL of the source to remove.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully removed, false otherwise.\n   */\n  removeSourceElement(srcUrl) {\n    if (!srcUrl) {\n      log$1.error('Source URL is required to remove the source element.');\n      return false;\n    }\n    const sourceElements = this.el_.querySelectorAll('source');\n    for (const sourceElement of sourceElements) {\n      if (sourceElement.src === srcUrl) {\n        this.el_.removeChild(sourceElement);\n        return true;\n      }\n    }\n    log$1.warn(`No matching source element found with src: ${srcUrl}`);\n    return false;\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document$1.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document$1.createElement('video');\n  const track = document$1.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document$1.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document$1.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n/** @import { TimeRange } from './utils/time' */\n/** @import HtmlTrackElement from './tracks/html-track-element' */\n\n/**\n * @callback PlayerReadyCallback\n * @this     {Player}\n * @returns  {void}\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recommended)\n * 2. By using it directly via `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {PlayerReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    // also here.. probably better\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n    this.boundUpdatePlayerHeightOnAudioOnlyMode_ = e => this.updatePlayerHeightOnAudioOnlyMode_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      controlBarHeight: null,\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    /** @type string */\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    /** @type {boolean} */\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document$1, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    if (options.experimentalSvgIcons) {\n      // Add SVG Sprite to the DOM\n      const parser = new window$1.DOMParser();\n      const parsedSVG = parser.parseFromString(icons, 'image/svg+xml');\n      const errorNode = parsedSVG.querySelector('parsererror');\n      if (errorNode) {\n        log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');\n        this.options_.experimentalSvgIcons = null;\n      } else {\n        const sprite = parsedSVG.documentElement;\n        sprite.style.display = 'none';\n        this.el_.appendChild(sprite);\n        this.addClass('vjs-svg-icons-enabled');\n      }\n    }\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // Check if spatial navigation is enabled in the options.\n    // If enabled, instantiate the SpatialNavigation class.\n    if (options.spatialNavigation && options.spatialNavigation.enabled) {\n      this.spatialNavigation = new SpatialNavigation(this);\n      this.addClass('vjs-spatial-navigation-enabled');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document$1, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document$1.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n    const deviceClassNames = ['IS_SMART_TV', 'IS_TIZEN', 'IS_WEBOS', 'IS_ANDROID', 'IS_IPAD', 'IS_IPHONE', 'IS_CHROMECAST_RECEIVER'].filter(key => browser[key]).map(key => {\n      return 'vjs-device-' + key.substring(3).toLowerCase().replace(/\\_/g, '-');\n    });\n    this.addClass(...deviceClassNames);\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s width to.\n   *\n   * @return {number|undefined}\n   *         - The current width of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s height to.\n   *\n   * @return {number|undefined}\n   *         - The current height of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number|string} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * An object that contains Video.js version.\n   *\n   * @typedef {Object} PlayerVersion\n   *\n   * @property {string} 'video.js' - Video.js version\n   */\n\n  /**\n   * Returns an object with Video.js version.\n   *\n   * @return {PlayerVersion}\n   *          An object with Video.js version.\n   */\n  version() {\n    return {\n      'video.js': version$6\n    };\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet_('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen,\n   * or exit documentPictureInPicture mode\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isInPictureInPicture() && !document$1.pictureInPictureElement) {\n          // Checking the presence of `window.documentPictureInPicture.window` complicates\n          // tests, checking `document.pictureInPictureElement` also works. It wouldn't\n          // be null in regular picture in picture.\n          // Exit picture in picture mode. This gesture can't trigger pip on the main window.\n          this.exitPictureInPicture();\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document$1[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    if (error) {\n      this.error(error);\n    }\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} [arg]\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Sets or returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean|undefined}\n   *         - The value of scrubbing when getting\n   *         - Nothing when setting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number|undefined}\n   *         - the current time in seconds when getting\n   *         - Nothing when setting\n   */\n  currentTime(seconds) {\n    if (seconds === undefined) {\n      // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit after all.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    if (seconds < 0) {\n      seconds = 0;\n    }\n    if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n      this.cache_.initTime = seconds;\n      this.off('canplay', this.boundApplyInitTime_);\n      this.one('canplay', this.boundApplyInitTime_);\n      return;\n    }\n    this.techCall_('setCurrentTime', seconds);\n    this.cache_.initTime = 0;\n    if (isFinite(seconds)) {\n      this.cache_.currentTime = Number(seconds);\n    }\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|undefined}\n   *         - The duration of the video in seconds when getting\n   *         - Nothing when setting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @see [Seekable Spec]{@link https://html.spec.whatwg.org/multipage/media.html#dom-media-seekable}\n   *\n   * @return {TimeRange}\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  seekable() {\n    let seekable = this.techGet_('seekable');\n    if (!seekable || !seekable.length) {\n      seekable = createTimeRanges$1(0, 0);\n    }\n    return seekable;\n  }\n\n  /**\n   * Returns whether the player is in the \"seeking\" state.\n   *\n   * @return {boolean} True if the player is in the seeking state, false if not.\n   */\n  seeking() {\n    return this.techGet_('seeking');\n  }\n\n  /**\n   * Returns whether the player is in the \"ended\" state.\n   *\n   * @return {boolean} True if the player is in the ended state, false if not.\n   */\n  ended() {\n    return this.techGet_('ended');\n  }\n\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   */\n  networkState() {\n    return this.techGet_('networkState');\n  }\n\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   */\n  readyState() {\n    return this.techGet_('readyState');\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, percentAsDecimal));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - nothing if setting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - Nothing when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         - The current value of lastVolume as a percent when getting\n   *         - Nothing when setting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|undefined}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - Nothing when setting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document$1[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document$1.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document$1.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document$1.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (event.key === 'Escape') {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document$1, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document$1.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document$1.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Get or set disable Picture-in-Picture mode.\n   *\n   * @param {boolean} [value]\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean|undefined}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   *         - nothing if setting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document$1.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        width: this.videoWidth(),\n        height: this.videoHeight()\n      }).then(pipWindow => {\n        copyStyleSheetsToWindow(pipWindow);\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.appendChild(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger({\n          type: 'enterpictureinpicture',\n          pipWindow\n        });\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('pagehide', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.parentNode.replaceChild(pipVideo, pipContainer);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document$1 && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document$1) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document$1.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => event.key.toLowerCase() === 'f',\n      muteKey = keydownEvent => event.key.toLowerCase() === 'm',\n      playPauseKey = keydownEvent => event.key.toLowerCase() === 'k' || event.key.toLowerCase() === ' '\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document$1[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} [isRetry]\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Add a <source> element to the <video> element.\n   *\n   * @param {string} srcUrl\n   *        The URL of the video source.\n   *\n   * @param {string} [mimeType]\n   *        The MIME type of the video source. Optional but recommended.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully added, false otherwise.\n   */\n  addSourceElement(srcUrl, mimeType) {\n    if (!this.tech_) {\n      return false;\n    }\n    return this.tech_.addSourceElement(srcUrl, mimeType);\n  }\n\n  /**\n   * Remove a <source> element from the <video> element by its URL.\n   *\n   * @param {string} srcUrl\n   *        The URL of the source to remove.\n   *\n   * @return {boolean}\n   *         Returns true if the source element was successfully removed, false otherwise.\n   */\n  removeSourceElement(srcUrl) {\n    if (!this.tech_) {\n      return false;\n    }\n    return this.tech_.removeSourceElement(srcUrl);\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    // Workaround to use the load method with the VHS.\n    // Does not cover the case when the load method is called directly from the mediaElement.\n    if (this.tech_ && this.tech_.vhs) {\n      this.src(this.currentSource());\n      return;\n    }\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    this.error(null);\n    if (this.titleBar) {\n      this.titleBar.update({\n        title: undefined,\n        description: undefined\n      });\n    }\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {'none'|'auto'|'metadata'} [value]\n   *        Preload mode to pass to tech\n   *\n   * @return {string|undefined}\n   *         - The preload attribute value when getting\n   *         - Nothing when setting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|'play'|'muted'|'any'} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string|undefined}\n   *         - The current value of autoplay when getting\n   *         - Nothing when setting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|undefined}\n   *         - the current value of playsinline\n   *         - Nothing when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean|undefined}\n   *         - The current value of loop when getting\n   *         - Nothing when setting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|undefined}\n   *         - The current value of poster when getting\n   *         - Nothing when setting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of controls when getting\n   *         - Nothing when setting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of native controls when getting\n   *         - Nothing when setting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|undefined}\n   *         - The current MediaError when getting (or null)\n   *         - Nothing when setting\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = null;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean|undefined}\n   *         - The current value of userActive when getting\n   *         - Nothing when setting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n\n    /** @this Player */\n    const activityCheck = function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    };\n    this.setInterval(activityCheck, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The current playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The default playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} [bool]\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean|undefined}\n   *         - The current value of isAudio when getting\n   *         - Nothing when setting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  updatePlayerHeightOnAudioOnlyMode_() {\n    const controlBar = this.getChild('ControlBar');\n    if (!controlBar || this.audioOnlyCache_.controlBarHeight === controlBar.currentHeight()) {\n      return;\n    }\n    this.audioOnlyCache_.controlBarHeight = controlBar.currentHeight();\n    this.height(this.audioOnlyCache_.controlBarHeight);\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n    this.audioOnlyCache_.controlBarHeight = controlBarHeight;\n    this.on('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n    this.off('playerresize', this.boundUpdatePlayerHeightOnAudioOnlyMode_);\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * Set or get the player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|undefined}\n   *         - The current language code when getting\n   *         - Nothing when setting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} [value]\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean|undefined}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   *         Nothing if setting\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    const crossOrigin = this.crossOrigin();\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (crossOrigin) {\n      this.crossOrigin(crossOrigin);\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      try {\n        // If empty string, make it a parsable json object.\n        Object.assign(tagOptions, JSON.parse(dataSetup || '{}'));\n      } catch (e) {\n        log$1.error('data-setup', e);\n      }\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   * @return {boolean|undefined}\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} [newRates]\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false,\n  spatialNavigation: {\n    enabled: false,\n    horizontalSeek: false\n  },\n  // Default smooth seeking to false\n  enableSmoothSeeking: false,\n  disableSeekWhileScrubbingOnMobile: false\n};\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * @typedef  {Object} PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\nvar VjsErrors = {\n  NetworkBadStatus: 'networkbadstatus',\n  NetworkRequestFailed: 'networkrequestfailed',\n  NetworkRequestAborted: 'networkrequestaborted',\n  NetworkRequestTimeout: 'networkrequesttimeout',\n  NetworkBodyParserFailed: 'networkbodyparserfailed',\n  StreamingHlsPlaylistParserError: 'streaminghlsplaylistparsererror',\n  StreamingDashManifestParserError: 'streamingdashmanifestparsererror',\n  StreamingContentSteeringParserError: 'streamingcontentsteeringparsererror',\n  StreamingVttParserError: 'streamingvttparsererror',\n  StreamingFailedToSelectNextSegment: 'streamingfailedtoselectnextsegment',\n  StreamingFailedToDecryptSegment: 'streamingfailedtodecryptsegment',\n  StreamingFailedToTransmuxSegment: 'streamingfailedtotransmuxsegment',\n  StreamingFailedToAppendSegment: 'streamingfailedtoappendsegment',\n  StreamingCodecsChangeError: 'streamingcodecschangeerror'\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/** @import { PlayerReadyCallback } from './player' */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {PlayerReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  // If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body\n  // always returns false. Instead, use the Shadow DOM root.\n  const inShadowDom = 'getRootNode' in el ? el.getRootNode() instanceof window$1.ShadowRoot : false;\n  const rootNode = inShadowDom ? el.getRootNode() : el.ownerDocument.body;\n  if (!el.ownerDocument.defaultView || !rootNode.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {typeof Component} comp\n *        The component class\n *\n * @return {typeof Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  return Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n*\n * @param {typeof Plugin|Function} plugin\n *         The plugin sub-class or function\n *\n * @return {typeof Plugin|Function}\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n// The list of possible error types to occur in video.js\nvideojs.Error = VjsErrors;\n\n/*! @name videojs-contrib-quality-levels @version 4.1.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\nclass QualityLevelList extends videojs.EventTarget {\n  /**\n   * Creates a QualityLevelList.\n   */\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    list[Symbol.iterator] = () => list.levels_.values();\n    return list;\n  }\n\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id);\n\n    // Do not add duplicate quality levels\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"4.1.0\";\n\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @return {QualityLevelList} a list of QualityLevels\n */\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @return {QualityLevelList} a list of QualityLevels\n */\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.obj.merge({}, options));\n};\n\n// Register the plugin with video.js.\nvideojs.registerPlugin('qualityLevels', qualityLevels);\n\n// Include the version number.\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.16.2 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n/**\n * Converts provided buffered ranges to a descriptive string\n *\n * @param {TimeRanges} buffered - received buffered time ranges\n *\n * @return {string} - descriptive string\n */\n\nfunction bufferedRangesToString(buffered) {\n  if (buffered.length === 0) {\n    return 'Buffered Ranges are empty';\n  }\n  let bufferedRangesStr = 'Buffered Ranges: \\n';\n  for (let i = 0; i < buffered.length; i++) {\n    const start = buffered.start(i);\n    const end = buffered.end(i);\n    bufferedRangesStr += `${start} --> ${end}. Duration (${end - start})\\n`;\n  }\n  return bufferedRangesStr;\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  let seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  } // Clamp seekable end since it can not be less than the seekable start\n\n  if (seekableEnd < seekableStart) {\n    seekableEnd = seekableStart;\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    const canUseFudgeFactor = partAndSegment.duration > TIME_FUDGE_FACTOR;\n    const isExactlyAtTheEnd = time === 0;\n    const isExtremelyCloseToTheEnd = canUseFudgeFactor && time + TIME_FUDGE_FACTOR >= 0;\n    if (isExactlyAtTheEnd || isExtremelyCloseToTheEnd) {\n      // 1) We are exactly at the end of the current segment.\n      // 2) We are extremely close to the end of the current segment (The difference is less than  1 / 30).\n      //    We may encounter this situation when\n      //    we don't have exact match between segment duration info in the manifest and the actual duration of the segment\n      //    For example:\n      //    We appended 3 segments 10 seconds each, meaning we should have 30 sec buffered,\n      //    but we the actual buffered is 29.99999\n      //\n      // In both cases:\n      // if we passed current time -> it means that we already played current segment\n      // if we passed buffered.end -> it means that this segment is already loaded and buffered\n      // we should select the next segment if we have one:\n      if (i !== partsAndSegments.length - 1) {\n        continue;\n      }\n    }\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no targetDuration defaulting to ${targetDuration}`\n      });\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no partTargetDuration defaulting to ${partTargetDuration}`\n      });\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\nclass DateRangesStorage {\n  constructor() {\n    this.offset_ = null;\n    this.pendingDateRanges_ = new Map();\n    this.processedDateRanges_ = new Map();\n  }\n  setOffset(segments = []) {\n    // already set\n    if (this.offset_ !== null) {\n      return;\n    } // no segment to process\n\n    if (!segments.length) {\n      return;\n    }\n    const [firstSegment] = segments; // no program date time\n\n    if (firstSegment.programDateTime === undefined) {\n      return;\n    } // Set offset as ProgramDateTime for the very first segment of the very first playlist load:\n\n    this.offset_ = firstSegment.programDateTime / 1000;\n  }\n  setPendingDateRanges(dateRanges = []) {\n    if (!dateRanges.length) {\n      return;\n    }\n    const [dateRange] = dateRanges;\n    const startTime = dateRange.startDate.getTime();\n    this.trimProcessedDateRanges_(startTime);\n    this.pendingDateRanges_ = dateRanges.reduce((map, pendingDateRange) => {\n      map.set(pendingDateRange.id, pendingDateRange);\n      return map;\n    }, new Map());\n  }\n  processDateRange(dateRange) {\n    this.pendingDateRanges_.delete(dateRange.id);\n    this.processedDateRanges_.set(dateRange.id, dateRange);\n  }\n  getDateRangesToProcess() {\n    if (this.offset_ === null) {\n      return [];\n    }\n    const dateRangeClasses = {};\n    const dateRangesToProcess = [];\n    this.pendingDateRanges_.forEach((dateRange, id) => {\n      if (this.processedDateRanges_.has(id)) {\n        return;\n      }\n      dateRange.startTime = dateRange.startDate.getTime() / 1000 - this.offset_;\n      dateRange.processDateRange = () => this.processDateRange(dateRange);\n      dateRangesToProcess.push(dateRange);\n      if (!dateRange.class) {\n        return;\n      }\n      if (dateRangeClasses[dateRange.class]) {\n        const length = dateRangeClasses[dateRange.class].push(dateRange);\n        dateRange.classListIndex = length - 1;\n      } else {\n        dateRangeClasses[dateRange.class] = [dateRange];\n        dateRange.classListIndex = 0;\n      }\n    });\n    for (const dateRange of dateRangesToProcess) {\n      const classList = dateRangeClasses[dateRange.class] || [];\n      if (dateRange.endDate) {\n        dateRange.endTime = dateRange.endDate.getTime() / 1000 - this.offset_;\n      } else if (dateRange.endOnNext && classList[dateRange.classListIndex + 1]) {\n        dateRange.endTime = classList[dateRange.classListIndex + 1].startTime;\n      } else if (dateRange.duration) {\n        dateRange.endTime = dateRange.startTime + dateRange.duration;\n      } else if (dateRange.plannedDuration) {\n        dateRange.endTime = dateRange.startTime + dateRange.plannedDuration;\n      } else {\n        dateRange.endTime = dateRange.startTime;\n      }\n    }\n    return dateRangesToProcess;\n  }\n  trimProcessedDateRanges_(startTime) {\n    const copy = new Map(this.processedDateRanges_);\n    copy.forEach((dateRange, id) => {\n      if (dateRange.startDate.getTime() < startTime) {\n        this.processedDateRanges_.delete(id);\n      }\n    });\n  }\n}\nconst QUOTA_EXCEEDED_ERR = 22;\nconst getStreamingNetworkErrorMetadata = ({\n  requestType,\n  request,\n  error,\n  parseFailure\n}) => {\n  const isBadStatus = request.status < 200 || request.status > 299;\n  const isFailure = request.status >= 400 && request.status <= 499;\n  const errorMetadata = {\n    uri: request.uri,\n    requestType\n  };\n  const isBadStatusOrParseFailure = isBadStatus && !isFailure || parseFailure;\n  if (error && isFailure) {\n    // copy original error and add to the metadata.\n    errorMetadata.error = _extends({}, error);\n    errorMetadata.errorType = videojs.Error.NetworkRequestFailed;\n  } else if (request.aborted) {\n    errorMetadata.errorType = videojs.Error.NetworkRequestAborted;\n  } else if (request.timedout) {\n    errorMetadata.erroType = videojs.Error.NetworkRequestTimeout;\n  } else if (isBadStatusOrParseFailure) {\n    const errorType = parseFailure ? videojs.Error.NetworkBodyParserFailed : videojs.Error.NetworkBadStatus;\n    errorMetadata.errorType = errorType;\n    errorMetadata.status = request.status;\n    errorMetadata.headers = request.headers;\n  }\n  return errorMetadata;\n};\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\nconst playlistMetadataPayload = (playlists, type, isLive) => {\n  if (!playlists) {\n    return;\n  }\n  const renditions = [];\n  playlists.forEach(playlist => {\n    // we need attributes to populate rendition data.\n    if (!playlist.attributes) {\n      return;\n    }\n    const {\n      BANDWIDTH,\n      RESOLUTION,\n      CODECS\n    } = playlist.attributes;\n    renditions.push({\n      id: playlist.id,\n      bandwidth: BANDWIDTH,\n      resolution: RESOLUTION,\n      codecs: CODECS\n    });\n  });\n  return {\n    type,\n    isLive,\n    renditions\n  };\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addDateRangesToTextTrack_ = options.addDateRangesToTextTrack;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls;\n    this.dateRangesStorage_ = new DateRangesStorage(); // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n    this.on('loadedplaylist', this.handleLoadedPlaylist_.bind(this));\n  }\n  handleLoadedPlaylist_() {\n    const mediaPlaylist = this.media();\n    if (!mediaPlaylist) {\n      return;\n    }\n    this.dateRangesStorage_.setOffset(mediaPlaylist.segments);\n    this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);\n    const availableDateRanges = this.dateRangesStorage_.getDateRangesToProcess();\n    if (!availableDateRanges.length || !this.addDateRangesToTextTrack_) {\n      return;\n    }\n    this.addDateRangesToTextTrack_(availableDateRanges);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2,\n      metadata: getStreamingNetworkErrorMetadata({\n        requestType: xhr.requestType,\n        request: xhr,\n        error: xhr.error\n      })\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    try {\n      return parseManifest({\n        onwarn: ({\n          message\n        }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n        oninfo: ({\n          message\n        }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n        manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        llhls: this.llhls\n      });\n    } catch (error) {\n      this.error = error;\n      this.error.metadata = {\n        errorType: videojs.Error.StreamingHlsPlaylistParserError,\n        error\n      };\n    }\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const metadata = {\n      playlistInfo: {\n        type: 'media',\n        uri: url\n      }\n    };\n    this.trigger({\n      type: 'playlistparsestart',\n      metadata\n    });\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    metadata.parsedPlaylist = playlistMetadataPayload(this.main.playlists, metadata.playlistInfo.type, !this.media_.endList);\n    this.trigger({\n      type: 'playlistparsecomplete',\n      metadata\n    });\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.dateRangesStorage_ = new DateRangesStorage();\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    const metadata = {\n      playlistInfo: {\n        type: 'media',\n        uri: playlist.uri\n      }\n    };\n    this.trigger({\n      type: 'playlistrequeststart',\n      metadata\n    });\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.trigger({\n        type: 'playlistrequestcomplete',\n        metadata\n      });\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    }\n    const metadata = {\n      playlistInfo: {\n        type: 'multivariant',\n        uri: this.src\n      }\n    };\n    this.trigger({\n      type: 'playlistrequeststart',\n      metadata\n    }); // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials,\n      requestType: 'hls-playlist'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2,\n          metadata: getStreamingNetworkErrorMetadata({\n            requestType: req.requestType,\n            request: req,\n            error\n          })\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.trigger({\n        type: 'playlistrequestcomplete',\n        metadata\n      });\n      this.src = resolveManifestRedirect(this.src, req);\n      this.trigger({\n        type: 'playlistparsestart',\n        metadata\n      });\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      }); // we haven't loaded any variant playlists here so we default to false for isLive.\n\n      metadata.parsedPlaylist = playlistMetadataPayload(manifest.playlists, metadata.playlistInfo.type, false);\n      this.trigger({\n        type: 'playlistparsecomplete',\n        metadata\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n  /**\n   * Updates or deletes a preexisting pathway clone.\n   * Ensures that all playlists related to the old pathway clone are\n   * either updated or deleted.\n   *\n   * @param {Object} clone On update, the pathway clone object for the newly updated pathway clone.\n   *        On delete, the old pathway clone object to be deleted.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteClone(clone, isUpdate) {\n    const main = this.main;\n    const pathway = clone.ID;\n    let i = main.playlists.length; // Iterate backwards through the playlist so we can remove playlists if necessary.\n\n    while (i--) {\n      const p = main.playlists[i];\n      if (p.attributes['PATHWAY-ID'] === pathway) {\n        const oldPlaylistUri = p.resolvedUri;\n        const oldPlaylistId = p.id; // update the indexed playlist and add new playlists by ID and URI\n\n        if (isUpdate) {\n          const newPlaylistUri = this.createCloneURI_(p.resolvedUri, clone);\n          const newPlaylistId = createPlaylistID(pathway, newPlaylistUri);\n          const attributes = this.createCloneAttributes_(pathway, p.attributes);\n          const updatedPlaylist = this.createClonePlaylist_(p, newPlaylistId, clone, attributes);\n          main.playlists[i] = updatedPlaylist;\n          main.playlists[newPlaylistId] = updatedPlaylist;\n          main.playlists[newPlaylistUri] = updatedPlaylist;\n        } else {\n          // Remove the indexed playlist.\n          main.playlists.splice(i, 1);\n        } // Remove playlists by the old ID and URI.\n\n        delete main.playlists[oldPlaylistId];\n        delete main.playlists[oldPlaylistUri];\n      }\n    }\n    this.updateOrDeleteCloneMedia(clone, isUpdate);\n  }\n  /**\n   * Updates or deletes media data based on the pathway clone object.\n   * Due to the complexity of the media groups and playlists, in all cases\n   * we remove all of the old media groups and playlists.\n   * On updates, we then create new media groups and playlists based on the\n   * new pathway clone object.\n   *\n   * @param {Object} clone The pathway clone object for the newly updated pathway clone.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteCloneMedia(clone, isUpdate) {\n    const main = this.main;\n    const id = clone.ID;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (!main.mediaGroups[mediaType] || !main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        // Remove all media playlists for the media group for this pathway clone.\n        if (groupKey === id) {\n          for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n            const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n            oldMedia.playlists.forEach((p, i) => {\n              const oldMediaPlaylist = main.playlists[p.id];\n              const oldPlaylistId = oldMediaPlaylist.id;\n              const oldPlaylistUri = oldMediaPlaylist.resolvedUri;\n              delete main.playlists[oldPlaylistId];\n              delete main.playlists[oldPlaylistUri];\n            });\n          } // Delete the old media group.\n\n          delete main.mediaGroups[mediaType][groupKey];\n        }\n      }\n    }); // Create the new media groups and playlists if there is an update.\n\n    if (isUpdate) {\n      this.createClonedMediaGroups_(clone);\n    }\n  }\n  /**\n   * Given a pathway clone object, clones all necessary playlists.\n   *\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} basePlaylist The original playlist to clone from.\n   */\n\n  addClonePathway(clone, basePlaylist = {}) {\n    const main = this.main;\n    const index = main.playlists.length;\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const playlistId = createPlaylistID(clone.ID, uri);\n    const attributes = this.createCloneAttributes_(clone.ID, basePlaylist.attributes);\n    const playlist = this.createClonePlaylist_(basePlaylist, playlistId, clone, attributes);\n    main.playlists[index] = playlist; // add playlist by ID and URI\n\n    main.playlists[playlistId] = playlist;\n    main.playlists[uri] = playlist;\n    this.createClonedMediaGroups_(clone);\n  }\n  /**\n   * Given a pathway clone object we create clones of all media.\n   * In this function, all necessary information and updated playlists\n   * are added to the `mediaGroup` object.\n   * Playlists are also added to the `playlists` array so the media groups\n   * will be properly linked.\n   *\n   * @param {Object} clone The pathway clone object.\n   */\n\n  createClonedMediaGroups_(clone) {\n    const id = clone.ID;\n    const baseID = clone['BASE-ID'];\n    const main = this.main;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      // If the media type doesn't exist, or there is already a clone, skip\n      // to the next media type.\n      if (!main.mediaGroups[mediaType] || main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        if (groupKey === baseID) {\n          // Create the group.\n          main.mediaGroups[mediaType][id] = {};\n        } else {\n          // There is no need to iterate over label keys in this case.\n          continue;\n        }\n        for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n          const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n          main.mediaGroups[mediaType][id][labelKey] = _extends({}, oldMedia);\n          const newMedia = main.mediaGroups[mediaType][id][labelKey]; // update URIs on the media\n\n          const newUri = this.createCloneURI_(oldMedia.resolvedUri, clone);\n          newMedia.resolvedUri = newUri;\n          newMedia.uri = newUri; // Reset playlists in the new media group.\n\n          newMedia.playlists = []; // Create new playlists in the newly cloned media group.\n\n          oldMedia.playlists.forEach((p, i) => {\n            const oldMediaPlaylist = main.playlists[p.id];\n            const group = groupID(mediaType, id, labelKey);\n            const newPlaylistID = createPlaylistID(id, group); // Check to see if it already exists\n\n            if (oldMediaPlaylist && !main.playlists[newPlaylistID]) {\n              const newMediaPlaylist = this.createClonePlaylist_(oldMediaPlaylist, newPlaylistID, clone);\n              const newPlaylistUri = newMediaPlaylist.resolvedUri;\n              main.playlists[newPlaylistID] = newMediaPlaylist;\n              main.playlists[newPlaylistUri] = newMediaPlaylist;\n            }\n            newMedia.playlists[i] = this.createClonePlaylist_(p, newPlaylistID, clone);\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Using the original playlist to be cloned, and the pathway clone object\n   * information, we create a new playlist.\n   *\n   * @param {Object} basePlaylist  The original playlist to be cloned from.\n   * @param {string} id The desired id of the newly cloned playlist.\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} attributes An optional object to populate the `attributes` property in the playlist.\n   *\n   * @return {Object} The combined cloned playlist.\n   */\n\n  createClonePlaylist_(basePlaylist, id, clone, attributes) {\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const newProps = {\n      resolvedUri: uri,\n      uri,\n      id\n    }; // Remove all segments from previous playlist in the clone.\n\n    if (basePlaylist.segments) {\n      newProps.segments = [];\n    }\n    if (attributes) {\n      newProps.attributes = attributes;\n    }\n    return merge(basePlaylist, newProps);\n  }\n  /**\n   * Generates an updated URI for a cloned pathway based on the original\n   * pathway's URI and the paramaters from the pathway clone object in the\n   * content steering server response.\n   *\n   * @param {string} baseUri URI to be updated in the cloned pathway.\n   * @param {Object} clone The pathway clone object.\n   *\n   * @return {string} The updated URI for the cloned pathway.\n   */\n\n  createCloneURI_(baseURI, clone) {\n    const uri = new URL(baseURI);\n    uri.hostname = clone['URI-REPLACEMENT'].HOST;\n    const params = clone['URI-REPLACEMENT'].PARAMS; // Add params to the cloned URL.\n\n    for (const key of Object.keys(params)) {\n      uri.searchParams.set(key, params[key]);\n    }\n    return uri.href;\n  }\n  /**\n   * Helper function to create the attributes needed for the new clone.\n   * This mainly adds the necessary media attributes.\n   *\n   * @param {string} id The pathway clone object ID.\n   * @param {Object} oldAttributes The old attributes to compare to.\n   * @return {Object} The new attributes to add to the playlist.\n   */\n\n  createCloneAttributes_(id, oldAttributes) {\n    const attributes = {\n      ['PATHWAY-ID']: id\n    };\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (oldAttributes[mediaType]) {\n        attributes[mediaType] = id;\n      }\n    });\n    return attributes;\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const keyId = playlist.contentProtection[keysystem].attributes.keyId;\n        if (keyId) {\n          keyIds.add(keyId.toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\n\n/**\n * @file xhr.js\n */\n\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\n/**\n * Iterates over the request hooks Set and calls them in order\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} options the request options to pass to the xhr wrapper\n * @return the callback hook function return value, the modified or new options Object.\n */\n\nconst callAllRequestHooks = (requestSet, options) => {\n  if (!requestSet || !requestSet.size) {\n    return;\n  }\n  let newOptions = options;\n  requestSet.forEach(requestCallback => {\n    newOptions = requestCallback(newOptions);\n  });\n  return newOptions;\n};\n/**\n * Iterates over the response hooks Set and calls them in order.\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} request the xhr request object\n * @param {Object} error the xhr error object\n * @param {Object} response the xhr response object\n */\n\nconst callAllResponseHooks = (responseSet, request, error, response) => {\n  if (!responseSet || !responseSet.size) {\n    return;\n  }\n  responseSet.forEach(responseCallback => {\n    responseCallback(request, error, response);\n  });\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    // TODO: Remove beforeRequest in the next major release.\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest; // onRequest and onResponse hooks as a Set, at either the player or global level.\n    // TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.\n\n    const _requestCallbackSet = XhrFunction._requestCallbackSet || videojs.Vhs.xhr._requestCallbackSet || new Set();\n    const _responseCallbackSet = XhrFunction._responseCallbackSet || videojs.Vhs.xhr._responseCallbackSet;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');\n      _requestCallbackSet.add(beforeRequest);\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojs.xhr : videojs.Vhs.xhr; // call all registered onRequest hooks, assign new options.\n\n    const beforeRequestOptions = callAllRequestHooks(_requestCallbackSet, options); // Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.\n\n    _requestCallbackSet.delete(beforeRequest); // xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send\n\n    const request = xhrMethod(beforeRequestOptions || options, function (error, response) {\n      // call all registered onResponse hooks\n      callAllResponseHooks(_responseCallbackSet, request, error, response);\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestType = options.requestType;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < new Date(segment.dateTimeObject)) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = new Date(playlist.segments[i + 1].dateTimeObject);\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > new Date(lastSegmentStart)) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb, requestType) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      error.metadata = getStreamingNetworkErrorMetadata({\n        requestType,\n        request,\n        error\n      });\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!newMain.mediaGroups[type][group] || !(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.isPaused_ = true;\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addMetadataToTextTrack = options.addMetadataToTextTrack;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  get isPaused() {\n    return this.isPaused_;\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2,\n        metadata: err.metadata\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      window$1.clearTimeout(this.mediaRequest_);\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      const {\n        requestType\n      } = request;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        e.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request,\n          parseFailure: true\n        }); // sidx parsing failed.\n\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    const REQUEST_TYPE = 'dash-sidx';\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        const sidxContainer = container || 'unknown';\n        return fin({\n          status: request.status,\n          message: `Unsupported ${sidxContainer} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        requestType: 'dash-sidx',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    }, REQUEST_TYPE);\n  }\n  dispose() {\n    this.isPaused_ = true;\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    window$1.clearTimeout(this.mediaRequest_);\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    this.isPaused_ = true;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    this.isPaused_ = false;\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      window$1.clearTimeout(this.mediaRequest_);\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    const metadata = {\n      manifestInfo: {\n        uri: this.mainPlaylistLoader_.srcUrl\n      }\n    };\n    this.trigger({\n      type: 'manifestrequeststart',\n      metadata\n    });\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials,\n      requestType: 'dash-manifest'\n    }, (error, req) => {\n      if (error) {\n        const {\n          requestType\n        } = req;\n        error.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request: req,\n          error\n        });\n      }\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      this.trigger({\n        type: 'manifestrequestcomplete',\n        metadata\n      });\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials,\n      requestType: 'dash-clock-sync'\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        const {\n          requestType\n        } = req;\n        this.error.metadata = getStreamingNetworkErrorMetadata({\n          requestType,\n          request: req,\n          error\n        }); // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    window$1.clearTimeout(this.mediaRequest_);\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    const metadata = {\n      manifestInfo: {\n        uri: this.mainPlaylistLoader_.srcUrl\n      }\n    };\n    this.trigger({\n      type: 'manifestparsestart',\n      metadata\n    });\n    let newMain;\n    try {\n      newMain = parseMainXml({\n        mainXml: this.mainPlaylistLoader_.mainXml_,\n        srcUrl: this.mainPlaylistLoader_.srcUrl,\n        clientOffset: this.mainPlaylistLoader_.clientOffset_,\n        sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n        previousManifest: oldMain\n      });\n    } catch (error) {\n      this.error = error;\n      this.error.metadata = {\n        errorType: videojs.Error.StreamingDashManifestParserError,\n        error\n      };\n      this.trigger('error');\n    } // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    this.addEventStreamToMetadataTrack_(newMain);\n    if (newMain) {\n      const {\n        duration,\n        endList\n      } = newMain;\n      const renditions = [];\n      newMain.playlists.forEach(playlist => {\n        renditions.push({\n          id: playlist.id,\n          bandwidth: playlist.attributes.BANDWIDTH,\n          resolution: playlist.attributes.RESOLUTION,\n          codecs: playlist.attributes.CODECS\n        });\n      });\n      const parsedManifest = {\n        duration,\n        isLive: !endList,\n        renditions\n      };\n      metadata.parsedManifest = parsedManifest;\n      this.trigger({\n        type: 'manifestparsecomplete',\n        metadata\n      });\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n  /**\n   * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.\n   *\n   * @param {manifest} newMain the newly parsed manifest\n   */\n\n  addEventStreamToMetadataTrack_(newMain) {\n    // Only add new event stream metadata if we have a new manifest.\n    if (newMain && this.mainPlaylistLoader_.main.eventStream) {\n      // convert EventStream to ID3-like data.\n      const metadataArray = this.mainPlaylistLoader_.main.eventStream.map(eventStreamNode => {\n        return {\n          cueTime: eventStreamNode.start,\n          frames: [{\n            data: eventStreamNode.messageData\n          }]\n        };\n      });\n      this.addMetadataToTextTrack('EventStream', metadataArray, this.mainPlaylistLoader_.main.duration);\n    }\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const defaultKID = playlist.contentProtection[keysystem].attributes['cenc:default_KID'];\n        if (defaultKID) {\n          // DASH keyIds are separated by dashes.\n          keyIds.add(defaultKID.replace(/-/g, '').toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$5 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$5,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Converts an array of bytes to a unicode hex string.\n\n    function toHexString(byteArray) {\n      return byteArray.map(byte => {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n      }).join('');\n    }\n    if (isMultiByte) {\n      charCodeArray = [currentByte, nextByte];\n      i++;\n    } else {\n      charCodeArray = [currentByte];\n    } // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      // We assume any multi-byte char without a decoder is unicode.\n      if (isMultiByte) {\n        const unicode = toHexString(charCodeArray); // Takes a unicode hex string and creates a single character.\n\n        char = String.fromCharCode(parseInt(unicode, 16));\n      } else {\n        char = get708CharFromCode(extended | currentByte);\n      }\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n  // We keep track of positioning information as we go by storing the\n  // number of indentations and the tab offset in this buffer.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push({\n        text: '',\n        indent: 0,\n        offset: 0\n      });\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        const offset = char1 & 0x03; // For an offest value 1-3, set the offset for that caption\n        // in the non-displayed array.\n\n        this.nonDisplayed_[this.row_].offset = offset;\n        this.column_ += offset; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        } // Ensure the row is between 0 and 14, otherwise use the most\n        // recent or default row.\n\n        if (row !== this.row_ && row >= 0 && row <= 14) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          const indentations = (data & 0xe) >> 1;\n          this.column_ = indentations * 4; // add to the number of indentations for positioning\n\n          this.nonDisplayed_[this.row_].indent += indentations;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    const logWarning = index => {\n      this.trigger('log', {\n        level: 'warn',\n        message: 'Skipping a malformed 608 caption at index ' + index + '.'\n      });\n    };\n    const content = [];\n    this.displayed_.forEach((row, i) => {\n      if (row && row.text && row.text.length) {\n        try {\n          // remove spaces from the start and end of the string\n          row.text = row.text.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          logWarning(i);\n        } // See the below link for more details on the following fields:\n        // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n\n        if (row.text.length) {\n          content.push({\n            // The text to be displayed in the caption from this specific row, with whitespace removed.\n            text: row.text,\n            // Value between 1 and 15 representing the PAC row used to calculate line height.\n            line: i + 1,\n            // A number representing the indent position by percentage (CEA-608 PAC indent code).\n            // The value will be a number between 10 and 80. Offset is used to add an aditional\n            // value to the position if necessary.\n            position: 10 + Math.min(70, row.indent * 10) + row.offset * 2.5\n          });\n        }\n      } else if (row === undefined || row === null) {\n        logWarning(i);\n      }\n    });\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_].text; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = {\n      text: '',\n      indent: 0,\n      offset: 0\n    };\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      /**\n       * Rollover stream expects data from elementary stream.\n       * Elementary stream can push forward 2 types of data\n       * - Parsed Video/Audio/Timed-metadata PES (packetized elementary stream) packets\n       * - Tracks metadata from PMT (Program Map Table)\n       * Rollover stream expects pts/dts info to be available, since it stores lastDTS\n       * We should ignore non-PES packets since they may override lastDTS to undefined.\n       * lastDTS is important to signal the next segments\n       * about rollover from the previous segments.\n       */\n      if (data.type === 'metadata') {\n        this.trigger('data', data);\n        return;\n      } // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$5 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$5,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.content || output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$4 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$4;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$3 = parseType_1;\n  var findBox$5 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$3(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$5(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$5;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$4 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$4(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$3 = tfdt;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var getUint64$3 = numbers.getUint64;\n  var parseSidx = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n      i = 12;\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = getUint64$3(data.subarray(i));\n      result.firstOffset = getUint64$3(data.subarray(i + 8));\n      i += 16;\n    }\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n    return result;\n  };\n  var parseSidx_1 = parseSidx;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse the internal MP4 structure into an equivalent javascript\n   * object.\n   */\n\n  var numberHelpers = numbers;\n  var getUint64$2 = numberHelpers.getUint64;\n  var inspectMp4,\n    textifyMp4,\n    parseMp4Date = function (seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n    parseType$2 = parseType_1,\n    findBox$4 = findBox_1,\n    nalParse = function (avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = [],\n        i,\n        length;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n      return result;\n    },\n    // registry of handlers for individual mp4 box types\n    parse = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            configurationVersion: data[0],\n            avcProfileIndication: data[1],\n            profileCompatibility: data[2],\n            avcLevelIndication: data[3],\n            lengthSizeMinusOne: data[4] & 0x03,\n            sps: [],\n            pps: []\n          },\n          numOfSequenceParameterSets = data[5] & 0x1f,\n          numOfPictureParameterSets,\n          nalSize,\n          offset,\n          i; // iterate past any SPSs\n\n        offset = 6;\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        return result;\n      },\n      btrt: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      edts: function edts(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      elst: function elst(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            edits: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; entryCount--) {\n          if (result.version === 0) {\n            result.edits.push({\n              segmentDuration: view.getUint32(i),\n              mediaTime: view.getInt32(i + 4),\n              mediaRate: view.getUint16(i + 8) + view.getUint16(i + 10) / (256 * 256)\n            });\n            i += 12;\n          } else {\n            result.edits.push({\n              segmentDuration: getUint64$2(data.subarray(i)),\n              mediaTime: getUint64$2(data.subarray(i + 8)),\n              mediaRate: view.getUint16(i + 16) + view.getUint16(i + 18) / (256 * 256)\n            });\n            i += 20;\n          }\n        }\n        return result;\n      },\n      esds: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            majorBrand: parseType$2(data.subarray(0, 4)),\n            minorVersion: view.getUint32(4),\n            compatibleBrands: []\n          },\n          i = 8;\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n        return result;\n      },\n      dinf: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            handlerType: parseType$2(data.subarray(8, 12)),\n            name: ''\n          },\n          i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function (data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          language,\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            language: ''\n          };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            // 6 bytes reserved\n            dataReferenceIndex: view.getUint16(6),\n            // 4 + 4 bytes reserved\n            channelcount: view.getUint16(16),\n            samplesize: view.getUint16(18),\n            // 2 bytes pre_defined\n            // 2 bytes reserved\n            samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n          }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n        return result;\n      },\n      moof: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4))\n          };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function (data) {\n        var result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            samples: []\n          },\n          i;\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n        return result;\n      },\n      sidx: parseSidx_1,\n      smhd: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      ctts: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            compositionOffsets: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.compositionOffsets.push({\n            sampleCount: view.getUint32(i),\n            sampleOffset: view[result.version === 0 ? 'getUint32' : 'getInt32'](i + 4)\n          });\n        }\n        return result;\n      },\n      stss: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4)),\n            syncSamples: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.syncSamples.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stco: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            chunkOffsets: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stsc: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          entryCount = view.getUint32(4),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sampleToChunks: []\n          },\n          i;\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n        return result;\n      },\n      stsd: function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            sampleSize: view.getUint32(4),\n            entries: []\n          },\n          i;\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stts: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            timeToSamples: []\n          },\n          entryCount = view.getUint32(4),\n          i;\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n        return result;\n      },\n      styp: function (data) {\n        return parse.ftyp(data);\n      },\n      tfdt: parseTfdt$3,\n      tfhd: parseTfhd$2,\n      tkhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          i = 4,\n          result = {\n            version: view.getUint8(0),\n            flags: new Uint8Array(data.subarray(1, 4))\n          };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 65536;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 65536;\n        return result;\n      },\n      traf: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function (data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: parseTrun$2,\n      'url ': function (data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function (data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n  /**\n   * Return a javascript array of box objects parsed from an ISO base\n   * media file.\n   * @param data {Uint8Array} the binary data of the media to be inspected\n   * @return {array} a javascript array of potentially nested box objects\n   */\n\n  inspectMp4 = function (data) {\n    var i = 0,\n      result = [],\n      view,\n      size,\n      type,\n      end,\n      box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n    var ab = new ArrayBuffer(data.length);\n    var v = new Uint8Array(ab);\n    for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n    }\n    view = new DataView(ab);\n    while (i < data.byteLength) {\n      // parse box data\n      size = view.getUint32(i);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n      box = (parse[type] || function (data) {\n        return {\n          data: data\n        };\n      })(data.subarray(i + 8, end));\n      box.size = size;\n      box.type = type; // store this box and move to the next\n\n      result.push(box);\n      i = end;\n    }\n    return result;\n  };\n  /**\n   * Returns a textual representation of the javascript represtentation\n   * of an MP4 file. You can use it as an alternative to\n   * JSON.stringify() to compare inspected MP4s.\n   * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n   * file\n   * @param depth {number} (optional) the number of ancestor boxes of\n   * the elements of inspectedMp4. Assumed to be zero if unspecified.\n   * @return {string} a text representation of the parsed MP4\n   */\n\n  textifyMp4 = function (inspectedMp4, depth) {\n    var indent;\n    depth = depth || 0;\n    indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n    return inspectedMp4.map(function (box, index) {\n      // list the box type first at the current indentation level\n      return indent + box.type + '\\n' +\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function (key) {\n        return key !== 'type' && key !== 'boxes'; // output all the box properties\n      }).map(function (key) {\n        var prefix = indent + '  ' + key + ': ',\n          value = box[key]; // print out raw bytes as hexademical\n\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n            return ' ' + ('00' + byte.toString(16)).slice(-2);\n          }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function (line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        } // stringify generic objects\n\n        return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n          if (index === 0) {\n            return line;\n          }\n          return indent + '  ' + line;\n        }).join('\\n');\n      }).join('\\n') + (\n      // recursively textify the child boxes\n      box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n    }).join('\\n');\n  };\n  var mp4Inspector = {\n    inspect: inspectMp4,\n    textify: textifyMp4,\n    parseType: parseType$2,\n    findBox: findBox$4,\n    parseTraf: parse.traf,\n    parseTfdt: parse.tfdt,\n    parseHdlr: parse.hdlr,\n    parseTfhd: parse.tfhd,\n    parseTrun: parse.trun,\n    parseSidx: parse.sidx\n  };\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox$3 = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd$1 = parseTfhd$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfdt$2 = parseTfdt$3;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader$1, getEmsgID3;\n  var window$2 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox$3(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox$3(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox$3(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox$3(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox$3(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox$3(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$2.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox$3(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox$3(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox$3(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox$3(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd$1(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt$2(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun$1(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$2.BigInt(compositionTimeOffset);\n      timescale = window$2.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox$3(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox$3(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox$3(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader$1 = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox$3(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox$3(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox$3(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox$3(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox$3(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox$3(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader$1(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox$3(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox$3,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader$1,\n    getEmsgID3: getEmsgID3\n  };\n  const {\n    parseTrun\n  } = mp4Inspector;\n  const {\n    findBox: findBox$2\n  } = probe$2;\n  var window$1 = window_1;\n  /**\n   * Utility function for parsing data from mdat boxes.\n   * @param {Array<Uint8Array>} segment the segment data to create mdat/traf pairs from.\n   * @returns mdat and traf boxes paired up for easier parsing.\n   */\n\n  var getMdatTrafPairs$2 = function (segment) {\n    var trafs = findBox$2(segment, ['moof', 'traf']);\n    var mdats = findBox$2(segment, ['mdat']);\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    return mdatTrafPairs;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples$2 = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$1.BigInt(sample.compositionTimeOffset);\n          currentDts += window$1.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  var samples = {\n    getMdatTrafPairs: getMdatTrafPairs$2,\n    parseSamples: parseSamples$2\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$3;\n  var parseTfhd = parseTfhd$2;\n  var {\n    getMdatTrafPairs: getMdatTrafPairs$1,\n    parseSamples: parseSamples$1\n  } = samples;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    var captionNals = {};\n    var mdatTrafPairs = getMdatTrafPairs$1(segment);\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples$1(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {Object[]} parsedCaptions[].content - A list of individual caption segments\n    * @return {String} parsedCaptions[].content.text - The visible content of the caption segment\n    * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment\n    * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  const {\n    parseTfdt\n  } = mp4Inspector;\n  const findBox = findBox_1;\n  const {\n    getTimescaleFromMediaHeader\n  } = probe$2;\n  const {\n    parseSamples,\n    getMdatTrafPairs\n  } = samples;\n  /**\n   * Module for parsing WebVTT text and styles from FMP4 segments.\n   * Based on the ISO/IEC 14496-30.\n   */\n\n  const WebVttParser = function () {\n    // default timescale to 90k\n    let timescale = 90e3;\n    /**\n     * Parses the timescale from the init segment.\n     * @param {Array<Uint8Array>} segment The initialization segment to parse the timescale from.\n     */\n\n    this.init = function (segment) {\n      // We just need the timescale from the init segment.\n      const mdhd = findBox(segment, ['moov', 'trak', 'mdia', 'mdhd'])[0];\n      if (mdhd) {\n        timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n    };\n    /**\n     * Parses a WebVTT FMP4 segment.\n     * @param {Array<Uint8Array>} segment The content segment to parse the WebVTT cues from.\n     * @returns The WebVTT cue text, styling, and timing info as an array of cue objects.\n     */\n\n    this.parseSegment = function (segment) {\n      const vttCues = [];\n      const mdatTrafPairs = getMdatTrafPairs(segment);\n      let baseMediaDecodeTime = 0;\n      mdatTrafPairs.forEach(function (pair) {\n        const mdatBox = pair.mdat;\n        const trafBox = pair.traf; // zero or one.\n\n        const tfdtBox = findBox(trafBox, ['tfdt'])[0]; // zero or one.\n\n        const tfhdBox = findBox(trafBox, ['tfhd'])[0]; // zero or more.\n\n        const trunBoxes = findBox(trafBox, ['trun']);\n        if (tfdtBox) {\n          const tfdt = parseTfdt(tfdtBox);\n          baseMediaDecodeTime = tfdt.baseMediaDecodeTime;\n        }\n        if (trunBoxes.length && tfhdBox) {\n          const samples = parseSamples(trunBoxes, baseMediaDecodeTime, tfhdBox);\n          let mdatOffset = 0;\n          samples.forEach(function (sample) {\n            // decode utf8 payload\n            const UTF_8 = 'utf-8';\n            const textDecoder = new TextDecoder(UTF_8); // extract sample data from the mdat box.\n            // WebVTT Sample format:\n            // Exactly one VTTEmptyCueBox box\n            // OR one or more VTTCueBox boxes.\n\n            const sampleData = mdatBox.slice(mdatOffset, mdatOffset + sample.size); // single vtte box.\n\n            const vtteBox = findBox(sampleData, ['vtte'])[0]; // empty box\n\n            if (vtteBox) {\n              mdatOffset += sample.size;\n              return;\n            } // TODO: Support 'vtta' boxes.\n            // VTTAdditionalTextBoxes can be interleaved between VTTCueBoxes.\n\n            const vttcBoxes = findBox(sampleData, ['vttc']);\n            vttcBoxes.forEach(function (vttcBox) {\n              // mandatory payload box.\n              const paylBox = findBox(vttcBox, ['payl'])[0]; // optional settings box\n\n              const sttgBox = findBox(vttcBox, ['sttg'])[0];\n              const start = sample.pts / timescale;\n              const end = (sample.pts + sample.duration) / timescale;\n              let cueText, settings; // contains cue text.\n\n              if (paylBox) {\n                try {\n                  cueText = textDecoder.decode(paylBox);\n                } catch (e) {\n                  console.error(e);\n                }\n              } // settings box contains styling.\n\n              if (sttgBox) {\n                try {\n                  settings = textDecoder.decode(sttgBox);\n                } catch (e) {\n                  console.error(e);\n                }\n              }\n              if (sample.duration && cueText) {\n                vttCues.push({\n                  cueText,\n                  start,\n                  end,\n                  settings\n                });\n              }\n            });\n            mdatOffset += sample.size;\n          });\n        }\n      });\n      return vttCues;\n    };\n  };\n  var webvttParser = WebVttParser;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    /**\n     * Initializes the WebVttParser and passes the init segment.\n     *\n     * @param {Uint8Array} data mp4 boxed WebVTT init segment data\n     */\n\n    initMp4WebVttParser(data) {\n      if (!this.webVttParser) {\n        this.webVttParser = new webvttParser();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength); // Set the timescale for the parser.\n      // This can be called repeatedly in order to set and re-set the timescale.\n\n      this.webVttParser.init(segment);\n    }\n    /**\n     * Parse an mp4 encapsulated WebVTT segment and return an array of cues.\n     *\n     * @param {Uint8Array} data a text/webvtt segment\n     * @return {Object[]} an array of parsed cue objects\n     */\n\n    getMp4WebVttText(data) {\n      if (!this.webVttParser) {\n        // timescale might not be set yet if the parser is created before an init segment is passed.\n        // default timescale is 90k.\n        this.webVttParser = new webvttParser();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.webVttParser.parseSegment(segment);\n      this.self.postMessage({\n        action: 'getMp4WebVttText',\n        mp4VttCues: parsed || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probes an mp4 segment for EMSG boxes containing ID3 data.\n     * https://aomediacodec.github.io/id3-emsg/\n     *\n     * @param {Uint8Array} data segment data\n     * @param {number} offset segment start time\n     * @return {Object[]} an array of ID3 frames\n     */\n\n    probeEmsgID3({\n      data,\n      offset\n    }) {\n      const id3Frames = probe$2.getEmsgID3(data, offset);\n      this.self.postMessage({\n        action: 'probeEmsgID3',\n        id3Frames,\n        emsgData: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline,\n    segment,\n    triggerSegmentEventFn\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n  const handleError = () => {\n    const error = {\n      message: 'Received an error message from the transmuxer worker',\n      metadata: {\n        errorType: videojs.Error.StreamingFailedToTransmuxSegment,\n        segmentInfo: segmentInfoPayload({\n          segment\n        })\n      }\n    };\n    onDone(null, error);\n  };\n  transmuxer.onmessage = handleMessage;\n  transmuxer.onerror = handleError;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    triggerSegmentEventFn({\n      type: 'segmenttransmuxingstart',\n      segment\n    });\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\nconst WEB_VTT_CODEC = 'wvtt';\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  const {\n    requestType\n  } = request;\n  const metadata = getStreamingNetworkErrorMetadata({\n    requestType,\n    request,\n    error\n  });\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request,\n      metadata\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request,\n      metadata\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request,\n      metadata\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request,\n      metadata\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn, triggerSegmentEventFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  const keyInfo = {\n    uri: request.uri\n  };\n  triggerSegmentEventFn({\n    type: 'segmentkeyloadcomplete',\n    segment,\n    keyInfo\n  });\n  return finishProcessingFn(null, segment);\n};\n/**\n * Processes an mp4 init segment depending on the codec through the transmuxer.\n *\n * @param {Object} segment init segment to process\n * @param {string} codec the codec of the text segments\n */\n\nconst initMp4Text = (segment, codec) => {\n  if (codec === WEB_VTT_CODEC) {\n    segment.transmuxer.postMessage({\n      action: 'initMp4WebVttParser',\n      data: segment.map.bytes\n    });\n  }\n};\n/**\n * Parses an mp4 text segment with the transmuxer and calls the doneFn from\n * the segment loader.\n *\n * @param {Object} segment the text segment to parse\n * @param {string} codec the codec of the text segment\n * @param {Function} doneFn the doneFn passed from the segment loader\n */\n\nconst parseMp4TextSegment = (segment, codec, doneFn) => {\n  if (codec === WEB_VTT_CODEC) {\n    workerCallback({\n      action: 'getMp4WebVttText',\n      data: segment.bytes,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        mp4VttCues\n      }) => {\n        segment.bytes = data;\n        doneFn(null, segment, {\n          mp4VttCues\n        });\n      }\n    });\n  }\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    const mediaType = type || 'unknown';\n    return callback({\n      internal: true,\n      message: `Found unsupported ${mediaType} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE,\n      metadata: {\n        mediaType\n      }\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n        if (track.type === 'text') {\n          initMp4Text(segment, track.codec);\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  triggerSegmentEventFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response);\n  triggerSegmentEventFn({\n    type: 'segmentloaded',\n    segment\n  }); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType,\n  triggerSegmentEventFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  triggerSegmentEventFn({\n    type: 'segmentloaded',\n    segment\n  });\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      const timingInfo = {\n        pts: {\n          start: videoSegmentTimingInfo.start.presentation,\n          end: videoSegmentTimingInfo.end.presentation\n        },\n        dts: {\n          start: videoSegmentTimingInfo.start.decode,\n          end: videoSegmentTimingInfo.end.decode\n        }\n      };\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingtiminginfoavailable',\n        segment,\n        timingInfo\n      });\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      const timingInfo = {\n        pts: {\n          start: audioSegmentTimingInfo.start.pts,\n          end: audioSegmentTimingInfo.end.pts\n        },\n        dts: {\n          start: audioSegmentTimingInfo.start.dts,\n          end: audioSegmentTimingInfo.end.dts\n        }\n      };\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingtiminginfoavailable',\n        segment,\n        timingInfo\n      });\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: (result, error) => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      triggerSegmentEventFn({\n        type: 'segmenttransmuxingcomplete',\n        segment\n      });\n      doneFn(error, segment, result);\n    },\n    segment,\n    triggerSegmentEventFn\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const isMp4TextSegment = tracks.text && (!tracks.audio || !tracks.video);\n    if (isMp4TextSegment) {\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: 'text'\n      });\n      parseMp4TextSegment(segment, tracks.text.codec, doneFn);\n      return;\n    }\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = (captions, id3Frames) => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (id3Frames && id3Frames.length) {\n        id3Fn(segment, id3Frames);\n      }\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        }\n        workerCallback({\n          action: 'probeEmsgID3',\n          data: bytesAsUint8Array,\n          transmuxer: segment.transmuxer,\n          offset: startTime,\n          callback: ({\n            emsgData,\n            id3Frames\n          }) => {\n            // transfer bytes back to us\n            bytes = emsgData.buffer;\n            segment.bytes = bytesAsUint8Array = emsgData; // Run through the CaptionParser in case there are captions.\n            // Initialize CaptionParser if it hasn't been yet\n\n            if (!tracks.video || !emsgData.byteLength || !segment.transmuxer) {\n              finishLoading(undefined, id3Frames);\n              return;\n            }\n            workerCallback({\n              action: 'pushMp4Captions',\n              endAction: 'mp4Captions',\n              transmuxer: segment.transmuxer,\n              data: bytesAsUint8Array,\n              timescales: segment.map.timescales,\n              trackIds: [tracks.video.id],\n              callback: message => {\n                // transfer bytes back to us\n                bytes = message.data.buffer;\n                segment.bytes = bytesAsUint8Array = message.data;\n                message.logs.forEach(function (log) {\n                  onTransmuxerLog(merge(log, {\n                    stream: 'mp4CaptionParser'\n                  }));\n                });\n                finishLoading(message.captions, id3Frames);\n              }\n            });\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker,\n  segment,\n  doneFn\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.onerror = () => {\n    const message = 'An error occurred in the decryption worker';\n    const segmentInfo = segmentInfoPayload({\n      segment\n    });\n    const decryptError = {\n      message,\n      metadata: {\n        error: new Error(message),\n        errorType: videojs.Error.StreamingFailedToDecryptSegment,\n        segmentInfo,\n        keyInfo: {\n          uri: segment.key.resolvedUri || segment.map.key.resolvedUri\n        }\n      }\n    };\n    doneFn(decryptError, segment);\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  triggerSegmentEventFn({\n    type: 'segmentdecryptionstart'\n  });\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker,\n    segment,\n    doneFn\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    triggerSegmentEventFn({\n      type: 'segmentdecryptioncomplete',\n      segment\n    });\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog,\n      triggerSegmentEventFn\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog,\n            triggerSegmentEventFn\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog,\n          triggerSegmentEventFn\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        triggerSegmentEventFn({\n          type: 'segmentdecryptionstart',\n          segment\n        });\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key,\n          segment,\n          doneFn\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          triggerSegmentEventFn({\n            type: 'segmentdecryptioncomplete',\n            segment\n          });\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog,\n  triggerSegmentEventFn\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog,\n    triggerSegmentEventFn\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer',\n      requestType: 'segment-key'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn, triggerSegmentEventFn);\n    const keyInfo = {\n      uri: segment.key.resolvedUri\n    };\n    triggerSegmentEventFn({\n      type: 'segmentkeyloadstart',\n      segment,\n      keyInfo\n    });\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer',\n        requestType: 'segment-key'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn, triggerSegmentEventFn);\n      const keyInfo = {\n        uri: segment.map.key.resolvedUri\n      };\n      triggerSegmentEventFn({\n        type: 'segmentkeyloadstart',\n        segment,\n        keyInfo\n      });\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map),\n      requestType: 'segment-media-initialization'\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn,\n      triggerSegmentEventFn\n    });\n    triggerSegmentEventFn({\n      type: 'segmentloadstart',\n      segment\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment),\n    requestType: 'segment'\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType,\n    triggerSegmentEventFn\n  });\n  triggerSegmentEventFn({\n    type: 'segmentloadstart',\n    segment\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  let pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  if (!isNaN(this.customPixelRatio)) {\n    pixelRatio = this.customPixelRatio;\n  }\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    let pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (!isNaN(this.customPixelRatio)) {\n      pixelRatio = this.customPixelRatio;\n    }\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n/**\n * Example:\n * https://host.com/path1/path2/path3/segment.ts?arg1=val1\n * -->\n * path3/segment.ts\n *\n * @param resolvedUri\n * @return {string}\n */\n\nfunction compactSegmentUrlDescription(resolvedUri) {\n  try {\n    return new URL(resolvedUri).pathname.split('/').slice(-2).join('/');\n  } catch (e) {\n    return '';\n  }\n}\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream; // in CEA 608 captions, video.js/mux.js sends a content array\n    // with positioning data\n\n    if (caption.content) {\n      caption.content.forEach(value => {\n        const cue = new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, value.text);\n        cue.line = value.line;\n        cue.align = 'left';\n        cue.position = value.position;\n        cue.positionAlign = 'line-left';\n        inbandTextTracks[track].addCue(cue);\n      });\n    } else {\n      // otherwise, a text value with combined captions is sent\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    }\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    } // If we have no frames, we can't create a cue.\n\n    if (!metadata.frames || !metadata.frames.length) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const finiteDuration = isFinite(videoDuration) ? videoDuration : startTime;\n    const nextTime = Number(sortedStartTimes[idx + 1]) || finiteDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n}; // object for mapping daterange attributes\n\nconst dateRangeAttr = {\n  id: 'ID',\n  class: 'CLASS',\n  startDate: 'START-DATE',\n  duration: 'DURATION',\n  endDate: 'END-DATE',\n  endOnNext: 'END-ON-NEXT',\n  plannedDuration: 'PLANNED-DURATION',\n  scte35Out: 'SCTE35-OUT',\n  scte35In: 'SCTE35-IN'\n};\nconst dateRangeKeysToOmit = new Set(['id', 'class', 'startDate', 'duration', 'endDate', 'endOnNext', 'startTime', 'endTime', 'processDateRange']);\n/**\n * Add DateRange metadata text track to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} dateRanges parsed media playlist\n * @private\n */\n\nconst addDateRangeMetadata = ({\n  inbandTextTracks,\n  dateRanges\n}) => {\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  dateRanges.forEach(dateRange => {\n    // we generate multiple cues for each date range with different attributes\n    for (const key of Object.keys(dateRange)) {\n      if (dateRangeKeysToOmit.has(key)) {\n        continue;\n      }\n      const cue = new Cue(dateRange.startTime, dateRange.endTime, '');\n      cue.id = dateRange.id;\n      cue.type = 'com.apple.quicktime.HLS';\n      cue.value = {\n        key: dateRangeAttr[key],\n        data: dateRange[key]\n      };\n      if (key === 'scte35Out' || key === 'scte35In') {\n        cue.value.data = new Uint8Array(cue.value.data.match(/[\\da-f]{2}/gi)).buffer;\n      }\n      metadataTrack.addCue(cue);\n    }\n    dateRange.processDateRange();\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  if (!videojs.browser.IS_ANY_SAFARI) {\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  }\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  const uniqueCues = {};\n  for (let i = cues.length - 1; i >= 0; i--) {\n    const cue = cues[i];\n    const cueKey = `${cue.startTime}-${cue.endTime}-${cue.text}`;\n    if (uniqueCues[cueKey]) {\n      track.removeCue(cue);\n    } else {\n      uniqueCues[cueKey] = cue;\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst shouldFixBadTimelineChanges = timelineChangeController => {\n  if (!timelineChangeController) {\n    return false;\n  }\n  const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n    type: 'audio'\n  });\n  const pendingMainTimelineChange = timelineChangeController.pendingTimelineChange({\n    type: 'main'\n  });\n  const hasPendingTimelineChanges = pendingAudioTimelineChange && pendingMainTimelineChange;\n  const differentPendingChanges = hasPendingTimelineChanges && pendingAudioTimelineChange.to !== pendingMainTimelineChange.to;\n  const isNotInitialPendingTimelineChange = hasPendingTimelineChanges && pendingAudioTimelineChange.from !== -1 && pendingMainTimelineChange.from !== -1;\n  if (isNotInitialPendingTimelineChange && differentPendingChanges) {\n    return true;\n  }\n  return false;\n};\n/**\n * Check if the pending audio timeline change is behind the\n * pending main timeline change.\n *\n * @param {SegmentLoader} segmentLoader\n * @return {boolean}\n */\n\nconst isAudioTimelineBehind = segmentLoader => {\n  const pendingAudioTimelineChange = segmentLoader.timelineChangeController_.pendingTimelineChange({\n    type: 'audio'\n  });\n  const pendingMainTimelineChange = segmentLoader.timelineChangeController_.pendingTimelineChange({\n    type: 'main'\n  });\n  const hasPendingTimelineChanges = pendingAudioTimelineChange && pendingMainTimelineChange;\n  return hasPendingTimelineChanges && pendingAudioTimelineChange.to < pendingMainTimelineChange.to;\n};\n/**\n * A method to check if the player is waiting for a timeline change, and fixes\n * certain scenarios where the timelines need to be updated.\n *\n * @param {SegmentLoader} segmentLoader\n */\n\nconst checkAndFixTimelines = segmentLoader => {\n  const segmentInfo = segmentLoader.pendingSegment_;\n  if (!segmentInfo) {\n    return;\n  }\n  const waitingForTimelineChange = shouldWaitForTimelineChange({\n    timelineChangeController: segmentLoader.timelineChangeController_,\n    currentTimeline: segmentLoader.currentTimeline_,\n    segmentTimeline: segmentInfo.timeline,\n    loaderType: segmentLoader.loaderType_,\n    audioDisabled: segmentLoader.audioDisabled_\n  });\n  if (waitingForTimelineChange && shouldFixBadTimelineChanges(segmentLoader.timelineChangeController_)) {\n    if (isAudioTimelineBehind(segmentLoader)) {\n      segmentLoader.timelineChangeController_.trigger('audioTimelineBehind');\n      return;\n    }\n    segmentLoader.timelineChangeController_.trigger('fixBadTimelineChange');\n  }\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n *\n * @param {Object} options type of segment loader and segment either segmentInfo or simple segment\n * @return a segmentInfo payload for events or errors.\n */\n\nconst segmentInfoPayload = ({\n  type,\n  segment\n}) => {\n  if (!segment) {\n    return;\n  }\n  const isEncrypted = Boolean(segment.key || segment.map && segment.map.ke);\n  const isMediaInitialization = Boolean(segment.map && !segment.map.bytes);\n  const start = segment.startOfSegment === undefined ? segment.start : segment.startOfSegment;\n  return {\n    type: type || segment.type,\n    uri: segment.resolvedUri || segment.uri,\n    start,\n    duration: segment.duration,\n    isEncrypted,\n    isMediaInitialization\n  };\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings;\n    this.addMetadataToTextTrack = settings.addMetadataToTextTrack; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.shouldForceTimestampOffsetAfterResync_ = false;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      } else {\n        checkAndFixTimelines(this);\n      }\n    });\n    this.sourceUpdater_.on('codecschange', metadata => {\n      this.trigger(_extends({\n        type: 'codecschange'\n      }, metadata));\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        } else {\n          checkAndFixTimelines(this);\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', metadata => {\n        this.trigger(_extends({\n          type: 'timelinechange'\n        }, metadata));\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        } else {\n          checkAndFixTimelines(this);\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        } else {\n          checkAndFixTimelines(this);\n        }\n      });\n    }\n  }\n  /**\n   * TODO: Current sync controller consists of many hls-specific strategies\n   * media sequence sync is also hls-specific, and we would like to be protocol-agnostic on this level\n   * this should be a part of the sync-controller and sync controller should expect different strategy list based on the protocol.\n   *\n   * @return {MediaSequenceSync|null}\n   * @private\n   */\n\n  get mediaSequenceSync_() {\n    return this.syncController_.getMediaSequenceSync(this.loaderType_);\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    if (this.playlist_ && this.playlist_.endList && newPlaylist.endList && this.playlist_.uri === newPlaylist.uri) {\n      // skip update if both prev and new are vod and have the same URI\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`);\n    if (this.mediaSequenceSync_) {\n      this.mediaSequenceSync_.update(newPlaylist, this.currentTime_());\n      this.logger_(`Playlist update:\ncurrentTime: ${this.currentTime_()}\nbufferedEnd: ${lastBufferedEnd(this.buffered_())}\n`, this.mediaSequenceSync_.diagnostics);\n    } // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_\n        // to false, resulting in fetching segments at currentTime and causing repeated\n        // same-segment requests on playlist change. This erroneously drives up the playback watcher\n        // stalled segment count, as re-requesting segments at the currentTime or browser cached segments\n        // will not change the buffer.\n        // Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201\n        const isLLHLS = !newPlaylist.endList && typeof newPlaylist.partTargetDuration === 'number';\n        if (isLLHLS) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    if (this.mediaSequenceSync_) {\n      this.mediaSequenceSync_.resetAppendedStatus();\n    }\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false; // this is mainly to sync timing-info when switching between renditions with and without timestamp-rollover,\n    // so we don't want it for DASH or fragmented mp4 segments.\n\n    const isFmp4 = this.currentMediaInfo_ && this.currentMediaInfo_.isFmp4;\n    const isHlsTs = this.sourceType_ === 'hls' && !isFmp4;\n    if (isHlsTs) {\n      this.shouldForceTimestampOffsetAfterResync_ = true;\n    }\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: segmentInfo\n      })\n    };\n    this.trigger({\n      type: 'segmentselected',\n      metadata\n    });\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${next.mediaIndex}`);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      let segmentIndex;\n      let partIndex;\n      let startTime;\n      const targetTime = this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_();\n      if (this.mediaSequenceSync_) {\n        this.logger_(`chooseNextRequest_ request after Quality Switch:\nFor TargetTime: ${targetTime}.\nCurrentTime: ${this.currentTime_()}\nBufferedEnd: ${bufferedEnd}\nFetch At Buffer: ${this.fetchAtBuffer_}\n`, this.mediaSequenceSync_.diagnostics);\n      }\n      if (this.mediaSequenceSync_ && this.mediaSequenceSync_.isReliable) {\n        const syncInfo = this.getSyncInfoFromMediaSequenceSync_(targetTime);\n        if (!syncInfo) {\n          const message = 'No sync info found while using media sequence sync';\n          this.error({\n            message,\n            metadata: {\n              errorType: videojs.Error.StreamingFailedToSelectNextSegment,\n              error: new Error(message)\n            }\n          });\n          this.logger_('chooseNextRequest_ - no sync info found using media sequence sync'); // no match\n\n          return null;\n        }\n        this.logger_(`chooseNextRequest_ mediaSequence syncInfo (${syncInfo.start} --> ${syncInfo.end})`);\n        segmentIndex = syncInfo.segmentIndex;\n        partIndex = syncInfo.partIndex;\n        startTime = syncInfo.start;\n      } else {\n        this.logger_('chooseNextRequest_ - fallback to a regular segment selection algorithm, based on a syncPoint.'); // fallback\n\n        const mediaInfoForTime = Playlist.getMediaInfoForTime({\n          exactManifestTimings: this.exactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: targetTime,\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        });\n        segmentIndex = mediaInfoForTime.segmentIndex;\n        partIndex = mediaInfoForTime.partIndex;\n        startTime = mediaInfoForTime.startTime;\n      }\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${targetTime}` : `currentTime ${targetTime}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n      this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${next.mediaIndex} `);\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,\n    // it applies to each segment in each media playlist.\n    // https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1\n\n    const hasIndependentSegments = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments; // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !hasIndependentSegments && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    if (this.shouldForceTimestampOffsetAfterResync_) {\n      this.shouldForceTimestampOffsetAfterResync_ = false;\n      next.forceTimestampOffset = true;\n      this.logger_('choose next request. Force timestamp offset after loader resync');\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  getSyncInfoFromMediaSequenceSync_(targetTime) {\n    if (!this.mediaSequenceSync_) {\n      return null;\n    } // we should pull the target time to the least available time if we drop out of sync for any reason\n\n    const finalTargetTime = Math.max(targetTime, this.mediaSequenceSync_.start);\n    if (targetTime !== finalTargetTime) {\n      this.logger_(`getSyncInfoFromMediaSequenceSync_. Pulled target time from ${targetTime} to ${finalTargetTime}`);\n    }\n    const mediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(finalTargetTime);\n    if (!mediaSequenceSyncInfo) {\n      // no match at all\n      return null;\n    }\n    if (!mediaSequenceSyncInfo.isAppended) {\n      // has a perfect match\n      return mediaSequenceSyncInfo;\n    } // has match, but segment was already appended.\n    // attempt to auto-advance to the nearest next segment:\n\n    const nextMediaSequenceSyncInfo = this.mediaSequenceSync_.getSyncInfoForTime(mediaSequenceSyncInfo.end);\n    if (!nextMediaSequenceSyncInfo) {\n      // no match at all\n      return null;\n    }\n    if (nextMediaSequenceSyncInfo.isAppended) {\n      this.logger_('getSyncInfoFromMediaSequenceSync_: We encounter unexpected scenario where next media sequence sync info is also appended!');\n    } // got match with the nearest next segment\n\n    return nextMediaSequenceSyncInfo;\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    const {\n      hasAudio,\n      hasVideo\n    } = trackInfo;\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: simpleSegment\n      }),\n      trackInfo: {\n        hasAudio,\n        hasVideo\n      }\n    };\n    this.trigger({\n      type: 'segmenttransmuxingtrackinfoavailable',\n      metadata\n    });\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    } else {\n      checkAndFixTimelines(this);\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    } else {\n      checkAndFixTimelines(this);\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    this.addMetadataToTextTrack(dispatchType, id3Frames, this.duration_());\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    } // we need to allow an append here even if we're moving to different timelines.\n\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      checkAndFixTimelines(this);\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.error({\n      message: `${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`,\n      metadata: {\n        errorType: videojs.Error.StreamingFailedToAppendSegment\n      }\n    });\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    const metadata = {\n      segmentInfo: segmentInfoPayload({\n        type: this.loaderType_,\n        segment: segmentInfo\n      })\n    };\n    this.trigger({\n      type: 'segmentappendstart',\n      metadata\n    });\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      checkAndFixTimelines(this);\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting\n${compactSegmentUrlDescription(segmentInfo.uri)}\n${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      },\n      triggerSegmentEventFn: ({\n        type,\n        segment,\n        keyInfo,\n        trackInfo,\n        timingInfo\n      }) => {\n        const segInfo = segmentInfoPayload({\n          segment\n        });\n        const metadata = {\n          segmentInfo: segInfo\n        }; // add other properties if necessary.\n\n        if (keyInfo) {\n          metadata.keyInfo = keyInfo;\n        }\n        if (trackInfo) {\n          metadata.trackInfo = trackInfo;\n        }\n        if (timingInfo) {\n          metadata.timingInfo = timingInfo;\n        }\n        this.trigger({\n          type,\n          metadata\n        });\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const isEncrypted = segmentInfo.segment.key || segmentInfo.segment.map && segmentInfo.segment.map.key;\n    const isMediaInitialization = segmentInfo.segment.map && !segmentInfo.segment.map.bytes;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part,\n      type: this.loaderType_,\n      start: segmentInfo.startOfSegment,\n      duration: segmentInfo.duration,\n      isEncrypted,\n      isMediaInitialization\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const metadata = {\n      bandwidthInfo: {\n        from: this.bandwidth,\n        to: stats.bandwidth\n      }\n    }; // player event with payload\n\n    this.trigger({\n      type: 'bandwidthupdated',\n      metadata\n    });\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      const metadata = {\n        segmentInfo: segmentInfoPayload({\n          type: this.loaderType_,\n          segment: this.pendingSegment_\n        })\n      };\n      this.trigger({\n        type: 'appendsdone',\n        metadata\n      });\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    if (segmentInfo.part && segmentInfo.part.syncInfo) {\n      // low-latency flow\n      segmentInfo.part.syncInfo.markAppended();\n    } else if (segmentInfo.segment.syncInfo) {\n      // normal flow\n      segmentInfo.segment.syncInfo.markAppended();\n    } // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      programDateTime: segment.programDateTime,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n    // Only update if we change the codec base.\n    // For example, going from avc1.640028 to avc1.64001f does not require a changeType call.\n\n    const newCodecBase = codec.substring(0, codec.indexOf('.'));\n    const oldCodec = sourceUpdater.codecs[type];\n    const oldCodecBase = oldCodec.substring(0, oldCodec.indexOf('.'));\n    if (oldCodecBase === newCodecBase) {\n      return;\n    }\n    const metadata = {\n      codecsChangeInfo: {\n        from: oldCodec,\n        to: codec\n      }\n    };\n    sourceUpdater.trigger({\n      type: 'codecschange',\n      metadata\n    });\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${oldCodec} to ${codec}`); // check if change to the provided type is supported\n\n    try {\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    } catch (e) {\n      metadata.errorType = videojs.Error.StreamingCodecsChangeError;\n      metadata.error = e;\n      e.metadata = metadata;\n      sourceUpdater.error_ = e;\n      sourceUpdater.trigger('error');\n      videojs.log.warn(`Failed to changeType on ${type}Buffer`, e);\n    }\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  const bufferedRangesForType = sourceUpdater[`${type}Buffered`]();\n  const descriptiveString = bufferedRangesToString(bufferedRangesForType);\n  sourceUpdater.logger_(`received \"updateend\" event for ${type} Source Buffer: `, descriptiveString);\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this.\n    return !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\nconst bufferToHexString = buffer => {\n  const uInt8Buffer = new Uint8Array(buffer);\n  return Array.from(uInt8Buffer).map(byte => byte.toString(16).padStart(2, '0')).join('');\n};\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const isMp4WebVttSegmentWithCues = result.mp4VttCues && result.mp4VttCues.length;\n    if (isMp4WebVttSegmentWithCues) {\n      segmentInfo.mp4VttCues = result.mp4VttCues;\n    } // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message,\n        metadata: {\n          errorType: videojs.Error.StreamingVttParserError,\n          error: e\n        }\n      });\n      return;\n    }\n    if (!isMp4WebVttSegmentWithCues) {\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    }\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_(simpleSegment, result) {\n    const isVttType = simpleSegment && simpleSegment.type === 'vtt';\n    const isTextResult = result && result.type === 'text';\n    const isFmp4VttSegment = isVttType && isTextResult; // handle segment data for fmp4 encapsulated webvtt\n\n    if (isFmp4VttSegment) {\n      super.handleData_(simpleSegment, result);\n    }\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Utility function for converting mp4 webvtt cue objects into VTTCues.\n   *\n   * @param {Object} segmentInfo with mp4 webvtt cues for parsing into VTTCue objecs\n   */\n\n  parseMp4VttCues_(segmentInfo) {\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    segmentInfo.mp4VttCues.forEach(cue => {\n      const start = cue.start + timestampOffset;\n      const end = cue.end + timestampOffset;\n      const vttCue = new window$1.VTTCue(start, end, cue.cueText);\n      if (cue.settings) {\n        cue.settings.split(' ').forEach(cueSetting => {\n          const keyValString = cueSetting.split(':');\n          const key = keyValString[0];\n          const value = keyValString[1];\n          vttCue[key] = isNaN(value) ? value : Number(value);\n        });\n      }\n      segmentInfo.cues.push(vttCue);\n    });\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    if (segmentInfo.mp4VttCues) {\n      this.parseMp4VttCues_(segmentInfo);\n      return;\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const {\n      MPEGTS,\n      LOCAL\n    } = segmentInfo.timestampmap;\n    /**\n     * From the spec:\n     * The MPEGTS media timestamp MUST use a 90KHz timescale,\n     * even when non-WebVTT Media Segments use a different timescale.\n     */\n\n    const mpegTsInSeconds = MPEGTS / ONE_SECOND_IN_TS;\n    const diff = mpegTsInSeconds - LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      const duration = cue.endTime - cue.startTime;\n      const startTime = this.handleRollover_(cue.startTime + diff, mappingObj.time);\n      cue.startTime = Math.max(startTime, 0);\n      cue.endTime = Math.max(startTime + duration, 0);\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n  /**\n   * MPEG-TS PES timestamps are limited to 2^33.\n   * Once they reach 2^33, they roll over to 0.\n   * mux.js handles PES timestamp rollover for the following scenarios:\n   * [forward rollover(right)] ->\n   *    PES timestamps monotonically increase, and once they reach 2^33, they roll over to 0\n   * [backward rollover(left)] -->\n   *    we seek back to position before rollover.\n   *\n   * According to the HLS SPEC:\n   * When synchronizing WebVTT with PES timestamps, clients SHOULD account\n   * for cases where the 33-bit PES timestamps have wrapped and the WebVTT\n   * cue times have not.  When the PES timestamp wraps, the WebVTT Segment\n   * SHOULD have a X-TIMESTAMP-MAP header that maps the current WebVTT\n   * time to the new (low valued) PES timestamp.\n   *\n   * So we want to handle rollover here and align VTT Cue start/end time to the player's time.\n   */\n\n  handleRollover_(value, reference) {\n    if (reference === null) {\n      return value;\n    }\n    let valueIn90khz = value * ONE_SECOND_IN_TS;\n    const referenceIn90khz = reference * ONE_SECOND_IN_TS;\n    let offset;\n    if (referenceIn90khz < valueIn90khz) {\n      // - 2^33\n      offset = -8589934592;\n    } else {\n      // + 2^33\n      offset = 8589934592;\n    } // distance(value - reference) > 2^32\n\n    while (Math.abs(valueIn90khz - referenceIn90khz) > 4294967296) {\n      valueIn90khz += offset;\n    }\n    return valueIn90khz / ONE_SECOND_IN_TS;\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\nclass SyncInfo {\n  /**\n   * @param {number} start - media sequence start\n   * @param {number} end - media sequence end\n   * @param {number} segmentIndex - index for associated segment\n   * @param {number|null} [partIndex] - index for associated part\n   * @param {boolean} [appended] - appended indicator\n   *\n   */\n  constructor({\n    start,\n    end,\n    segmentIndex,\n    partIndex = null,\n    appended = false\n  }) {\n    this.start_ = start;\n    this.end_ = end;\n    this.segmentIndex_ = segmentIndex;\n    this.partIndex_ = partIndex;\n    this.appended_ = appended;\n  }\n  isInRange(targetTime) {\n    return targetTime >= this.start && targetTime < this.end;\n  }\n  markAppended() {\n    this.appended_ = true;\n  }\n  resetAppendedStatus() {\n    this.appended_ = false;\n  }\n  get isAppended() {\n    return this.appended_;\n  }\n  get start() {\n    return this.start_;\n  }\n  get end() {\n    return this.end_;\n  }\n  get segmentIndex() {\n    return this.segmentIndex_;\n  }\n  get partIndex() {\n    return this.partIndex_;\n  }\n}\nclass SyncInfoData {\n  /**\n   *\n   * @param {SyncInfo} segmentSyncInfo - sync info for a given segment\n   * @param {Array<SyncInfo>} [partsSyncInfo] - sync infos for a list of parts for a given segment\n   */\n  constructor(segmentSyncInfo, partsSyncInfo = []) {\n    this.segmentSyncInfo_ = segmentSyncInfo;\n    this.partsSyncInfo_ = partsSyncInfo;\n  }\n  get segmentSyncInfo() {\n    return this.segmentSyncInfo_;\n  }\n  get partsSyncInfo() {\n    return this.partsSyncInfo_;\n  }\n  get hasPartsSyncInfo() {\n    return this.partsSyncInfo_.length > 0;\n  }\n  resetAppendStatus() {\n    this.segmentSyncInfo_.resetAppendedStatus();\n    this.partsSyncInfo_.forEach(partSyncInfo => partSyncInfo.resetAppendedStatus());\n  }\n}\nclass MediaSequenceSync {\n  constructor() {\n    /**\n     * @type {Map<number, SyncInfoData>}\n     * @protected\n     */\n    this.storage_ = new Map();\n    this.diagnostics_ = '';\n    this.isReliable_ = false;\n    this.start_ = -Infinity;\n    this.end_ = Infinity;\n  }\n  get start() {\n    return this.start_;\n  }\n  get end() {\n    return this.end_;\n  }\n  get diagnostics() {\n    return this.diagnostics_;\n  }\n  get isReliable() {\n    return this.isReliable_;\n  }\n  resetAppendedStatus() {\n    this.storage_.forEach(syncInfoData => syncInfoData.resetAppendStatus());\n  }\n  /**\n   * update sync storage\n   *\n   * @param {Object} playlist\n   * @param {number} currentTime\n   *\n   * @return {void}\n   */\n\n  update(playlist, currentTime) {\n    const {\n      mediaSequence,\n      segments\n    } = playlist;\n    this.isReliable_ = this.isReliablePlaylist_(mediaSequence, segments);\n    if (!this.isReliable_) {\n      return;\n    }\n    return this.updateStorage_(segments, mediaSequence, this.calculateBaseTime_(mediaSequence, segments, currentTime));\n  }\n  /**\n   * @param {number} targetTime\n   * @return {SyncInfo|null}\n   */\n\n  getSyncInfoForTime(targetTime) {\n    for (const {\n      segmentSyncInfo,\n      partsSyncInfo\n    } of this.storage_.values()) {\n      // Normal segment flow:\n      if (!partsSyncInfo.length) {\n        if (segmentSyncInfo.isInRange(targetTime)) {\n          return segmentSyncInfo;\n        }\n      } else {\n        // Low latency flow:\n        for (const partSyncInfo of partsSyncInfo) {\n          if (partSyncInfo.isInRange(targetTime)) {\n            return partSyncInfo;\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getSyncInfoForMediaSequence(mediaSequence) {\n    return this.storage_.get(mediaSequence);\n  }\n  updateStorage_(segments, startingMediaSequence, startingTime) {\n    const newStorage = new Map();\n    let newDiagnostics = '\\n';\n    let currentStart = startingTime;\n    let currentMediaSequence = startingMediaSequence;\n    this.start_ = currentStart;\n    segments.forEach((segment, segmentIndex) => {\n      const prevSyncInfoData = this.storage_.get(currentMediaSequence);\n      const segmentStart = currentStart;\n      const segmentEnd = segmentStart + segment.duration;\n      const segmentIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.segmentSyncInfo && prevSyncInfoData.segmentSyncInfo.isAppended);\n      const segmentSyncInfo = new SyncInfo({\n        start: segmentStart,\n        end: segmentEnd,\n        appended: segmentIsAppended,\n        segmentIndex\n      });\n      segment.syncInfo = segmentSyncInfo;\n      let currentPartStart = currentStart;\n      const partsSyncInfo = (segment.parts || []).map((part, partIndex) => {\n        const partStart = currentPartStart;\n        const partEnd = currentPartStart + part.duration;\n        const partIsAppended = Boolean(prevSyncInfoData && prevSyncInfoData.partsSyncInfo && prevSyncInfoData.partsSyncInfo[partIndex] && prevSyncInfoData.partsSyncInfo[partIndex].isAppended);\n        const partSyncInfo = new SyncInfo({\n          start: partStart,\n          end: partEnd,\n          appended: partIsAppended,\n          segmentIndex,\n          partIndex\n        });\n        currentPartStart = partEnd;\n        newDiagnostics += `Media Sequence: ${currentMediaSequence}.${partIndex} | Range: ${partStart} --> ${partEnd} | Appended: ${partIsAppended}\\n`;\n        part.syncInfo = partSyncInfo;\n        return partSyncInfo;\n      });\n      newStorage.set(currentMediaSequence, new SyncInfoData(segmentSyncInfo, partsSyncInfo));\n      newDiagnostics += `${compactSegmentUrlDescription(segment.resolvedUri)} | Media Sequence: ${currentMediaSequence} | Range: ${segmentStart} --> ${segmentEnd} | Appended: ${segmentIsAppended}\\n`;\n      currentMediaSequence++;\n      currentStart = segmentEnd;\n    });\n    this.end_ = currentStart;\n    this.storage_ = newStorage;\n    this.diagnostics_ = newDiagnostics;\n  }\n  calculateBaseTime_(mediaSequence, segments, fallback) {\n    if (!this.storage_.size) {\n      // Initial setup flow.\n      return 0;\n    }\n    if (this.storage_.has(mediaSequence)) {\n      // Normal flow.\n      return this.storage_.get(mediaSequence).segmentSyncInfo.start;\n    }\n    const minMediaSequenceFromStorage = Math.min(...this.storage_.keys()); // This case captures a race condition that can occur if we switch to a new media playlist that is out of date\n    // and still has an older Media Sequence. If this occurs, we extrapolate backwards to get the base time.\n\n    if (mediaSequence < minMediaSequenceFromStorage) {\n      const mediaSequenceDiff = minMediaSequenceFromStorage - mediaSequence;\n      let baseTime = this.storage_.get(minMediaSequenceFromStorage).segmentSyncInfo.start;\n      for (let i = 0; i < mediaSequenceDiff; i++) {\n        const segment = segments[i];\n        baseTime -= segment.duration;\n      }\n      return baseTime;\n    } // Fallback flow.\n    // There is a gap between last recorded playlist and a new one received.\n\n    return fallback;\n  }\n  isReliablePlaylist_(mediaSequence, segments) {\n    return mediaSequence !== undefined && mediaSequence !== null && Array.isArray(segments) && segments.length;\n  }\n}\nclass DependantMediaSequenceSync extends MediaSequenceSync {\n  constructor(parent) {\n    super();\n    this.parent_ = parent;\n  }\n  calculateBaseTime_(mediaSequence, segments, fallback) {\n    if (!this.storage_.size) {\n      const info = this.parent_.getSyncInfoForMediaSequence(mediaSequence);\n      if (info) {\n        return info.segmentSyncInfo.start;\n      }\n      return 0;\n    }\n    return super.calculateBaseTime_(mediaSequence, segments, fallback);\n  }\n}\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}, {\n  name: 'MediaSequence',\n  /**\n   * run media sequence strategy\n   *\n   * @param {SyncController} syncController\n   * @param {Object} playlist\n   * @param {number} duration\n   * @param {number} currentTimeline\n   * @param {number} currentTime\n   * @param {string} type\n   */\n  run: (syncController, playlist, duration, currentTimeline, currentTime, type) => {\n    const mediaSequenceSync = syncController.getMediaSequenceSync(type);\n    if (!mediaSequenceSync) {\n      return null;\n    }\n    if (!mediaSequenceSync.isReliable) {\n      return null;\n    }\n    const syncInfo = mediaSequenceSync.getSyncInfoForTime(currentTime);\n    if (!syncInfo) {\n      return null;\n    }\n    return {\n      time: syncInfo.start,\n      partIndex: syncInfo.partIndex,\n      segmentIndex: syncInfo.segmentIndex\n    };\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {}; // TODO: this map should be only available for HLS. Since only HLS has MediaSequence.\n    //  For some reason this map helps with syncing between quality switch for MPEG-DASH as well.\n    //  Moreover if we disable this map for MPEG-DASH - quality switch will be broken.\n    //  MPEG-DASH should have its own separate sync strategy\n\n    const main = new MediaSequenceSync();\n    const audio = new DependantMediaSequenceSync(main);\n    const vtt = new DependantMediaSequenceSync(main);\n    this.mediaSequenceStorage_ = {\n      main,\n      audio,\n      vtt\n    };\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   *\n   * @param {string} loaderType\n   * @return {MediaSequenceSync|null}\n   */\n\n  getMediaSequenceSync(loaderType) {\n    return this.mediaSequenceStorage_[loaderType] || null;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime, type) {\n    // Always use VOD sync point for VOD\n    if (duration !== Infinity) {\n      const vodSyncPointStrategy = syncPointStrategies.find(({\n        name\n      }) => name === 'VOD');\n      return vodSyncPointStrategy.run(this, playlist, duration);\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime, type);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // If we have exact match just return it instead of finding the nearest distance\n\n    for (const syncPointInfo of syncPoints) {\n      const {\n        syncPoint,\n        strategy\n      } = syncPointInfo;\n      const {\n        segmentIndex,\n        time\n      } = syncPoint;\n      if (segmentIndex < 0) {\n        continue;\n      }\n      const selectedSegment = playlist.segments[segmentIndex];\n      const start = time;\n      const end = start + selectedSegment.duration;\n      this.logger_(`Strategy: ${strategy}. Current time: ${currentTime}. selected segment: ${segmentIndex}. Time: [${start} -> ${end}]}`);\n      if (currentTime >= start && currentTime < end) {\n        this.logger_('Found sync point with exact match: ', syncPoint);\n        return syncPoint;\n      }\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime, type) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime, type);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      const metadata = {\n        timelineChangeInfo: {\n          from,\n          to\n        }\n      };\n      this.trigger({\n        type: 'timelinechange',\n        metadata\n      });\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.2 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings; // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (!vhs.options_.useForcedSubtitles && mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * A utility class for setting properties and maintaining the state of the content steering manifest.\n *\n * Content Steering manifest format:\n * VERSION: number (required) currently only version 1 is supported.\n * TTL: number in seconds (optional) until the next content steering manifest reload.\n * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.\n * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.\n * PATHWAY-CLONES: array (optional) (HLS only) pathway clone objects to copy from other playlists.\n */\n\nclass SteeringManifest {\n  constructor() {\n    this.priority_ = [];\n    this.pathwayClones_ = new Map();\n  }\n  set version(number) {\n    // Only version 1 is currently supported for both DASH and HLS.\n    if (number === 1) {\n      this.version_ = number;\n    }\n  }\n  set ttl(seconds) {\n    // TTL = time-to-live, default = 300 seconds.\n    this.ttl_ = seconds || 300;\n  }\n  set reloadUri(uri) {\n    if (uri) {\n      // reload URI can be relative to the previous reloadUri.\n      this.reloadUri_ = resolveUrl(this.reloadUri_, uri);\n    }\n  }\n  set priority(array) {\n    // priority must be non-empty and unique values.\n    if (array && array.length) {\n      this.priority_ = array;\n    }\n  }\n  set pathwayClones(array) {\n    // pathwayClones must be non-empty.\n    if (array && array.length) {\n      this.pathwayClones_ = new Map(array.map(clone => [clone.ID, clone]));\n    }\n  }\n  get version() {\n    return this.version_;\n  }\n  get ttl() {\n    return this.ttl_;\n  }\n  get reloadUri() {\n    return this.reloadUri_;\n  }\n  get priority() {\n    return this.priority_;\n  }\n  get pathwayClones() {\n    return this.pathwayClones_;\n  }\n}\n/**\n * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.\n * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and\n * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.\n * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {function} xhr for making a network request from the browser.\n * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.\n */\n\nclass ContentSteeringController extends videojs.EventTarget {\n  constructor(xhr, bandwidth) {\n    super();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = false;\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.currentPathwayClones = new Map();\n    this.nextPathwayClones = new Map();\n    this.excludedSteeringManifestURLs = new Set();\n    this.logger_ = logger('Content Steering');\n    this.xhr_ = xhr;\n    this.getBandwidth_ = bandwidth;\n  }\n  /**\n   * Assigns the content steering tag properties to the steering controller\n   *\n   * @param {string} baseUrl the baseURL from the main manifest for resolving the steering manifest url\n   * @param {Object} steeringTag the content steering tag from the main manifest\n   */\n\n  assignTagProperties(baseUrl, steeringTag) {\n    this.manifestType_ = steeringTag.serverUri ? 'HLS' : 'DASH'; // serverUri is HLS serverURL is DASH\n\n    const steeringUri = steeringTag.serverUri || steeringTag.serverURL;\n    if (!steeringUri) {\n      this.logger_(`steering manifest URL is ${steeringUri}, cannot request steering manifest.`);\n      this.trigger('error');\n      return;\n    } // Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.\n\n    if (steeringUri.startsWith('data:')) {\n      this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',') + 1));\n      return;\n    } // reloadUri is the resolution of the main manifest URL and steering URL.\n\n    this.steeringManifest.reloadUri = resolveUrl(baseUrl, steeringUri); // pathwayId is HLS defaultServiceLocation is DASH\n\n    this.defaultPathway = steeringTag.pathwayId || steeringTag.defaultServiceLocation; // currently only DASH supports the following properties on <ContentSteering> tags.\n\n    this.queryBeforeStart = steeringTag.queryBeforeStart;\n    this.proxyServerUrl_ = steeringTag.proxyServerURL; // trigger a steering event if we have a pathway from the content steering tag.\n    // this tells VHS which segment pathway to start with.\n    // If queryBeforeStart is true we need to wait for the steering manifest response.\n\n    if (this.defaultPathway && !this.queryBeforeStart) {\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Requests the content steering manifest and parse the response. This should only be called after\n   * assignTagProperties was called with a content steering tag.\n   *\n   * @param {string} initialUri The optional uri to make the request with.\n   *    If set, the request should be made with exactly what is passed in this variable.\n   *    This scenario should only happen once on initalization.\n   */\n\n  requestSteeringManifest(initial) {\n    const reloadUri = this.steeringManifest.reloadUri;\n    if (!reloadUri) {\n      return;\n    } // We currently don't support passing MPD query parameters directly to the content steering URL as this requires\n    // ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.\n    // This request URI accounts for manifest URIs that have been excluded.\n\n    const uri = initial ? reloadUri : this.getRequestURI(reloadUri); // If there are no valid manifest URIs, we should stop content steering.\n\n    if (!uri) {\n      this.logger_('No valid content steering manifest URIs. Stopping content steering.');\n      this.trigger('error');\n      this.dispose();\n      return;\n    }\n    const metadata = {\n      contentSteeringInfo: {\n        uri\n      }\n    };\n    this.trigger({\n      type: 'contentsteeringloadstart',\n      metadata\n    });\n    this.request_ = this.xhr_({\n      uri,\n      requestType: 'content-steering-manifest'\n    }, (error, errorInfo) => {\n      if (error) {\n        // If the client receives HTTP 410 Gone in response to a manifest request,\n        // it MUST NOT issue another request for that URI for the remainder of the\n        // playback session. It MAY continue to use the most-recently obtained set\n        // of Pathways.\n        if (errorInfo.status === 410) {\n          this.logger_(`manifest request 410 ${error}.`);\n          this.logger_(`There will be no more content steering requests to ${uri} this session.`);\n          this.excludedSteeringManifestURLs.add(uri);\n          return;\n        } // If the client receives HTTP 429 Too Many Requests with a Retry-After\n        // header in response to a manifest request, it SHOULD wait until the time\n        // specified by the Retry-After header to reissue the request.\n\n        if (errorInfo.status === 429) {\n          const retrySeconds = errorInfo.responseHeaders['retry-after'];\n          this.logger_(`manifest request 429 ${error}.`);\n          this.logger_(`content steering will retry in ${retrySeconds} seconds.`);\n          this.startTTLTimeout_(parseInt(retrySeconds, 10));\n          return;\n        } // If the Steering Manifest cannot be loaded and parsed correctly, the\n        // client SHOULD continue to use the previous values and attempt to reload\n        // it after waiting for the previously-specified TTL (or 5 minutes if\n        // none).\n\n        this.logger_(`manifest failed to load ${error}.`);\n        this.startTTLTimeout_();\n        return;\n      }\n      this.trigger({\n        type: 'contentsteeringloadcomplete',\n        metadata\n      });\n      let steeringManifestJson;\n      try {\n        steeringManifestJson = JSON.parse(this.request_.responseText);\n      } catch (parseError) {\n        const errorMetadata = {\n          errorType: videojs.Error.StreamingContentSteeringParserError,\n          error: parseError\n        };\n        this.trigger({\n          type: 'error',\n          metadata: errorMetadata\n        });\n      }\n      this.assignSteeringProperties_(steeringManifestJson);\n      const parsedMetadata = {\n        contentSteeringInfo: metadata.contentSteeringInfo,\n        contentSteeringManifest: {\n          version: this.steeringManifest.version,\n          reloadUri: this.steeringManifest.reloadUri,\n          priority: this.steeringManifest.priority\n        }\n      };\n      this.trigger({\n        type: 'contentsteeringparsed',\n        metadata: parsedMetadata\n      });\n      this.startTTLTimeout_();\n    });\n  }\n  /**\n   * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.\n   *\n   * @param {string} steeringUrl the steering manifest url\n   * @return the steering manifest url to a proxy server with all parameters set\n   */\n\n  setProxyServerUrl_(steeringUrl) {\n    const steeringUrlObject = new window$1.URL(steeringUrl);\n    const proxyServerUrlObject = new window$1.URL(this.proxyServerUrl_);\n    proxyServerUrlObject.searchParams.set('url', encodeURI(steeringUrlObject.toString()));\n    return this.setSteeringParams_(proxyServerUrlObject.toString());\n  }\n  /**\n   * Decodes and parses the data uri encoded steering manifest\n   *\n   * @param {string} dataUri the data uri to be decoded and parsed.\n   */\n\n  decodeDataUriManifest_(dataUri) {\n    const steeringManifestJson = JSON.parse(window$1.atob(dataUri));\n    this.assignSteeringProperties_(steeringManifestJson);\n  }\n  /**\n   * Set the HLS or DASH content steering manifest request query parameters. For example:\n   * _HLS_pathway=\"<CURRENT-PATHWAY-ID>\" and _HLS_throughput=<THROUGHPUT>\n   * _DASH_pathway and _DASH_throughput\n   *\n   * @param {string} uri to add content steering server parameters to.\n   * @return a new uri as a string with the added steering query parameters.\n   */\n\n  setSteeringParams_(url) {\n    const urlObject = new window$1.URL(url);\n    const path = this.getPathway();\n    const networkThroughput = this.getBandwidth_();\n    if (path) {\n      const pathwayKey = `_${this.manifestType_}_pathway`;\n      urlObject.searchParams.set(pathwayKey, path);\n    }\n    if (networkThroughput) {\n      const throughputKey = `_${this.manifestType_}_throughput`;\n      urlObject.searchParams.set(throughputKey, networkThroughput);\n    }\n    return urlObject.toString();\n  }\n  /**\n   * Assigns the current steering manifest properties and to the SteeringManifest object\n   *\n   * @param {Object} steeringJson the raw JSON steering manifest\n   */\n\n  assignSteeringProperties_(steeringJson) {\n    this.steeringManifest.version = steeringJson.VERSION;\n    if (!this.steeringManifest.version) {\n      this.logger_(`manifest version is ${steeringJson.VERSION}, which is not supported.`);\n      this.trigger('error');\n      return;\n    }\n    this.steeringManifest.ttl = steeringJson.TTL;\n    this.steeringManifest.reloadUri = steeringJson['RELOAD-URI']; // HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional\n\n    this.steeringManifest.priority = steeringJson['PATHWAY-PRIORITY'] || steeringJson['SERVICE-LOCATION-PRIORITY']; // Pathway clones to be created/updated in HLS.\n    // See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n\n    this.steeringManifest.pathwayClones = steeringJson['PATHWAY-CLONES'];\n    this.nextPathwayClones = this.steeringManifest.pathwayClones; // 1. apply first pathway from the array.\n    // 2. if first pathway doesn't exist in manifest, try next pathway.\n    //    a. if all pathways are exhausted, ignore the steering manifest priority.\n    // 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.\n    //    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,\n    //       the excluded pathway will be ignored.\n    //       See excludePathway usage in excludePlaylist().\n    // If there are no available pathways, we need to stop content steering.\n\n    if (!this.availablePathways_.size) {\n      this.logger_('There are no available pathways for content steering. Ending content steering.');\n      this.trigger('error');\n      this.dispose();\n    }\n    const chooseNextPathway = pathwaysByPriority => {\n      for (const path of pathwaysByPriority) {\n        if (this.availablePathways_.has(path)) {\n          return path;\n        }\n      } // If no pathway matches, ignore the manifest and choose the first available.\n\n      return [...this.availablePathways_][0];\n    };\n    const nextPathway = chooseNextPathway(this.steeringManifest.priority);\n    if (this.currentPathway !== nextPathway) {\n      this.currentPathway = nextPathway;\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Returns the pathway to use for steering decisions\n   *\n   * @return {string} returns the current pathway or the default\n   */\n\n  getPathway() {\n    return this.currentPathway || this.defaultPathway;\n  }\n  /**\n   * Chooses the manifest request URI based on proxy URIs and server URLs.\n   * Also accounts for exclusion on certain manifest URIs.\n   *\n   * @param {string} reloadUri the base uri before parameters\n   *\n   * @return {string} the final URI for the request to the manifest server.\n   */\n\n  getRequestURI(reloadUri) {\n    if (!reloadUri) {\n      return null;\n    }\n    const isExcluded = uri => this.excludedSteeringManifestURLs.has(uri);\n    if (this.proxyServerUrl_) {\n      const proxyURI = this.setProxyServerUrl_(reloadUri);\n      if (!isExcluded(proxyURI)) {\n        return proxyURI;\n      }\n    }\n    const steeringURI = this.setSteeringParams_(reloadUri);\n    if (!isExcluded(steeringURI)) {\n      return steeringURI;\n    } // Return nothing if all valid manifest URIs are excluded.\n\n    return null;\n  }\n  /**\n   * Start the timeout for re-requesting the steering manifest at the TTL interval.\n   *\n   * @param {number} ttl time in seconds of the timeout. Defaults to the\n   *        ttl interval in the steering manifest\n   */\n\n  startTTLTimeout_(ttl = this.steeringManifest.ttl) {\n    // 300 (5 minutes) is the default value.\n    const ttlMS = ttl * 1000;\n    this.ttlTimeout_ = window$1.setTimeout(() => {\n      this.requestSteeringManifest();\n    }, ttlMS);\n  }\n  /**\n   * Clear the TTL timeout if necessary.\n   */\n\n  clearTTLTimeout_() {\n    window$1.clearTimeout(this.ttlTimeout_);\n    this.ttlTimeout_ = null;\n  }\n  /**\n   * aborts any current steering xhr and sets the current request object to null\n   */\n\n  abort() {\n    if (this.request_) {\n      this.request_.abort();\n    }\n    this.request_ = null;\n  }\n  /**\n   * aborts steering requests clears the ttl timeout and resets all properties.\n   */\n\n  dispose() {\n    this.off('content-steering');\n    this.off('error');\n    this.abort();\n    this.clearTTLTimeout_();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = null;\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.excludedSteeringManifestURLs = new Set();\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n  }\n  /**\n   * adds a pathway to the available pathways set\n   *\n   * @param {string} pathway the pathway string to add\n   */\n\n  addAvailablePathway(pathway) {\n    if (pathway) {\n      this.availablePathways_.add(pathway);\n    }\n  }\n  /**\n   * Clears all pathways from the available pathways set\n   */\n\n  clearAvailablePathways() {\n    this.availablePathways_.clear();\n  }\n  /**\n   * Removes a pathway from the available pathways set.\n   */\n\n  excludePathway(pathway) {\n    return this.availablePathways_.delete(pathway);\n  }\n  /**\n   * Checks the refreshed DASH manifest content steering tag for changes.\n   *\n   * @param {string} baseURL new steering tag on DASH manifest refresh\n   * @param {Object} newTag the new tag to check for changes\n   * @return a true or false whether the new tag has different values\n   */\n\n  didDASHTagChange(baseURL, newTag) {\n    return !newTag && this.steeringManifest.reloadUri || newTag && (resolveUrl(baseURL, newTag.serverURL) !== this.steeringManifest.reloadUri || newTag.defaultServiceLocation !== this.defaultPathway || newTag.queryBeforeStart !== this.queryBeforeStart || newTag.proxyServerURL !== this.proxyServerUrl_);\n  }\n  getAvailablePathways() {\n    return this.availablePathways_;\n  }\n}\nconst debounce = (callback, wait) => {\n  let timeoutId = null;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n};\nconst ABORT_EARLY_EXCLUSION_SECONDS = 10;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super(); // Adding a slight debounce to avoid duplicate calls during rapid quality changes, for example:\n    // When selecting quality from the quality list,\n    // where we may have multiple bandwidth profiles for the same vertical resolution.\n\n    this.fastQualityChange_ = debounce(this.fastQualityChange_.bind(this), 100);\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices,\n      experimentalUseMMS\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.player_ = options.player_;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    this.usingManagedMediaSource_ = false;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    if (experimentalUseMMS && window$1.ManagedMediaSource) {\n      // Airplay source not yet implemented. Remote playback must be disabled.\n      this.tech_.el_.disableRemotePlayback = true;\n      this.mediaSource = new window$1.ManagedMediaSource();\n      this.usingManagedMediaSource_ = true;\n      videojs.log('Using ManagedMediaSource');\n    } else if (window$1.MediaSource) {\n      this.mediaSource = new window$1.MediaSource();\n    }\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.load = this.load.bind(this);\n    this.pause = this.pause.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_);\n    this.mediaSource.addEventListener('startstreaming', this.load);\n    this.mediaSource.addEventListener('endstreaming', this.pause); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    this.keyStatusMap_ = new Map();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings,\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    })) : new PlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this)\n    }));\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    const getBandwidth = () => {\n      return this.mainSegmentLoader_.bandwidth;\n    };\n    this.contentSteeringController_ = new ContentSteeringController(this.vhs_.xhr, getBandwidth);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist && (playlist.id || playlist.uri);\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      const metadata = {\n        renditionInfo: {\n          id: newId,\n          bandwidth: playlist.attributes.BANDWIDTH,\n          resolution: playlist.attributes.RESOLUTION,\n          codecs: playlist.attributes.CODECS\n        },\n        cause\n      };\n      this.trigger({\n        type: 'renditionselected',\n        metadata\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * A function that ensures we switch our playlists inside of `mediaTypes`\n   * to match the current `serviceLocation` provided by the contentSteering controller.\n   * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.\n   *\n   * This should only be called on a DASH playback scenario while using content steering.\n   * This is necessary due to differences in how media in HLS manifests are generally tied to\n   * a video playlist, where in DASH that is not always the case.\n   */\n\n  switchMediaForDASHContentSteering_() {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      const mediaType = this.mediaTypes_[type];\n      const activeGroup = mediaType ? mediaType.activeGroup() : null;\n      const pathway = this.contentSteeringController_.getPathway();\n      if (activeGroup && pathway) {\n        // activeGroup can be an array or a single group\n        const mediaPlaylists = activeGroup.length ? activeGroup[0].playlists : activeGroup.playlists;\n        const dashMediaPlaylists = mediaPlaylists.filter(p => p.attributes.serviceLocation === pathway); // Switch the current active playlist to the correct CDN\n\n        if (dashMediaPlaylists.length) {\n          this.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);\n        }\n      }\n    });\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // Add content steering listeners on first load and init.\n        this.attachContentSteeringListeners_();\n        this.initContentSteeringController_(); // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      if (this.sourceType_ === 'dash') {\n        // we don't want to re-request the same hls playlist right after it was changed\n        // Initially it was implemented as workaround to restart playlist loader for live\n        // when playlist loader is paused because of playlist exclusions:\n        // see: https://github.com/videojs/http-streaming/pull/1339\n        // but this introduces duplicate \"loadedplaylist\" event.\n        // Ideally we want to re-think playlist loader life-cycle events,\n        // but simply checking \"paused\" state should help a lot\n        if (this.mainPlaylistLoader_.isPaused) {\n          this.mainPlaylistLoader_.load();\n        }\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      if (this.waitingForFastQualityPlaylistReceived_) {\n        this.runFastQualitySwitch_();\n      } else {\n        this.mainSegmentLoader_.load();\n      }\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n    const playlistLoaderEvents = ['manifestrequeststart', 'manifestrequestcomplete', 'manifestparsestart', 'manifestparsecomplete', 'playlistrequeststart', 'playlistrequestcomplete', 'playlistparsestart', 'playlistparsecomplete', 'renditiondisabled', 'renditionenabled'];\n    playlistLoaderEvents.forEach(eventName => {\n      this.mainPlaylistLoader_.on(eventName, metadata => {\n        // trigger directly on the player to ensure early events are fired.\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    if (this.waitingForFastQualityPlaylistReceived_) {\n      this.runFastQualitySwitch_();\n    }\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    }); // There is the possibility of the video segment and the audio segment\n    // at a current time to be on different timelines. When this occurs, the player\n    // forwards playback to a point where these two segment types are back on the same\n    // timeline. This time will be just after the end of the audio segment that is on\n    // a previous timeline.\n\n    this.timelineChangeController_.on('audioTimelineBehind', () => {\n      const segmentInfo = this.audioSegmentLoader_.pendingSegment_;\n      if (!segmentInfo || !segmentInfo.segment || !segmentInfo.segment.syncInfo) {\n        return;\n      } // Update the current time to just after the faulty audio segment.\n      // This moves playback to a spot where both audio and video segments\n      // are on the same timeline.\n\n      const newTime = segmentInfo.segment.syncInfo.end + 0.01;\n      this.tech_.setCurrentTime(newTime);\n    });\n    this.timelineChangeController_.on('fixBadTimelineChange', () => {\n      // pause, reset-everything and load for all segment-loaders\n      this.logger_('Fix bad timeline change. Restarting al segment loaders...');\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.resetEverything();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n        this.audioSegmentLoader_.resetEverything();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n        this.subtitleSegmentLoader_.resetEverything();\n      } // start segment loader loading in case they are paused\n\n      this.load();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n    const segmentLoaderEvents = ['segmentselected', 'segmentloadstart', 'segmentloaded', 'segmentkeyloadstart', 'segmentkeyloadcomplete', 'segmentdecryptionstart', 'segmentdecryptioncomplete', 'segmenttransmuxingstart', 'segmenttransmuxingcomplete', 'segmenttransmuxingtrackinfoavailable', 'segmenttransmuxingtiminginfoavailable', 'segmentappendstart', 'appendsdone', 'bandwidthupdated', 'timelinechange', 'codecschange'];\n    segmentLoaderEvents.forEach(eventName => {\n      this.mainSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n      this.audioSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n      this.subtitleSegmentLoader_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Call pause on our SegmentLoaders\n   */\n\n  pause() {\n    this.mainSegmentLoader_.pause();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media && media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // we would like to avoid race condition when we call fastQuality,\n    // reset everything and start loading segments from prev segments instead of new because new playlist is not received yet\n\n    this.waitingForFastQualityPlaylistReceived_ = true;\n  }\n  runFastQualitySwitch_() {\n    this.waitingForFastQualityPlaylistReceived_ = false;\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream and/or has a start time\n\n    if (!media.endList || media.start) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the\n        // live or start point\n        return false;\n      }\n      const seekableEnd = seekable.end(0);\n      let startPoint = seekableEnd;\n      if (media.start) {\n        const offset = media.start.timeOffset;\n        if (offset < 0) {\n          startPoint = Math.max(seekableEnd + offset, seekable.start(0));\n        } else {\n          startPoint = Math.min(seekableEnd, offset);\n        }\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(startPoint);\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // If we're content steering, try other pathways.\n      if (this.main().contentSteering) {\n        const pathway = this.pathwayAttribute_(playlistToExclude); // Ignore at least 1 steering manifest refresh.\n\n        const reIncludeDelay = this.contentSteeringController_.steeringManifest.ttl * 1000;\n        this.contentSteeringController_.excludePathway(pathway);\n        this.excludeThenChangePathway_();\n        setTimeout(() => {\n          this.contentSteeringController_.addAvailablePathway(pathway);\n        }, reIncludeDelay);\n        return;\n      } // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  getSeekableRange_(playlistLoader, mediaType) {\n    const media = playlistLoader.media();\n    if (!media) {\n      return null;\n    }\n    const mediaSequenceSync = this.syncController_.getMediaSequenceSync(mediaType);\n    if (mediaSequenceSync && mediaSequenceSync.isReliable) {\n      const start = mediaSequenceSync.start;\n      const end = mediaSequenceSync.end;\n      if (!isFinite(start) || !isFinite(end)) {\n        return null;\n      }\n      const liveEdgeDelay = Vhs$1.Playlist.liveEdgeDelay(this.mainPlaylistLoader_.main, media); // Make sure our seekable end is not negative\n\n      const calculatedEnd = Math.max(0, end - liveEdgeDelay);\n      if (calculatedEnd < start) {\n        return null;\n      }\n      return createTimeRanges([[start, calculatedEnd]]);\n    }\n    const expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      return null;\n    }\n    const seekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(this.mainPlaylistLoader_.main, media));\n    return seekable.length ? seekable : null;\n  }\n  computeFinalSeekable_(mainSeekable, audioSeekable) {\n    if (!audioSeekable) {\n      return mainSeekable;\n    }\n    const mainStart = mainSeekable.start(0);\n    const mainEnd = mainSeekable.end(0);\n    const audioStart = audioSeekable.start(0);\n    const audioEnd = audioSeekable.end(0);\n    if (audioStart > mainEnd || mainStart > audioEnd) {\n      // Seekables are far apart, rely on main\n      return mainSeekable;\n    } // Return the overlapping seekable range\n\n    return createTimeRanges([[Math.max(mainStart, audioStart), Math.min(mainEnd, audioEnd)]]);\n  }\n  onSyncInfoUpdate_() {\n    // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    const mainSeekable = this.getSeekableRange_(this.mainPlaylistLoader_, 'main');\n    if (!mainSeekable) {\n      return;\n    }\n    let audioSeekable;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      audioSeekable = this.getSeekableRange_(this.mediaTypes_.AUDIO.activePlaylistLoader, 'audio');\n      if (!audioSeekable) {\n        return;\n      }\n    }\n    const oldSeekable = this.seekable_;\n    this.seekable_ = this.computeFinalSeekable_(mainSeekable, audioSeekable);\n    if (!this.seekable_) {\n      return;\n    }\n    if (oldSeekable && oldSeekable.length && this.seekable_.length) {\n      if (oldSeekable.start(0) === this.seekable_.start(0) && oldSeekable.end(0) === this.seekable_.end(0)) {\n        // Seekable range hasn't changed\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    const metadata = {\n      seekableRanges: this.seekable_\n    };\n    this.trigger({\n      type: 'seekablerangeschanged',\n      metadata\n    });\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    this.contentSteeringController_.dispose();\n    this.keyStatusMap_.clear();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  } // find from and to for codec switch event\n\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec, this.usingManagedMediaSource_) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio, this.usingManagedMediaSource_)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video, this.usingManagedMediaSource_)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n  addDateRangesToTextTrack_(dateRanges) {\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, 'com.apple.streaming', this.tech_);\n    addDateRangeMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      dateRanges\n    });\n  }\n  addMetadataToTextTrack(dispatchType, metadataArray, videoDuration) {\n    const timestampOffset = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray,\n      timestampOffset,\n      videoDuration\n    });\n  }\n  /**\n   * Utility for getting the pathway or service location from an HLS or DASH playlist.\n   *\n   * @param {Object} playlist for getting pathway from.\n   * @return the pathway attribute of a playlist\n   */\n\n  pathwayAttribute_(playlist) {\n    return playlist.attributes['PATHWAY-ID'] || playlist.attributes.serviceLocation;\n  }\n  /**\n   * Initialize available pathways and apply the tag properties.\n   */\n\n  initContentSteeringController_() {\n    const main = this.main();\n    if (!main.contentSteering) {\n      return;\n    }\n    for (const playlist of main.playlists) {\n      this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));\n    }\n    this.contentSteeringController_.assignTagProperties(main.uri, main.contentSteering); // request the steering manifest immediately if queryBeforeStart is set.\n\n    if (this.contentSteeringController_.queryBeforeStart) {\n      // When queryBeforeStart is true, initial request should omit steering parameters.\n      this.contentSteeringController_.requestSteeringManifest(true);\n      return;\n    } // otherwise start content steering after playback starts\n\n    this.tech_.one('canplay', () => {\n      this.contentSteeringController_.requestSteeringManifest();\n    });\n  }\n  /**\n   * Reset the content steering controller and re-init.\n   */\n\n  resetContentSteeringController_() {\n    this.contentSteeringController_.clearAvailablePathways();\n    this.contentSteeringController_.dispose();\n    this.initContentSteeringController_();\n  }\n  /**\n   * Attaches the listeners for content steering.\n   */\n\n  attachContentSteeringListeners_() {\n    this.contentSteeringController_.on('content-steering', this.excludeThenChangePathway_.bind(this));\n    const contentSteeringEvents = ['contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n    contentSteeringEvents.forEach(eventName => {\n      this.contentSteeringController_.on(eventName, metadata => {\n        this.trigger(_extends({}, metadata));\n      });\n    });\n    if (this.sourceType_ === 'dash') {\n      this.mainPlaylistLoader_.on('loadedplaylist', () => {\n        const main = this.main(); // check if steering tag or pathways changed.\n\n        const didDashTagChange = this.contentSteeringController_.didDASHTagChange(main.uri, main.contentSteering);\n        const didPathwaysChange = () => {\n          const availablePathways = this.contentSteeringController_.getAvailablePathways();\n          const newPathways = [];\n          for (const playlist of main.playlists) {\n            const serviceLocation = playlist.attributes.serviceLocation;\n            if (serviceLocation) {\n              newPathways.push(serviceLocation);\n              if (!availablePathways.has(serviceLocation)) {\n                return true;\n              }\n            }\n          } // If we have no new serviceLocations and previously had availablePathways\n\n          if (!newPathways.length && availablePathways.size) {\n            return true;\n          }\n          return false;\n        };\n        if (didDashTagChange || didPathwaysChange()) {\n          this.resetContentSteeringController_();\n        }\n      });\n    }\n  }\n  /**\n   * Simple exclude and change playlist logic for content steering.\n   */\n\n  excludeThenChangePathway_() {\n    const currentPathway = this.contentSteeringController_.getPathway();\n    if (!currentPathway) {\n      return;\n    }\n    this.handlePathwayClones_();\n    const main = this.main();\n    const playlists = main.playlists;\n    const ids = new Set();\n    let didEnablePlaylists = false;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key];\n      const pathwayId = this.pathwayAttribute_(variant);\n      const differentPathwayId = pathwayId && currentPathway !== pathwayId;\n      const steeringExclusion = variant.excludeUntil === Infinity && variant.lastExcludeReason_ === 'content-steering';\n      if (steeringExclusion && !differentPathwayId) {\n        delete variant.excludeUntil;\n        delete variant.lastExcludeReason_;\n        didEnablePlaylists = true;\n      }\n      const noExcludeUntil = !variant.excludeUntil && variant.excludeUntil !== Infinity;\n      const shouldExclude = !ids.has(variant.id) && differentPathwayId && noExcludeUntil;\n      if (!shouldExclude) {\n        return;\n      }\n      ids.add(variant.id);\n      variant.excludeUntil = Infinity;\n      variant.lastExcludeReason_ = 'content-steering'; // TODO: kind of spammy, maybe move this.\n\n      this.logger_(`excluding ${variant.id} for ${variant.lastExcludeReason_}`);\n    });\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      Object.keys(this.mediaTypes_).forEach(key => {\n        const type = this.mediaTypes_[key];\n        if (type.activePlaylistLoader) {\n          const currentPlaylist = type.activePlaylistLoader.media_; // Check if the current media playlist matches the current CDN\n\n          if (currentPlaylist && currentPlaylist.attributes.serviceLocation !== currentPathway) {\n            didEnablePlaylists = true;\n          }\n        }\n      });\n    }\n    if (didEnablePlaylists) {\n      this.changeSegmentPathway_();\n    }\n  }\n  /**\n   * Add, update, or delete playlists and media groups for\n   * the pathway clones for HLS Content Steering.\n   *\n   * See https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n   *\n   * NOTE: Pathway cloning does not currently support the `PER_VARIANT_URIS` and\n   * `PER_RENDITION_URIS` as we do not handle `STABLE-VARIANT-ID` or\n   * `STABLE-RENDITION-ID` values.\n   */\n\n  handlePathwayClones_() {\n    const main = this.main();\n    const playlists = main.playlists;\n    const currentPathwayClones = this.contentSteeringController_.currentPathwayClones;\n    const nextPathwayClones = this.contentSteeringController_.nextPathwayClones;\n    const hasClones = currentPathwayClones && currentPathwayClones.size || nextPathwayClones && nextPathwayClones.size;\n    if (!hasClones) {\n      return;\n    }\n    for (const [id, clone] of currentPathwayClones.entries()) {\n      const newClone = nextPathwayClones.get(id); // Delete the old pathway clone.\n\n      if (!newClone) {\n        this.mainPlaylistLoader_.updateOrDeleteClone(clone);\n        this.contentSteeringController_.excludePathway(id);\n      }\n    }\n    for (const [id, clone] of nextPathwayClones.entries()) {\n      const oldClone = currentPathwayClones.get(id); // Create a new pathway if it is a new pathway clone object.\n\n      if (!oldClone) {\n        const playlistsToClone = playlists.filter(p => {\n          return p.attributes['PATHWAY-ID'] === clone['BASE-ID'];\n        });\n        playlistsToClone.forEach(p => {\n          this.mainPlaylistLoader_.addClonePathway(clone, p);\n        });\n        this.contentSteeringController_.addAvailablePathway(id);\n        continue;\n      } // There have not been changes to the pathway clone object, so skip.\n\n      if (this.equalPathwayClones_(oldClone, clone)) {\n        continue;\n      } // Update a preexisting cloned pathway.\n      // True is set for the update flag.\n\n      this.mainPlaylistLoader_.updateOrDeleteClone(clone, true);\n      this.contentSteeringController_.addAvailablePathway(id);\n    } // Deep copy contents of next to current pathways.\n\n    this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...nextPathwayClones])));\n  }\n  /**\n   * Determines whether two pathway clone objects are equivalent.\n   *\n   * @param {Object} a The first pathway clone object.\n   * @param {Object} b The second pathway clone object.\n   * @return {boolean} True if the pathway clone objects are equal, false otherwise.\n   */\n\n  equalPathwayClones_(a, b) {\n    if (a['BASE-ID'] !== b['BASE-ID'] || a.ID !== b.ID || a['URI-REPLACEMENT'].HOST !== b['URI-REPLACEMENT'].HOST) {\n      return false;\n    }\n    const aParams = a['URI-REPLACEMENT'].PARAMS;\n    const bParams = b['URI-REPLACEMENT'].PARAMS; // We need to iterate through both lists of params because one could be\n    // missing a parameter that the other has.\n\n    for (const p in aParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    for (const p in bParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Changes the current playlists for audio, video and subtitles after a new pathway\n   * is chosen from content steering.\n   */\n\n  changeSegmentPathway_() {\n    const nextPlaylist = this.selectPlaylist();\n    this.pauseLoading(); // Switch audio and text track playlists if necessary in DASH\n\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      this.switchMediaForDASHContentSteering_();\n    }\n    this.switchMedia_(nextPlaylist, 'content-steering');\n  }\n  /**\n   * Iterates through playlists and check their keyId set and compare with the\n   * keyStatusMap, only enable playlists that have a usable key. If the playlist\n   * has no keyId leave it enabled by default.\n   */\n\n  excludeNonUsablePlaylistsByKeyId_() {\n    if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) {\n      return;\n    }\n    let nonUsableKeyStatusCount = 0;\n    const NON_USABLE = 'non-usable';\n    this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n      const keyIdSet = this.mainPlaylistLoader_.getKeyIdSet(playlist); // If the playlist doesn't have keyIDs lets not exclude it.\n\n      if (!keyIdSet || !keyIdSet.size) {\n        return;\n      }\n      keyIdSet.forEach(key => {\n        const USABLE = 'usable';\n        const hasUsableKeyStatus = this.keyStatusMap_.has(key) && this.keyStatusMap_.get(key) === USABLE;\n        const nonUsableExclusion = playlist.lastExcludeReason_ === NON_USABLE && playlist.excludeUntil === Infinity;\n        if (!hasUsableKeyStatus) {\n          // Only exclude playlists that haven't already been excluded as non-usable.\n          if (playlist.excludeUntil !== Infinity && playlist.lastExcludeReason_ !== NON_USABLE) {\n            playlist.excludeUntil = Infinity;\n            playlist.lastExcludeReason_ = NON_USABLE;\n            this.logger_(`excluding playlist ${playlist.id} because the key ID ${key} doesn't exist in the keyStatusMap or is not ${USABLE}`);\n          } // count all nonUsableKeyStatus\n\n          nonUsableKeyStatusCount++;\n        } else if (hasUsableKeyStatus && nonUsableExclusion) {\n          delete playlist.excludeUntil;\n          delete playlist.lastExcludeReason_;\n          this.logger_(`enabling playlist ${playlist.id} because key ID ${key} is ${USABLE}`);\n        }\n      });\n    }); // If for whatever reason every playlist has a non usable key status. Lets try re-including the SD renditions as a failsafe.\n\n    if (nonUsableKeyStatusCount >= this.mainPlaylistLoader_.main.playlists.length) {\n      this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n        const isNonHD = playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height < 720;\n        const excludedForNonUsableKey = playlist.excludeUntil === Infinity && playlist.lastExcludeReason_ === NON_USABLE;\n        if (isNonHD && excludedForNonUsableKey) {\n          // Only delete the excludeUntil so we don't try and re-exclude these playlists.\n          delete playlist.excludeUntil;\n          videojs.log.warn(`enabling non-HD playlist ${playlist.id} because all playlists were excluded due to ${NON_USABLE} key IDs`);\n        }\n      });\n    }\n  }\n  /**\n   * Adds a keystatus to the keystatus map, tries to convert to string if necessary.\n   *\n   * @param {any} keyId the keyId to add a status for\n   * @param {string} status the status of the keyId\n   */\n\n  addKeyStatus_(keyId, status) {\n    const isString = typeof keyId === 'string';\n    const keyIdHexString = isString ? keyId : bufferToHexString(keyId);\n    const formattedKeyIdString = keyIdHexString.slice(0, 32).toLowerCase();\n    this.logger_(`KeyStatus '${status}' with key ID ${formattedKeyIdString} added to the keyStatusMap`);\n    this.keyStatusMap_.set(formattedKeyIdString, status);\n  }\n  /**\n   * Utility function for adding key status to the keyStatusMap and filtering usable encrypted playlists.\n   *\n   * @param {any} keyId the keyId from the keystatuschange event\n   * @param {string} status the key status string\n   */\n\n  updatePlaylistByKeyStatus(keyId, status) {\n    this.addKeyStatus_(keyId, status);\n    if (!this.waitingForFastQualityPlaylistReceived_) {\n      this.excludeNonUsableThenChangePlaylist_();\n    } // Listen to loadedplaylist with a single listener and check for new contentProtection elements when a playlist is updated.\n\n    this.mainPlaylistLoader_.off('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n    this.mainPlaylistLoader_.on('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n  }\n  excludeNonUsableThenChangePlaylist_() {\n    this.excludeNonUsablePlaylistsByKeyId_();\n    this.fastQualityChange_();\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  const metadata = {\n    renditionInfo: {\n      id: playlistID,\n      bandwidth: playlist.attributes.BANDWIDTH,\n      resolution: playlist.attributes.RESOLUTION,\n      codecs: playlist.attributes.CODECS\n    },\n    cause: 'fast-quality'\n  };\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    if (enable) {\n      // call fast quality change only when the playlist is enabled\n      changePlaylistFn(playlist);\n      loader.trigger({\n        type: 'renditionenabled',\n        metadata\n      });\n    } else {\n      loader.trigger({\n        type: 'renditiondisabled',\n        metadata\n      });\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher extends videojs.EventTarget {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    super();\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.playedRanges_ = [];\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      const metadata = {\n        bufferedRanges: buffered\n      };\n      pc.trigger({\n        type: 'bufferedrangeschanged',\n        metadata\n      });\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.playedRanges_.push(createTimeRanges([this.lastRecordedTime, currentTime]));\n      const metadata = {\n        playedRanges: this.playedRanges_\n      };\n      this.playlistController_.trigger({\n        type: 'playedrangeschanged',\n        metadata\n      });\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    const isLLHLS = typeof playlist.partTargetDuration === 'number';\n    if (isLive && (isLLHLS || allowSeeksWithinUnsafeLiveWindow)) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    const metadata = {\n      gapInfo: {\n        from: currentTime,\n        to: nextRange.start(0)\n      }\n    };\n    this.playlistController_.trigger({\n      type: 'gapjumped',\n      metadata\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.16.2\";\nvar version$3 = \"7.1.0\";\nvar version$2 = \"1.3.1\";\nvar version$1 = \"7.2.0\";\nvar version = \"4.0.2\";\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but\n  // the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Adds a request hook to an xhr object\n *\n * @param {Object} xhr object to add the onRequest hook to\n * @param {function} callback hook function for an xhr request\n */\n\nconst addOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    xhr._requestCallbackSet = new Set();\n  }\n  xhr._requestCallbackSet.add(callback);\n};\n/**\n * Adds a response hook to an xhr object\n *\n * @param {Object} xhr object to add the onResponse hook to\n * @param {function} callback hook function for an xhr response\n */\n\nconst addOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    xhr._responseCallbackSet = new Set();\n  }\n  xhr._responseCallbackSet.add(callback);\n};\n/**\n * Removes a request hook on an xhr object, deletes the onRequest set if empty.\n *\n * @param {Object} xhr object to remove the onRequest hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    return;\n  }\n  xhr._requestCallbackSet.delete(callback);\n  if (!xhr._requestCallbackSet.size) {\n    delete xhr._requestCallbackSet;\n  }\n};\n/**\n * Removes a response hook on an xhr object, deletes the onResponse set if empty.\n *\n * @param {Object} xhr object to remove the onResponse hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    return;\n  }\n  xhr._responseCallbackSet.delete(callback);\n  if (!xhr._responseCallbackSet.size) {\n    delete xhr._responseCallbackSet;\n  }\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document$1 || !document$1.createElement) {\n    return false;\n  }\n  const video = document$1.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document$1 || !document$1.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document$1.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n/**\n * A global function for setting an onRequest hook\n *\n * @param {function} callback for request modifiction\n */\n\nVhs.xhr.onRequest = function (callback) {\n  addOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * A global function for setting an onResponse hook\n *\n * @param {callback} callback for response data retrieval\n */\n\nVhs.xhr.onResponse = function (callback) {\n  addOnResponseHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onRequest callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offRequest = function (callback) {\n  removeOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onResponse callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offResponse = function (callback) {\n  removeOnResponseHook(Vhs.xhr, callback);\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document$1, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document$1.fullscreenElement || document$1.webkitFullscreenElement || document$1.mozFullScreenElement || document$1.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  /**\n   * Set VHS options based on options from configuration, as well as partial\n   * options to be passed at a later time.\n   *\n   * @param {Object} options A partial chunk of config options\n   */\n\n  setOptions_(options = {}) {\n    this.options_ = merge(this.options_, options); // defaults\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'customPixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useForcedSubtitles', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    const customPixelRatio = this.options_.customPixelRatio; // Ensure the custom pixel ratio is a number greater than or equal to 0\n\n    if (typeof customPixelRatio === 'number' && customPixelRatio >= 0) {\n      this.customPixelRatio = customPixelRatio;\n    }\n  } // alias for public method to set options\n\n  setOptions(options = {}) {\n    this.setOptions_(options);\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    }; // pass player to allow for player level eventing on construction.\n\n    this.options_.player_ = this.player_;\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.attachStreamingEventListeners_();\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource); // If we are playing HLS with MSE in Safari, add source elements for both the blob and manifest URLs.\n    // The latter will enable Airplay playback on receiver devices.\n\n    if ((videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS) && this.options_.overrideNative && this.options_.sourceType === 'hls' && typeof this.tech_.addSourceElement === 'function') {\n      this.tech_.addSourceElement(this.mediaSourceUrl_);\n      this.tech_.addSourceElement(this.source_.src);\n    } else {\n      this.tech_.src(this.mediaSourceUrl_);\n    }\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      this.playlistController_.updatePlaylistByKeyStatus(e.keyId, e.status);\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_);\n    if (!didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n  /**\n   * Adds the onRequest, onResponse, offRequest and offResponse functions\n   * to the VhsHandler xhr Object.\n   */\n\n  setupXhrHooks_() {\n    /**\n     * A player function for setting an onRequest hook\n     *\n     * @param {function} callback for request modifiction\n     */\n    this.xhr.onRequest = callback => {\n      addOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * A player function for setting an onResponse hook\n     *\n     * @param {callback} callback for response data retrieval\n     */\n\n    this.xhr.onResponse = callback => {\n      addOnResponseHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onRequest callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offRequest = callback => {\n      removeOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onResponse callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offResponse = callback => {\n      removeOnResponseHook(this.xhr, callback);\n    }; // Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.\n    // This allows hooks to be set before the source is set to vhs when handleSource is called.\n\n    this.player_.trigger('xhr-hooks-ready');\n  }\n  attachStreamingEventListeners_() {\n    const playlistControllerEvents = ['seekablerangeschanged', 'bufferedrangeschanged', 'contentsteeringloadstart', 'contentsteeringloadcomplete', 'contentsteeringparsed'];\n    const playbackWatcher = ['gapjumped', 'playedrangeschanged']; // re-emit streaming events and payloads on the player.\n\n    playlistControllerEvents.forEach(eventName => {\n      this.playlistController_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n    playbackWatcher.forEach(eventName => {\n      this.playbackWatcher_.on(eventName, metadata => {\n        this.player_.trigger(_extends({}, metadata));\n      });\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options); // If not opting to experimentalUseMMS, and playback is only supported with MediaSource, cannot handle source\n\n    if (!localOptions.vhs.experimentalUseMMS && !browserSupportsCodec('avc1.4d400d,mp4a.40.2', false)) {\n      return false;\n    }\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.setupXhrHooks_();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if either the native MediaSource or ManagedMediaSource\n * objectx exist and support an MP4 container with both H.264 video\n * and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2', true);\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n  case \"line-left\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n  case \"line-right\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n","function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["require","window","httpResponseHandler","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","getCharset","headers","decode","e","String","fromCharCode","apply","Uint8Array","contentTypeHeader","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","module","exports","_extends","isFunction","InterceptorsStorage","RetryManager","createXHR","httpHandler","requestInterceptorsStorage","responseInterceptorsStorage","retryManager","parseHeaders","result","forEach","row","index","indexOf","key","slice","Array","isArray","push","forEachArray","array","iterator","i","length","isEmpty","obj","hasOwnProperty","initParams","uri","options","params","_createXHR","Error","requestType","getIsEnabled","requestInterceptorPayload","url","body","metadata","retry","timeout","updatedPayload","execute","called","readystatechange","xhr","readyState","setTimeout","loadFunc","getBody","undefined","responseText","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","retryTimeout","aborted","shouldRetry","responseInterceptorPayload","failureResponse","responseUrl","responseURL","responseType","_updatedPayload","moveToNextAttempt","getCurrentFuzzedDelay","status","useXDR","method","rawRequest","getAllResponseHeaders","_updatedPayload2","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","abort","code","setRequestHeader","beforeSend","send","responseXML","firefoxBugTakenEffect","documentElement","nodeName","noop","toUpperCase","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","call","next","bind","_unsupportedIterableToArray","done","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","constructor","name","from","test","arr","len","arr2","this","typeToInterceptorsMap_","Map","enabled_","_proto","enable","disable","reset","addInterceptor","interceptor","has","set","Set","interceptorsSet","get","add","removeInterceptor","delete","clearInterceptorsByType","clear","size","getForType","payload","_step","interceptors","_iterator","maxAttempts_","delayFactor_","fuzzFactor_","initialDelay_","getMaxAttempts","setMaxAttempts","maxAttempts","getDelayFactor","setDelayFactor","delayFactor","getFuzzFactor","setFuzzFactor","fuzzFactor","getInitialDelay","setInitialDelay","initialDelay","createRetry","_temp","_ref","Retry","currentDelay_","currentAttempt_","_proto2","delayDelta","getCurrentDelay","getCurrentMinPossibleDelay","getCurrentMaxPossibleDelay","lowValue","highValue","Math","random","find","list","predicate","ac","item","freeze","object","oc","assign","target","source","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","locator","buildErrorHandler","errorImpl","domBuilder","DOMHandler","errorHandler","isCallback","Function","build","fn","msg","_locator","cdata","position","node","lineNumber","columnNumber","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","defaultNSMap","xmlns","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","xml","normalize","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","arguments","charNode","createCDATASection","createTextNode","skippedEntity","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","splitOnASCIIWhitespace","filter","orderedSetReducer","element","toOrderedSet","keys","arrayIncludes","copy","src","dest","p","Class","Super","pt","t","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","c","charCodeAt","_visitNode","firstChild","nextSibling","Document","ns","_nsMap","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","lastChild","hasValidParentNodeType","nodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","hasDoctypeChildThatIsNotChild","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","_appendSingleChild","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","addSerializedAttribute","qualifiedName","attributes","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","v","attrs2","_ownerElement","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","end","splitText","newText","newNode","defineProperty","getTextContent","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","nameStartChar","nameChar","RegExp","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","entityReplacer","a","k","charAt","parseInt","appendText","xt","m","lineEnd","linePattern","exec","lineStart","parseStack","currentNSMap","closeMap","tagStart","match","config","pop","localNSMap","endMatch","endIgnoreCaseMach","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","max","f","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","pos","lastIndexOf","matchs","lastMatch","endDTD","getLocalName","doccy","topLevel","global","minDoc","document","win","self","string","alert","confirm","prompt","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","parts","reverse","r","DEFAULT_LOCATION","resolveUrl","baseUrl","relativeUrl","href","protocolLess","removeLocation","newUrl","URL","protocol","Stream","listeners","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","atob","Buffer","decodeB64ToUint8Array","b64Text","decodedString","LineStream","super","buffer","nextNewline","TAB","parseByterange","byterangeString","attributeSeparator","keyvalue","parseAttributes","parseResolution","resolution","width","height","ParseStream","customParsers","tagMappers","line","event","newLines","acc","mapper","mappedLine","concat","newLine","tagType","duration","parseFloat","title","number","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","addParser","expression","customType","dataParser","segment","addTagMapper","mapFn","camelCase","str","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","Parser","lineStream","parseStream","mainDefinitions","searchParams","lastProgramDateTime","uris","currentMap","currentUri","hasParts","defaultMediaGroups","widevineUuid","currentTimeline","allowCache","discontinuityStarts","dateRanges","iFramePlaylists","segments","lastByterangeEnd","lastPartByterangeEnd","dateRangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","definitions","def","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","VALID_METHODS","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","getTime","reduceRight","programDateTime","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","dateRange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","attribute","dateRangeWithSameId","findIndex","dateRangeToFind","independentSegments","iFramesOnly","requiredCompatibilityversion","contentSteering","define","addDef","val","QUERYPARAM","decodeURIComponent","VALUE","IMPORT","custom","currentVersion","targetVersion","identifier","missing","chunk","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","profileHex","Number","avcLevelHex","parseCodecs","codecString","codecs","codecType","details","mediaType","codecsFromDefault","master","audioGroupId","AUDIO","audioGroup","audioType","CODECS","isAudioCodec","isTextCodec","getMimeForCodec","container","browserSupportsCodec","withMMS","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","countBits","x","countBytes","ceil","isArrayBufferView","ArrayBuffer","isView","isTypedArray","toUint8","bytes","byteOffset","byteLength","BigInt","BYTE_TABLE","bytesToNumber","Uint16Array","b","_ref$signed","signed","_ref$le","total","byte","exponent","abs","numberToBytes","_temp2","_ref2","_ref2$le","byteCount","byteIndex","bytesToString","escape","stringToBytes","stringIsBytes","unescape","encodeURIComponent","view","concatTypedArrays","_len","buffers","_key","totalLen","tempBuffer","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","aByte","nativeURL","forEachMediaGroup","groups","groupKey","labelKey","mediaProperties","isObject","merge","objects","values","flatten","lists","y","findIndexes","union","keyFunction","errors","INVALID_NUMBER_OF_PERIOD","INVALID_NUMBER_OF_CONTENT_STEERING","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","indexRange","resolvedUri","rangeStr","ranges","startRange","endRange","MAX_SAFE_INTEGER","byteRangeToString","parseEndNumber","endNumber","segmentRange","static","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","Infinity","now","periodStartWC","periodEndWC","segmentCount","availableStart","floor","availableEnd","min","toSegments","startNumber","time","parseByDuration","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","reference","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","sort","findPlaylistWithName","getMediaGroupPlaylists","mediaGroupPlaylists","properties","group","label","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","oldMatchingSegment","positionManifestOnTimeline","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","bandwidth","serviceLocation","SUBTITLES","formatVttPlaylist","m3u8Attributes","vttPlaylist","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","roleLabel","formatted","firstLabel","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","aspectRatio","easyReader","formatVideoPlaylist","frameRate","videoOnly","audioOnly","vttOnly","addMediaSequenceValues","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","eventStream","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captions","Boolean","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","subs","cc","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","identifierReplacement","format","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","segmentsInfo","toPlaylists","representations","findChildren","getContent","textContent","parseDivisionValue","prev","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","buildBaseUrls","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","psshNode","parseCaptionServiceMetadata","flags","opt","toEventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","accessibility","labelVal","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","serverURL","queryBeforeStart","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","mpd","manifestUri","periodNodes","periods","priorPeriod","contentSteeringInfo","representationInfo","stringToMpdXml","manifestString","parser","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","DESCRIPTORS","ID3","getId3Size","returnSize","footerPresent","getId3Offset","normalizePaths","paths","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","subarray","desc","dependsOnEsId","ocrEsId","descriptors","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","complete","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","totalLength","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","findH264Nal","findH265Nal","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","isLikelyTypes","isLikelyFn","isLikely","detectContainerForBytes","isLikelyFmp4MediaSegment","version$6","hooks_","hooks","hook","removeHook","hookOnce","original","wrapper","FullscreenApi","prefixed","apiMap","specApi","browserApi","document$1","history","LogByTypeFactory","log","styles","level","lvl","levels","lvlRegExp","resultName","window$1","info","createLogger$1","delimiter","logByType","createLogger","subName","subDelimiter","subStyles","resultDelimiter","resultStyles","createNewLogger","newName","newDelimiter","newStyles","all","debug","fname","historyItem","log$1","each","initial","accum","isPlain","merge$1","sources","defineLazyProperty","setter","enumerable","writable","configurable","Obj","__proto__","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IS_CHROMECAST_RECEIVER","framework","CastReceiverContext","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","IS_TIZEN","IS_WEBOS","IS_SMART_TV","TOUCH_ENABLED","isReal","maxTouchPoints","UAD","userAgentData","platform","brands","brand","USER_AGENT","userAgent","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","throwIfWhitespace","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","getOwnPropertyNames","propName","appendContent","innerText","prependTo","hasClass","classToCheck","classList","contains","addClass","classesToAdd","removeClass","classesToRemove","toggleClass","classToToggle","className","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","includes","blockTextSelection","focus","unblockTextSelection","getBoundingClientRect","computedStyle","findPosition","offsetParent","left","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","transform","assignedSlot","parentElement","transformValue","matrix","m41","m42","host","boxTarget","box","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","computedStyleValue","getPropertyValue","copyStyleSheetsToWindow","styleSheet","cssRules","rule","cssText","style","head","link","rel","mediaText","Dom","videojs$1","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","createStyleElement","setTextContent","DomData","WeakMap","_initialGuid","_supportsPassive","_guid","newGUID","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","deprecatedProps","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","supportsPassive","passiveEvents","guid","hash","handlersCopy","addEventListener","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","throttled","debounce$1","immediate","cancel","debounced","later","Fn","debounce","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","largs","targetOrType","typeOrListener","evented","eventBusKey","el_","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","isDisposed","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","currentChild","setIcon","iconName","experimentalSvgIcons","xmlnsURL","iconContainer","svgEl","useEl","iconIsSet_","querySelector","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childFound","compEl","parentOptions","handleAdd","playerOptions","workingChildren","Tech","some","wchild","isTech","buildCSSClass","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","currentDimensions","currentWidth","currentHeight","getPositions","boundingClientRect","right","center","blur","handleKeyDown","spatialNavigation","enabled","handleKeyPress","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","idName","cancelName","getIsDisabled","getIsExpresslyInert","inert","getIsFocusable","tabIndex","getIsAvailableToBeFocused","isVisibleStyleProperty","elementStyle","thisVisibility","thisDisplay","invisibleStyle","isBeingRendered","opacity","isVisible","elementCenter","clientWidth","clientHeight","pointContainer","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","timeRangesObj","createTimeRanges$1","defaultImplementation","seconds","guide","h","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","isPromise","then","silencePromise","errorTypes","MEDIA_ERR_CUSTOM","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_ENCRYPTED","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ModalDialog","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","previouslyActiveEl_","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","originalEvent","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","TrackList","tracks_","addTrack","labelchange_","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","AudioTrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","getAbsoluteURL","getFileExtension","splitPathRe","isCrossOrigin","winLoc","origin","Url","parseCues","srcContent","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","XHR","loaded_","TextTrack","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","props","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","setCrossOrigin","error_","played","setScrubbing","_isScrubbing","scrubbing","setCurrentTime","_seconds","trackListChanges","addWebVttScript_","vtt","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","override","overrideNativeVideoTracks","canPlayType","_type","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","setSourceHelper","setTech","mw","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","icons","backKeyCode","SpatialNavKeyCodes","codes","ff","rw","back","isEventKey","keyName","getEventName","STEP_SECONDS$1","SpatialNavigation","focusableComponents","isListening_","isPaused_","onKeyDown_","lastFocusedComponent_","updateFocusableComponents","refocusComponent","handlePlayerFocus_","handlePlayerBlur_","errorDisplay","stop","actualEvent","direction","move","action","performMediaAction_","userSeek_","liveTracker","isLive","nextSeekedFromUser","resume","nextFocusedElement","isChildrenOfPlayer","currentComponent","getCurrentComponent","closest","searchForTrackSelect_","currentTarget","searchForChildrenCandidates","componentsArray","items","findSuitableDOMChild","buttonContainer","modalButtons","searchForSuitableChild","suitableChild","curComp","activeElement","currentFocusedComponent","currentPositions","candidates","isInDirection_","bestCandidate","findBestCandidate_","focusedComponent","currentCenter","minDistance","candidate","candidateCenter","distance","calculateDistance_","srcRect","targetRect","userActive","center1","center2","dx","dy","MediaLoader","j","techOrder","techName","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","clickHandler","PosterImage","update","update_","crossorigin","poster","setSrc","loading","alt","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","hex","tryUpdateStyle","getCSSPositionValue","TextTrackDisplay","updateDisplayTextHandler","updateDisplayHandler","updateDisplayOverlay","toggleDisplay","preselectTrack","screenOrientation","orientation","changeOrientationEvent","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","supports","textTrackDisplay","vjsTextTrackCues","controlBarHeight","controlBar","playerHeight","vjsTextTrackCue","inset","insetStyles","videoHeight","playerWidth","playerAspectRatio","videoAspectRatio","videoWidth","insetInlineMatch","insetBlockMatch","round","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateTextNode_","span","labelText_","textNode_","enableSmoothSeeking","updateContent","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","spatialNavOptions","spatialNavEnabled","horizontalSeek","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","shouldDisableSeekWhileScrubbingOnMobile","disableSeekWhileScrubbingOnMobile","shouldDisableSeekWhileScrubbingOnMobile_","pendingSeekTime_","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","mouseDown","newTime","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","handlePictureInPictureAudioModeChange","isSourceAudio","currentType","isAudioMode","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","enableDocumentPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","validOptions","skipTime","getSkipForwardTime","toLocaleString","skipButtons","forward","currentVideoTime","SkipBackward","getSkipBackwardTime","backward","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","menuItemEl","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","TextTrackSelect","selectLabelledbyIds","legendId","labelId","selectoptions","SelectOptions","optionText","optionId","option","TextTrackFieldset","legendElement","legendText","selects","selectConfig","selectConfigs","selectClassName","textTrackSelect","TextTrackSettingsColors","textTrackComponentid","ElFgColorFieldset","fieldSets","ElBgColorFieldset","ElWinColorFieldset","TextTrackSettingsFont","TrackSettingsControls","defaultsDescription","resetButton","doneButton","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","renderModalComponents","endDialog","setDefaults","persistTextTrackSettings","bindFunctionsToSelectsAndButtons","restoreSettings","textTrackSettingsColors","textTrackSettingsFont","trackSettingsControls","saveSettings","setValues","getItem","setItem","removeItem","ttDisplay","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults$1","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","updateDom_","techEl","techAriaAttrs","techAriaAttr","defaults","initialDisplay","takeFocus","TransientButton","preventScroll","forceDisplayTimeout","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","innerHTML","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","addSourceElement","srcUrl","sourceAttributes","sourceElement","removeSourceElement","sourceElements","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","boundUpdatePlayerHeightOnAudioOnlyMode_","updatePlayerHeightOnAudioOnlyMode_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","hiddenChildren","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","parsedSVG","errorNode","sprite","display","majorVersion","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","deviceClassNames","defaultsStyleEl","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","aspectRatio_","width_","height_","idClass","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","inAllowedEls","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","fullscreen","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","resolve","play_","isSrcReady","isSafariOrIOS","waitToPlay_","isNativeReplay","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","pipContainer","titleBar","requestWindow","pipWindow","pipVideo","hotkeys","excludeElement","isContentEditable","allowedInputTypes","excludedTags","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","stopListeningForErrors","sourceTech","vhs","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","activityCheck","isAudio_","enableAudioOnlyUI_","playerChildren","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","audioOnlyModePromise","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","childName","previousLogLevel_","newRates","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","deprecate","warned","deprecateForMajor","oldName","usingPlugin","hasPlugin","VjsErrors","NetworkBadStatus","NetworkRequestFailed","NetworkRequestAborted","NetworkRequestTimeout","NetworkBodyParserFailed","StreamingHlsPlaylistParserError","StreamingDashManifestParserError","StreamingContentSteeringParserError","StreamingVttParserError","StreamingFailedToSelectNextSegment","StreamingFailedToDecryptSegment","StreamingFailedToTransmuxSegment","StreamingFailedToAppendSegment","StreamingCodecsChangeError","normalizeId","videojs","getPlayer","inShadowDom","getRootNode","rootNode","defaultView","PlayerComponent","getPlayers","nId","getAllPlayers","writeable","mergeOptions","addLanguage","EventTarget","QualityLevel","bitrate","QualityLevelList","levels_","selectedIndex_","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","version$5","initPlugin$1","originalPluginFn","qualityLevels","qualityLevelList","_resolveUrl","resolveManifestRedirect","req","logger","bufferedRangesToString","bufferedRangesStr","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","canUseFudgeFactor","isExactlyAtTheEnd","isExtremelyCloseToTheEnd","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","createPlaylistID","groupID","parseManifest","onwarn","oninfo","customTagParsers","customTagMappers","llhls","customParser","setupMediaPlaylist","playlistErrors_","setupMediaPlaylists","resolveMediaGroupUris","mainForMedia","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","DateRangesStorage","offset_","pendingDateRanges_","processedDateRanges_","setOffset","firstSegment","setPendingDateRanges","trimProcessedDateRanges_","pendingDateRange","processDateRange","getDateRangesToProcess","dateRangeClasses","dateRangesToProcess","classListIndex","QUOTA_EXCEEDED_ERR","getStreamingNetworkErrorMetadata","parseFailure","isBadStatus","isFailure","errorMetadata","isBadStatusOrParseFailure","errorType","timedout","erroType","EventTarget$1","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","updateSegment","skipped","updateSegments","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","playlistMetadataPayload","renditions","PlaylistLoader","logger_","vhs_","addDateRangesToTextTrack_","addDateRangesToTextTrack","vhsOptions","dateRangesStorage_","handleMediaupdatetimeout_","handleLoadedPlaylist_","mediaPlaylist","availableDateRanges","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","playlistObject","playlistInfo","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","parsedPlaylist","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","updateOrDeleteClone","isUpdate","pathway","ID","oldPlaylistUri","oldPlaylistId","newPlaylistUri","createCloneURI_","newPlaylistId","createCloneAttributes_","updatedPlaylist","createClonePlaylist_","updateOrDeleteCloneMedia","oldMediaPlaylist","createClonedMediaGroups_","addClonePathway","basePlaylist","playlistId","baseID","newUri","newPlaylistID","newMediaPlaylist","newProps","baseURI","hostname","HOST","PARAMS","oldAttributes","getKeyIdSet","keyIds","keysystem","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","callAllRequestHooks","requestSet","newOptions","requestCallback","callAllResponseHooks","responseSet","responseCallback","xhrFactory","XhrFunction","beforeRequest","Vhs","_requestCallbackSet","_responseCallbackSet","xhrMethod","beforeRequestOptions","originalAbort","byterangeStr","byterangeEnd","byterangeStart","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","step","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","parseMainXml","mainXml","removeOldMediaGroupLabels","newMain","updateMain","oldMain","noChanges","playlistUpdate","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","filterChangedSidxMappings","videoSidx","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","addMetadataToTextTrack","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","isPaused","requestErrored_","addSidxSegments_","mediaRequest_","fin","parseSidx","REQUEST_TYPE","sidxContainer","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","haveMain_","requestMain_","mainChanged","manifestInfo","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","utcTiming","clientOffset_","serverTime","location","addEventStreamToMetadataTrack_","parsedManifest","mpl","mup","createMUPTimeout_","mediaID","mediaChanged","createMediaUpdateTimeout","metadataArray","eventStreamNode","cueTime","frames","defaultKID","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","stringToArrayBuffer","browserWorkerPolyFill","workerObj","createObjectURL","Blob","blob","BlobBuilder","getBlob","factory","objectUrl","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","pow","getUint64$5","uint8","dv","DataView","getBigUint64","getUint32","numbers","getUint64","MAX_UINT32","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","dts","pts","keyFrame","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","generateSampleTable$1","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","generateSampleTableForFrame","concatenateNalDataForFrame","frameUtils$1","generateSampleTable","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","silence_1","coneOfSilence","ONE_SECOND_IN_TS$4","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","clock$2","ONE_SECOND_IN_TS","clock$1","sumFrameByteLengths","currentObj","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","silentFrame","firstFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","audioFrameUtils$1","ONE_SECOND_IN_TS$3","collectDtsInfo","timelineStartInfo","maxSegmentPts","maxSegmentDts","clearDtsInfo","calculateTrackBaseMediaDecodeTime","scale","trackDecodeInfo$1","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","userIdentifier","parseUserData","sei","parseCaptionPackets","userData","ccData","discardEmulationPreventionBytes$1","emulationPreventionBytesPositions","captionPacketParser","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","get708CharFromCode","newCode","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","toHexString","byteArray","unicode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","indent","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","indentations","isColorPAC","isNormalChar","logWarning","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover$1","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArrayIndexOf$1","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","Iso88591","Utf16","Utf16be","Utf8","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","LINK_MIME_TYPE","pictureType","pictureData","owner","privateData","parseId3Frames$1","frameSize","frameHeader","frameStart","tagSize","hasExtendedHeader","parseId3","parseId3Frames","parseSyncSafeInteger","Stream$5","StreamTypes$3","id3","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","MP2T_PACKET_LENGTH$1","SYNC_BYTE$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","parsePes","pes","ptsDtsFlags","startPrefix","packetLength","forceFlush","packetFlushable","trackId","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","Stream$2","ExpGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","deltaScale","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData$1","percentEncode","parseIso88591","parseAdtsSize","lowThree","middle","highTwo","parseType$5","parseSampleRate","parseAacTimestamp","isLikelyAacData","parseType","Stream$1","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","AUDIO_PROPERTIES$1","audioProperties","VIDEO_PROPERTIES$1","videoProperties","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","inspectMp4","textifyMp4","toUnsigned$3","toHexString$1","bin","toUnsigned","parseType$4","parseType_1","toUnsigned$2","parseType$3","findBox$5","subresults","findBox_1","toUnsigned$1","getUint64$4","parseTfdt$3","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","parseTfhd$2","getUint64$3","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","parseSidx_1","parseSampleFlags$1","parseSampleFlags_1","parseSampleFlags","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTrun$2","numberHelpers","getUint64$2","parseMp4Date","parseType$2","findBox$4","nalParse","avcStream","avcView","dataReferenceIndex","horizresolution","vertresolution","frameCount","depth","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","edts","elst","getUint8","edits","entryCount","mediaTime","mediaRate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","handlerType","nals","modificationTime","streamDescriptor","nextTrackId","pdin","balance","ctts","compositionOffsets","sampleOffset","stss","syncSamples","chunkOffsets","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","graphicsmode","opcolor","ab","inspectedMp4","mp4Inspector","inspect","textify","parseTraf","parseTfdt","parseHdlr","parseTfhd","parseTrun","uint8ToCString$1","curChar","retString","uint8ToCString","getUint64$1","parseEmsgBox","boxData","scheme_id_uri","presentation_time","presentation_time_delta","event_duration","message_data","emsgBox","isValidEmsgBox","scaleTime","timeDelta","emsg","hasScheme","isValidV0Box","isDefined","isValidV1Box","emsg$1","compositionStartTime","getVideoTrackIds","getTracks","getTimescaleFromMediaHeader$1","getEmsgID3","window_1","findBox$3","parseType$1","parseTfhd$1","parseTrun$1","parseTfdt$2","window$2","traks","trafs","lowestTime","baseTime","timescales","trafBoxes","parsedTfhd","parsedTfdt","parsedTrun","videoTrackIds","hdlrs","tkhds","tkhdVersion","codecConfig","codecConfigType","codecBox","segmentData","emsgBoxes","parsedBox","parsedId3Frames","probe$2","getTimescaleFromMediaHeader","findBox$2","getMdatTrafPairs$2","mdats","mdatTrafPairs","matchingTraf","parseSamples$2","truns","allSamples","trackRun","getMdatTrafPairs","parseSamples","findBox$1","parseTfdt$1","getMdatTrafPairs$1","parseSamples$1","mapToSample","approximateOffset","findSeiNals","seiNal","lastMatchedSample","logs","seiNals","matchingSample","parseCaptionNals","videoTrackId","captionNals","pair","headerInfo","parseEmbeddedCaptions","trackNals","CaptionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","parsedData","cachedSegment","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","captionParser","WebVttParser","parseSegment","vttCues","mdatBox","trafBox","tfdtBox","tfhdBox","trunBoxes","mdatOffset","UTF_8","textDecoder","sampleData","vtteBox","vttcBoxes","vttcBox","paylBox","sttgBox","cueText","webvttParser","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","probe$1","StreamTypes","probe","SYNC_BYTE","parsePsi_","table","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","audioTimescale","inspectTs_","isAacData","tsInspector","wireTransmuxerEvents","initArray","postMessage","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","MessageHandlers","pushMp4Captions","trackIds","initMp4WebVttParser","webVttParser","getMp4WebVttText","mp4VttCues","probeMp4StartTime","probeMp4Tracks","probeEmsgID3","id3Frames","emsgData","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","handleData_","transmuxedData","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","triggerSegmentEventFn","waitForEndedTimelineEvent","handleMessage","currentTransmux","dequeue","handleError","segmentInfoPayload","transmuxQueue","processAction","enqueueAction","transmux","createTransmuxer","term","segmentTransmuxer","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","WEB_VTT_CODEC","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","keyInfo","initMp4Text","parseMp4TextSegment","doneFn","parseInitSegment","handleInitSegmentResponse","encryptedBytes","parseError","handleSegmentResponse","newBytes","lastReachedChar","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","finish","probeResult","handleSegmentBytes","bytesAsUint8Array","isFmp4","isMp4TextSegment","audioCodec","videoCodec","finishLoading","decrypt","decryptionWorker","decryptionHandler","decrypted","keyBytes","decryptError","encrypted","decryptSegment","requestId","decryptedBytes","waitForCompletion","didError","segmentFinish","endOfAllRequests","handleLoadEnd","loadendState","abortFn","calledAbortFn","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","keyRequestOptions","keyRequestCallback","keyXhr","differentMapKey","mapKeyRequestOptions","mapKeyRequestCallback","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","customPixelRatio","systemBandwidth","playlistController_","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","concatSegments","segmentObj","compactSegmentUrlDescription","pathname","createCaptionsTrackIfNotExists","inbandTextTracks","captionService","addCaptionData","captionArray","Cue","positionAlign","deprecateOldCue","addMetadata","videoDuration","metadataTrack","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","finiteDuration","nextTime","dateRangeAttr","scte35Out","scte35In","dateRangeKeysToOmit","addDateRangeMetadata","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","removeDuplicateCuesFromTrack","uniqueCues","cueKey","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","getSyncSegmentCandidate","targetTime","timelineSegments","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","timestampOffsetForSegment","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","shouldFixBadTimelineChanges","pendingMainTimelineChange","hasPendingTimelineChanges","differentPendingChanges","isNotInitialPendingTimelineChange","isAudioTimelineBehind","segmentLoader","timelineChangeController_","checkAndFixTimelines","pendingSegment_","waitingForTimelineChange","currentTimeline_","loaderType_","audioDisabled_","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","isEncrypted","ke","isMediaInitialization","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","shouldForceTimestampOffsetAfterResync_","xhrOptions_","pendingSegments_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaSequenceSync_","getMediaSequenceSync","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","clearPendingTimelineChange","monitorBuffer_","abortRequests","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","diagnostics","isLLHLS","resetLoader","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","resetAppendedStatus","isHlsTs","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","isReliable","getSyncInfoFromMediaSequenceSync_","mediaInfoForTime","nextSegment","hasIndependentSegments","lastSegmentLastPart","forceTimestampOffset","generateSegmentInfo_","finalTargetTime","mediaSequenceSyncInfo","getSyncInfoForTime","isAppended","nextMediaSequenceSyncInfo","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","getPendingSegmentPlaylist","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","handleAppendError_","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","segInfo","removeToTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","bandwidthInfo","handleTimeout_","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","markAppended","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","bufferTypes","sourceBuffer","queuePending","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","addSourceBuffer","mime","removeSourceBuffer","changeType","newCodecBase","oldCodec","oldCodecBase","codecsChangeInfo","pushQueue","onUpdateend","bufferedRangesForType","descriptiveString","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","setDuration","uint8ToUtf8","uintArray","bufferToHexString","uInt8Buffer","padStart","VTT_LINE_TERMINATORS","NoVttJsError","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","isMp4WebVttSegmentWithCues","requested","parseVTTCues_","updateTimeMapping_","timelines","isVttType","isTextResult","isFmp4VttSegment","parseMp4VttCues_","vttCue","cueSetting","keyValString","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","mappingObj","mpegTsInSeconds","diff","handleRollover_","firstStart","lastStart","valueIn90khz","referenceIn90khz","findAdCue","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","SyncInfo","appended","start_","end_","segmentIndex_","partIndex_","appended_","isInRange","SyncInfoData","segmentSyncInfo","partsSyncInfo","segmentSyncInfo_","partsSyncInfo_","hasPartsSyncInfo","resetAppendStatus","partSyncInfo","MediaSequenceSync","storage_","diagnostics_","isReliable_","syncInfoData","isReliablePlaylist_","updateStorage_","calculateBaseTime_","getSyncInfoForMediaSequence","startingMediaSequence","startingTime","newStorage","newDiagnostics","currentMediaSequence","prevSyncInfoData","segmentStart","segmentIsAppended","currentPartStart","partStart","partEnd","partIsAppended","fallback","minMediaSequenceFromStorage","DependantMediaSequenceSync","parent_","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","run","mediaSequenceSync","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","mediaSequenceStorage_","vodSyncPointStrategy","syncPoints","runStrategies_","syncPointInfo","strategy","selectedSegment","selectSyncPoint_","getExpiredTime","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","timelineChangeInfo","workerCode","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","tmp","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","audioTrackKind_","stopLoaders","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","segmentLoaders","mainSegmentLoader","activeTrack","activeGroup","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","isMainPlaylist","onGroupChanging","onTrackChanged","lastTrack","pc","selectPlaylist","fastQualityChange_","excludePlaylist","defaultTrack","setupListeners","requestOptions","initialize","variantLabel","useForcedSubtitles","CLOSED-CAPTIONS","groupMatch","variants","groupKeys","groupPropertyList","activeTrack_","setupMediaGroups","audioSegmentLoader","activeAudioGroup","onAudioTrackChanged","createMediaTypes","SteeringManifest","priority_","pathwayClones_","version_","ttl","ttl_","reloadUri","reloadUri_","pathwayClones","ContentSteeringController","currentPathway","defaultPathway","availablePathways_","steeringManifest","proxyServerUrl_","manifestType_","ttlTimeout_","request_","currentPathwayClones","nextPathwayClones","excludedSteeringManifestURLs","xhr_","getBandwidth_","assignTagProperties","steeringTag","serverUri","steeringUri","startsWith","decodeDataUriManifest_","pathwayId","defaultServiceLocation","proxyServerURL","requestSteeringManifest","getRequestURI","errorInfo","retrySeconds","startTTLTimeout_","steeringManifestJson","assignSteeringProperties_","parsedMetadata","contentSteeringManifest","setProxyServerUrl_","steeringUrl","steeringUrlObject","proxyServerUrlObject","encodeURI","setSteeringParams_","dataUri","urlObject","getPathway","networkThroughput","pathwayKey","throughputKey","steeringJson","TTL","chooseNextPathway","pathwaysByPriority","nextPathway","proxyURI","steeringURI","ttlMS","clearTTLTimeout_","addAvailablePathway","clearAvailablePathways","excludePathway","didDASHTagChange","newTag","getAvailablePathways","ABORT_EARLY_EXCLUSION_SECONDS","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","bufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalUseMMS","maxPlaylistRetries","useCueTags_","usingManagedMediaSource_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","disableRemotePlayback","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","keyStatusMap_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","getBandwidth","contentSteeringController_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","shouldSwitchToMedia_","switchMedia_","newId","renditionInfo","switchMediaForDASHContentSteering_","mediaPlaylists","dashMediaPlaylists","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","selectedMedia","attachContentSteeringListeners_","initContentSteeringController_","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","haveJsonSource","handleUpdatedMediaPlaylist","playlistToExclude","waitingForFastQualityPlaylistReceived_","runFastQualitySwitch_","lastExcludeReason_","playlistOutdated","stuckAtPlaylistEnd_","playlistLoaderEvents","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","segmentLoaderEvents","mediaSecondsLoaded_","startPoint","mainMediaInfo","absolutePlaylistEnd","pathwayAttribute_","reIncludeDelay","excludeThenChangePathway_","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","getSeekableRange_","calculatedEnd","computeFinalSeekable_","mainSeekable","audioSeekable","mainStart","mainEnd","audioEnd","oldSeekable","seekableRanges","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","supportFunction","unsupportedCodecs","unsupportedAudio","supporter","variantAudioGroup","switchMessages","newCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","resetContentSteeringController_","contentSteeringEvents","didDashTagChange","didPathwaysChange","availablePathways","newPathways","handlePathwayClones_","didEnablePlaylists","differentPathwayId","steeringExclusion","noExcludeUntil","shouldExclude","changeSegmentPathway_","hasClones","newClone","oldClone","equalPathwayClones_","playlistsToClone","aParams","bParams","excludeNonUsablePlaylistsByKeyId_","nonUsableKeyStatusCount","NON_USABLE","keyIdSet","USABLE","hasUsableKeyStatus","nonUsableExclusion","isNonHD","excludedForNonUsableKey","addKeyStatus_","isString","keyIdHexString","formattedKeyIdString","updatePlaylistByKeyStatus","excludeNonUsableThenChangePlaylist_","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","playedRanges_","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","bufferedRanges","waiting_","playedRanges","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","timeAhead","nextRange","currentRange","livePoint","videoUnderflow","videoUnderflow_","skipTheGap_","allowedEnd","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gapInfo","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$4","version$3","version$2","version$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY","handleVhsMediaChange","handleVhsLoadedMetadata","emeKeySystems","keySystemOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","addOnRequestHook","addOnResponseHook","removeOnRequestHook","removeOnResponseHook","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","onRequest","onResponse","offRequest","offResponse","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","setOptions","playbackWatcherOptions","playbackWatcher_","attachStreamingEventListeners_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","qualityLevels_","convertToProgramTime","setupXhrHooks_","playlistControllerEvents","playbackWatcher","VhsSourceHandler","simpleType","getOverrideNative","canUseMsePlayback","defaultOverrideNative","supportsNativeMediaSources","vttjs","WebVTT","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","consumeCueSettings","region","vals","vals0","integer","lineAlign","snapToLines","skipWhitespace","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","shouldAdd","annotation","rootDiv","tagStack","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","computeLinePos","textTrackList","mediaElement","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","maxPosition","initialAxis","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","intersectArea","getSimpleBoxPosition","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","overlay","paddedOverlay","shouldCompute","hasBeenReset","margin","reportOrThrowError","collectNextLine","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","parseHeader","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","alignSetting","findDirectionSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","SyntaxError","getCueAsHTML","scrollSetting","findScrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","$TypeError","passed","defineBuiltIn","uncurryThis","validateArgumentsLength","$URLSearchParams","URLSearchParams","URLSearchParamsPrototype","$delete","$value","dindex","entriesLength","unsafe","getAll","$has","defineBuiltInAccessor","__esModule"],"sourceRoot":""}